<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="use_temp_dir"><enumeral>true</enumeral></argument>
  <argument name="prerequisites"><set>
    <tuple><text>daqsys.decoder-setup</text><enumeral>PASS</enumeral></tuple>
  </set></argument>
  <argument name="args"><set>
    <text>../options/test-gaudirun.py</text>
    <text>--option</text>
    <text>from PRConfig import TestFileDB; TestFileDB.test_file_db['S20r0p2_stripped_test'].run();from Configurables import LHCbApp,DecodeRawEvent; LHCbApp().EvtMax=10; DecodeRawEvent().OverrideInputs="Stripping20";</text>
  </set></argument>
  <argument name="validator"><text>

countErrorLines({"FATAL":0, "ERROR":0, "WARNING" :0})

# check there are no warnings printed about the configuration
warnlines=[l for l in stdout.split('\n') if l.strip().startswith("# WARNING:") and "DQFLAGS" not in l]
if len(warnlines):
    causes.append("Warning from default configuration found")
    result["daqsys.gaudirun.warnlines"]=result.Quote("\n\t".join(warnlines))

#check there are no info messages which are not useful!
infolines=[l for l in stdout.split('\n') if ("INFO" in l) and ("/RawEvent") in l]# and "L0Emu" not in l]

if len(infolines):
    causes.append("Useless info from default configuration found")
    result["daqsys.gaudirun.infolines"]=result.Quote("\n\t".join(infolines))

</text></argument>
</extension>

