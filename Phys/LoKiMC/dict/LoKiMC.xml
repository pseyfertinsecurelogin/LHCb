<!-- 
     * $Id: LoKiMC.xml,v 1.17 2008-07-10 12:01:48 ibelyaev Exp $ 
     * ========================================================================
     * @file
     * The seleciton file to build Reflex dictionaries for Phys/LoKiMC package
     *
     *  This file is a part of LoKi project - 
     *    "C++ ToolKit  for Smart and Friendly Physics Analysis"
     *
     *  The package has been designed with the kind help from
     *  Galina PAKHLOVA and Sergey BARSUK.  Many bright ideas, 
     *  contributions and advices from G.Raven, J.van Tilburg, 
     *  A.Golutvin, P.Koppenburg have been used in the design.
     *
     * @author Vanya BELYAEV ibelyaev@physics.syr.edu
     * @date 2006-02-06
     * ========================================================================
-->

<lcgdict>

  <class name = "LoKi::MCFinderObj" />
  <class name = "LoKi::MCFinder"    />

  <class pattern   = "LoKi::Range_<*LHCb::MC*>"      />
  <class pattern   = "LoKi::NamedRange_<*LHCb::MC*>" />
  <class pattern   = "LoKi::RangeList_<*LHCb::MC*>"  />
  
  <class pattern   = "LoKi::Keeper<LHCb::MC*>"        />
  <class pattern   = "LoKi::UniqueKeeper<LHCb::MC*>"  />
  <class pattern   = "LoKi::Interface<*>"             />
  
  <class pattern   = "std::unary_function<*LHCb::MC*,double>"          />
  <class pattern   = "std::unary_function<*LHCb::MC*,bool>"            />
  <class pattern   = "std::unary_function<*LHCb::MC*,std::vector<double*>"/>
  <class pattern   = "std::unary_function<*LHCb::MC*,*MC*>"/>
  <class pattern   = "std::binary_function<*LHCb::MC*,*LHCb::MC::*,bool>" />
  

  <class pattern   = "LoKi::Functor<*LHCb::MC*>"            />
  <class pattern   = "LoKi::FunctorFromFunctor<*LHCb::MC*>" />
  <class pattern   = "LoKi::BasicFunctors<*LHCb::MC*>"      />
  
  <class pattern   = "LoKi::Constant<*LHCb::MC*>"         />

  <class pattern   = "LoKi::Valid<*LHCb::MC*>"            />
  <class pattern   = "LoKi::TheSame<*LHCb::MC*>"          />

  <class pattern   = "LoKi::MCParticles::*"                />
  <class pattern   = "LoKi::MCVertices::*"                 />
  
  <function pattern = "LoKi::MCKinematics::*"               />
  <function pattern = "LoKi::MCVertices::*"                 />
  <function pattern = "LoKi::PrintMC:*"                     />
  <function pattern = "LoKi::MCChild::*"                    />
  <function pattern = "LoKi::Dicts::MCAlgs::*"              />
  <function pattern = "LoKi::Dicts::MCFinderDicts::*"       />
  <function name    = "LoKi::Dicts::MCExtract::mcParticles" />


  <class pattern   = "LoKi::Dicts::FuncOps<*LHCb::MC*>"   />
  <class pattern   = "LoKi::Dicts::CutsOps<*LHCb::MC*>"   />
  <class pattern   = "LoKi::Dicts::MapsOps<*LHCb::MC*>"    />
  <class pattern   = "LoKi::Dicts::PipeOps<*LHCb::MC*>"    />
  <class pattern   = "LoKi::Dicts::FunValOps<*LHCb::MC*>"  />
  <class pattern   = "LoKi::Dicts::ElementOps<*LHCb::MC*>" />
  <class pattern   = "LoKi::Dicts::SourceOps<*LHCb::MC*>"  />

  <class pattern   = "LoKi::Dicts::PIDOps<LoKi::MC*>"       />
  <class pattern   = "LoKi::Dicts::FunCalls<LHCb::MC*>"     />
  <class pattern   = "LoKi::Dicts::CutCalls<LHCb::MC*>"     />
  
  <class pattern   = "LoKi::Hybrid::*"          />
  <class pattern   = "LoKi::IMCHybrid*"         />
  
  <exclusion>
    <class name = "std::unary_function<char,bool>"                />
    <class name = "std::unary_function<const char*,bool>"         /> 
    <class name = "std::unary_function<const void*,bool>"         /> 
    <class name = "std::vector<const ContainedObject*>"           /> 
    <class name = "std::vector<const LHCb::MCParticle*>"          /> 
    <class name = "LoKi::MCParticles::IsParticle::Objects"        />  
    <class name = "LoKi::MCParticles::IsContainedObject::Objects" /> 
    <class name = "LoKi::MCParticles::FromMCDecayTree::MCCont"    /> 
    
    <class name = "LoKi::Interface<LoKi::IReporter>"  /> 
    <class name = "LoKi::Interface<GaudiTool>"        /> 
    <class name = "LoKi::Interface<GaudiAlgorithm>"   /> 
    <class name = "LoKi::Interface<LoKi::ILoKiSvc>"   /> 
    <class name = "LoKi::Interface<IDataProviderSvc>" /> 
 </exclusion>
  
</lcgdict>
