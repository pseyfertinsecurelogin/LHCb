<!-- 
     * $Id: LoKiPhys.xml,v 1.23 2009-03-11 10:31:16 ibelyaev Exp $ 
     * ========================================================================
     * @file
     * The seleciton file to build Reflex dictionaries for Phys/LoKiPhys package
     *
     *  This file is a part of LoKi project - 
     *    "C++ ToolKit  for Smart and Friendly Physics Analysis"
     *
     *  The package has been designed with the kind help from
     *  Galina PAKHLOVA and Sergey BARSUK.  Many bright ideas, 
     *  contributions and advices from G.Raven, J.van Tilburg, 
     *  A.Golutvin, P.Koppenburg have been used in the design.
     *
     * @author Vanya BELYAEV ibelyaev@physics.syr.edu
     * @date 2006-02-06
     * ========================================================================
-->

<lcgdict>
  

  <class pattern   = "LoKi::Range_<*LHCb::Particle*>"       />
  <class pattern   = "LoKi::NamedRange_<*LHCb::Particle*>"  />
  <class pattern   = "LoKi::RangeList_<*LHCb::Particle*>"   />
  
  <class pattern   = "LoKi::Keeper<LHCb::Particle*>"        />
  <class pattern   = "LoKi::UniqueKeeper<LHCb::Particle*>"  />
  <class pattern   = "LoKi::Interface<*>"           />
  
  <class pattern   = "LoKi::Range_<*LHCb::*Vertex*>"       />
  <class pattern   = "LoKi::NamedRange_<*LHCb::*Vertex*>"  />
  <class pattern   = "LoKi::RangeList_<*LHCb::*Vertex*>"   />
  
  <class pattern   = "LoKi::Keeper<LHCb::*Vertex*>"        />
  <class pattern   = "LoKi::UniqueKeeper<LHCb::*Vertex*>"  />
  
  <class pattern   = "std::unary_function<*LHCb::Pa*,*LHCb::Pa*>"  />
  <class pattern   = "std::unary_function<*LHCb::Pa*,std::vector*>"  />
  <class pattern   = "std::unary_function<*LHCb::Pa*,double>"  />
  <class pattern   = "std::unary_function<*LHCb::Pa*,bool>"    />
  <class pattern   = "std::unary_function<*LHCb::Ve*,*LHCb::Ve*>"  />
  <class pattern   = "std::unary_function<*LHCb::Ve*,std::vector*>"  />
  <class pattern   = "std::unary_function<*LHCb::Ve*,double>"  />
  <class pattern   = "std::unary_function<*LHCb::Ve*,bool>"    />
  <class pattern   = "std::binary_function<*LHCb::*,*LHCb::*,bool>"  />
  
  <class pattern   = "LoKi::Functor<*LHCb::Pa*>" />
  <class pattern   = "LoKi::Functor<*LHCb::Ve*>" />
  <class pattern   = "LoKi::FunctorFromFunctor<*LHCb::Pa*>" />
  <class pattern   = "LoKi::FunctorFromFunctor<*LHCb::Ve*>" />
  <class pattern   = "LoKi::BasicFunctors<*LHCb::Pa*>" />
  <class pattern   = "LoKi::BasicFunctors<*LHCb::Ve*>" />
  
  <class pattern   = "LoKi::Constant<*LHCb::Pa*>" />
  <class pattern   = "LoKi::Constant<*LHCb::Ve*>" />
  <class pattern   = "LoKi::FunctorFromFunctor<*LHCb::Pa*>" />
  <class pattern   = "LoKi::FunctorFromFunctor<*LHCb::Ve*>" />
  
  <class pattern   = "LoKi::Valid<*LHCb::*>"   />
  <class pattern   = "LoKi::TheSame<*LHCb::*>" />
  <class pattern   = "LoKi::Functors::Empty<*LHCb::*>" />
  <class pattern   = "LoKi::Functors::Size<*LHCb::*>"  />
  
  <class pattern   = "LoKi::Particles::*"                />
  <class pattern   = "LoKi::Vertices::*"                 />
  
  <function pattern = "LoKi::Kinematics::*"              />
  <function pattern = "LoKi::PrintPhys::*"               />
  <function pattern = "LoKi::Child::*"                   />
  <function pattern = "LoKi::Dicts::Extract::*"          />
  <function pattern = "LoKi::Dicts::Algs::*"             />
  <function pattern = "LoKi::Dicts::monitor*"            />
  
  <class pattern   = "LoKi::Dicts::FuncOps<*LHCb::*>"     />
  <class pattern   = "LoKi::Dicts::CutsOps<*LHCb::*>"     />
  <class pattern   = "LoKi::Dicts::FuncOps_<*LHCb::*>"    />
  <class pattern   = "LoKi::Dicts::CutsOps_<*LHCb::*>"    />
  <class pattern   = "LoKi::Dicts::MapsOps<*LHCb::*>"     />
  <class pattern   = "LoKi::Dicts::PipeOps<*LHCb::*>"     />
  <class pattern   = "LoKi::Dicts::FunValOps<*LHCb::*>"   />
  <class pattern   = "LoKi::Dicts::CutValOps<*LHCb::*>"   />
  <class pattern   = "LoKi::Dicts::ElementOps<*LHCb::*>"  />
  <class pattern   = "LoKi::Dicts::SourceOps<*LHCb::*>"   />
  <class pattern   = "LoKi::Dicts::InfoOps<*LHCb::*>"     />
 
  <class pattern   = "LoKi::ExtraInfo::CheckInfo<*>" />
  <class pattern   = "LoKi::ExtraInfo::GetInfo<*>" />

  <class pattern   = "LoKi::Dicts::PIDOps<*LoKi::Pa*>"     />
  <class pattern   = "LoKi::Dicts::FunCalls<*LHCb::Ve*>"   />
  <class pattern   = "LoKi::Dicts::CutCalls<*LHCb::Ve*>"   />
  <class pattern   = "LoKi::Dicts::FunCalls<*LHCb::Pa*>"   />
  <class pattern   = "LoKi::Dicts::CutCalls<*LHCb::Pa*>"   />
  
  <class name = "LoKi::SelectVertex"  />
  
  <class pattern   = "LoKi::*Keeper<*LHCb::Vertex*>"        />
  <class pattern   = "LoKi::*Keeper<*LHCb::RecVertex*>"     />
  <class pattern   = "LoKi::*Keeper<*LHCb::Particle*>"      />
  <class pattern   = "LoKi::*Keeper<*LHCb::ProtoParticle*>" />
  <class pattern   = "LoKi::*Keeper<*LHCb::Track*>"         />

  <class pattern   = "LoKi::Legacy::*"     />
  

  <class name      = "Decays::Trees::Any_<const LHCb::Particle*>" />
  <class name      = "Decays::Trees::Exclusive" />
  <class name      = "Decays::Trees::Inclusive" />
  <class name      = "Decays::Trees::Optional"  />
  <class name      = "LoKi::Dicts::TreeOps<const LHCb::Particle*>" />
  <class name      = "Decays::iTree_<const LHCb::Particle*>" />
  <class name      = "Decays::Tree_<const LHCb::Particle*>"  />
  
  <exclusion>
    
    <class name="std::unary_function<char,bool>"          />
    <class name="std::unary_function<const char*,bool>"   /> 
    <class name="std::unary_function<const void*,bool>"   /> 
    <class name="LoKi::Particles::InvariantMass::Indices" /> 
    <class name="LoKi::Interface<IDataProviderSvc>" /> 
    <class name="LoKi::Interface<LoKi::ILoKiSvc>"   /> 

    <class pattern="LoKi::Particles::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Vertices::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Legacy::*">
      <method name="=" />
    </class>

    <class pattern="LoKi::Dicts::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Interface&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::I*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Hybrid::*">
      <method name="=" />
    </class>
    
    <class pattern="LoKi::Functor&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::Constant&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::Valid&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::TheSame&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::Identity&lt;*&gt;">
      <method name="=" />
    </class>
    
    <class pattern="LoKi::Range_&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::NamedRange_&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::RangeList_&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::Keeper&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::UniqueKeeper&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="std::unary_function&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="std::binary_function&lt;*&gt;">
      <method name="=" />
    </class>

    <class pattern="LoKi::Functors::*">
      <method name="=" />
    </class>
    
    <class pattern="Decays::*">
      <method name="=" />
    </class>

  </exclusion>
  
</lcgdict>
