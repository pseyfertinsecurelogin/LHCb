// $Id: StdPhi2MC.opts,v 1.1 2007-02-23 20:15:39 ibelyaev Exp $ 
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $ 
// ============================================================================
// $Log: not supported by cvs2svn $ 
// ============================================================================
/** @file
 *
 *  Configuration file to build the MC-relation tables for some standard Phi 
 *
 *  Essentially it transate the information from Linker tables into 
 *  usable form of Relation tables
 *
 *  @attention For "Links" associations, the native LoKi way of making 
 *  relations is MUCH MORE EFFICIENT
 *
 *  @see Kernel/Particle2MC.h
 *  @see LoKi_P2MC 
 *  @see LoKi_P2MCW 
 *
 *  @author Vanya BELYAEV ibelyaev@physics.syr.edu
 *  @date 2007-02-23
 */
// ============================================================================
#include "$DAVINCIASSOCIATORSROOT/options/DaVinciAssociators.opts"
// ============================================================================
ApplicationMgr.DLLs   += { "LoKiCore" , "LoKiPhysMC" } ;
ApplicationMgr.ExtSvc += { "LoKiSvc"  } ;
// ============================================================================
// Deal with standard pions 
// ============================================================================
#include "$COMMONPARTICLESROOT/options/StandardPhi.opts"
// ============================================================================
// Instrument Data-On-Demand Service
// ============================================================================
DataOnDemandSvc.AlgMap +=  {
  // Relation table for all standard phis COMPOSITE 
  "Relations/Phys/StdPhi/Composite"   : "LoKi_P2MC/StdPhi2MCComposite"      
} ;
// ============================================================================
// Relation table for all standard pions  CHI2 
// ============================================================================
StdPhi2MCComposite.Inputs =  { 
  "Phys/StdLoosePhi2KK"       
} ;
StdPhi2MCComposite.Method = @Particle2MCMethod.Composite      ;
StdPhi2MCComposite.Output = "Relations/Phys/StdPhi/Composite" ;
// ============================================================================

// ============================================================================
// The END 
// ============================================================================
