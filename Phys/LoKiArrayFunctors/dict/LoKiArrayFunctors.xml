<!-- 
     * $Id: LoKiArrayFunctors.xml,v 1.7 2007-08-27 12:28:07 ibelyaev Exp $ 
     * ========================================================================
     * @file
     * The seleciton file to build Reflex dictionaries for Phys/LoKiExHlt package
     * @author Vanya BELYAEV ibelyaev@physics.syr.edu
     * @date 2006-02-06
     * ========================================================================
-->

<lcgdict>
  
   
  <class pattern   = "std::unary_function<*LHCb::Particle*,double>"          />
  <class pattern   = "std::unary_function<*LHCb::Particle*,bool>"            />
  <class pattern   = "std::binary_function<*LHCb::Particle*,*LHCb::Particle*,bool>" />
  
  <class pattern   = "LoKi::Function<*std::vector*LHCb::Particle*>"         />
  <class pattern   = "LoKi::Predicate<*std::vector*LHCb::Particle*>"       />
  
  <class pattern   = "LoKi::Constant<*std::vector*LHCb::Particle*>"         />
  <class pattern   = "LoKi::BooleanConstant<*std::vector*LHCb::Particle*>"  />
  <class pattern   = "LoKi::PredicateFromPredicate<*std::vector*LHCb::Particle*>"        />
  <class pattern   = "LoKi::FunctionFromFunction<*std::vector*LHCb::Particle*>"          />

  <class pattern   = "LoKi::Valid<*vector*>"            />
  <class pattern   = "LoKi::TheSame<*std::vector*LHCb::Particle*>"  />
  
  <!-- 
       <class pattern   = "LoKi::EqualToValue<*vector*>"     />
       <class pattern   = "LoKi::SimpleSwitch<*vector*>"     />
       <class pattern   = "LoKi::Switch<*vector*>"           />
       
       <class pattern   = "LoKi::PredicateFromTwoPredicates<*std::vector*LHCb::Particle*>"    />
       <class pattern   = "LoKi::PredicateFromTwoFunctions<*std::vector*LHCb::Particle*>"     />
       <class pattern   = "LoKi::FunctionFromTwoFunctions<*std::vector*LHCb::Particle*>"      />
       <class pattern   = "LoKi::PredicateFromFunctionAndValue<*std::vector*LHCb::Particle*>" />
       
       <class pattern   = "LoKi::And<*std::vector*LHCb::Particle*>"              />
       <class pattern   = "LoKi::Or<*std::vector*LHCb::Particle*>"               />
       <class pattern   = "LoKi::Not<*std::vector*LHCb::Particle*>"              />
       
       <class pattern   = "LoKi::Less<*std::vector*LHCb::Particle*>"             />
       <class pattern   = "LoKi::Equal<*std::vector*LHCb::Particle*>"            />
       <class pattern   = "LoKi::LessOrEqual<*std::vector*LHCb::Particle*>"      />
       <class pattern   = "LoKi::NotEqual<*std::vector*LHCb::Particle*>"         />
       
       <class pattern   = "LoKi::Plus<*std::vector*LHCb::Particle*>"             />
       <class pattern   = "LoKi::Minus<*std::vector*LHCb::Particle*>"            />
       <class pattern   = "LoKi::Divide<*std::vector*LHCb::Particle*>"           />
       <class pattern   = "LoKi::Multiply<*std::vector*LHCb::Particle*>"         />
       
       <class pattern   = "LoKi::Min<*std::vector*LHCb::Particle*>"              />
       <class pattern   = "LoKi::Max<*std::vector*LHCb::Particle*>"              />
       
       <class pattern   = "LoKi::ComposeFunction<*std::vector*LHCb::Particle*>"  />
       <class pattern   = "LoKi::ComposeFunction2<*std::vector*LHCb::Particle*>" />
       
       <class pattern   = "LoKi::Compare<*std::vector*LHCb::Particle*>"          />
       
       
       
       <class pattern = "LoKi::Monitoring::Counter<*std::vector*>" />
       <class pattern = "LoKi::Monitoring::Stat<*std::vector*>"    />
       <class pattern = "LoKi::Monitoring::Plot<*std::vector*>"    />
  -->
   
  <class    pattern   = "LoKi::AParticles::*"             />
  <function pattern   = "LoKi::AKinematics::*"             />
  
  <function pattern = "LoKi::AChild::*"                   />
  
  <class pattern   = "LoKi::Dicts::FuncOps<*std::vector*LHCb::Particle*>"    />
  <class pattern   = "LoKi::Dicts::FunCalls<*std::vector*LHCb::Particle*>"   />
  <class pattern   = "LoKi::Dicts::CutCalls<*std::vector*LHCb::Particle*>"   />
  
  <function pattern = "LoKi::Dicts::monitor*"            />

  <class pattern   = "LoKi::IHybrid*"    />
  <class pattern   = "LoKi::Hybrid::*"   />
  
  <exclusion>
    <class name = "std::unary_function<char,bool>"        />
    <class name = "std::unary_function<const char*,bool>" /> 
    <class name = "std::unary_function<const LHCb::Particle * const,bool>" /> 
    <class name = "std::unary_function<const LHCb::Particle * const,double>" /> 
    <class name = "LoKi::AParticles::FourMomentum::Indices" />
  </exclusion>

  
</lcgdict>
