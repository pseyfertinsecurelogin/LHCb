// $Id: HepMC2MC.opts,v 1.4 2006-08-29 11:35:46 ibelyaev Exp $ 
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $, verison $Revision: 1.4 $ 
// ============================================================================

/** @file
 *
 *  Configuration file to run algorithm LoKi_HepMC2MCAlg, which 
 *  on-flight build the relations in between Generator
 *  information in a form of (HepMC::GenParticle) and the output 
 *  Gauss structures (LHCb::MCParticles)
 *
 *  Usage:
 *
 *  @code
 *  
 *  #include "Kernel/HepMC2MC.h"
 *  
 *  ...
 *  typedef LHCb::Relations::HepMC2MC Table ;
 *  
 *  // get the table from TES:
 *  const Table* table = get<Table>( LHCb::HepMC2MCLocation::Default ) ;
 *
 *  const HepMC::GenParticle* B = ... ;
 * 
 *  // get the related MC particles 
 *  Table::Range links = table->relations( B ) ;
 *  // loop over links:
 *  for ( Table:Range::iterator l = links.begin() ; links.end() != l; ++l )
 *   {
 *     // get the related MC particle:
 *     const LHCb::MCParticle* mc = l->to() ;
 *   }
 *
 *  ...
 *  @endcode
 *  @see LHCb::Relations::HepMC2MC
 *
 *  Usage of inverse relations ( MC -> HepMC ) :
 *
 *  @code
 *  
 *  #include "Kernel/HepMC2MC.h"
 *  
 *  ...
 *  typedef LHCb::Relations::HepMC2MC2D Table2D;
 *  typedef LHCb::Relations::MC2HepMC   Table;
 *  
 *  // get the 2D-table from TES:
 *  const Table2D* table2D = get<Table2D>( LHCb::HepMC2MCLocation::Default ) ;
 * 
 *  // get the MC -> HEpMC table: 
 *  const Table* table = table2D->inserse() ;
 * 
 *
 *  const LHCb::MCParticle* B = ... ;
 * 
 *  // get the related HepMC particles 
 *  Table::Range links = table->relations( B ) ;
 *  // loop over links:
 *  for ( Table:Range::iterator l = links.begin() ; links.end() != l; ++l )
 *   {
 *     // get the related HepMC particle:
 *     const HepMC::GenParticle* hepMC = l->to() ;
 *   }
 *
 *  ...
 *  @endcode 
 *  @see LHCb::Relations::HepMC2MC2D
 *  @see LHCb::Relations::MC2HepMC
 *
 *  There exist helpful functions which simplify drastically 
 *  the treatment of such links:
 *  
 *  (A) get all MC-particles from Higgs (Generator!) decay:
 *
 *  @code 
 *  
 *  // 1) get all HepMC particles:
 *  const LHCb::HepMCEvents* events = 
 *      get<LHCb::HepMCEvents>( LHCb::HepMCEventLocation::Default ) ;
 *
 *   // 2) select all Higgses:
 *   // prepare an output container:
 *   typedef std::vector<const HepMC::GenParticle*> GParticles ;
 *   GParticles higgses ;
 *   // select "higgses"
 *   LoKi::Extract::genParticles 
 *      ( events , std::back_inserter( higgses ) , GID = "H_10" ) ;
 * 
 *   // 3) locate  relation table from TES
 *   // get the relation table from TES 
 *   typedef LHCb::Relations_::HepMC2MC2D Table2D ;
 *   typedef LHCb::Relations_::MC2HepMC   Table   ;
 *   const Table2D* table2D = 
 *         get<Table>( LHCb::HepMC2MCLocation::Default ) ;
 *   const Table*   table = table2D->inverse() ;
 *
 *   // 4) create the selector funtor 
 *   MCCut cut = FROMGTREE ( higgses.begin () , higgses.end   () , table ) ; 
 *
 *   // 5a) select MC-particles (e.g. using LoKi::Algo):
 *  MCRange parts = mcselect( "parts" , cut ) ;
 *
 *  @endcode 
 *  @see LHCb::HepMCEvent
 *  @see HepMC::GenParticle
 *  @see LoKi::Cuts::FROMGTREE
 *  @see LHCb::Relations_::HepMC2MC2D
 *  @see LHCb::Relations_::HepMC2MC
 *  @see LHCb::Relations_::MC2HepMC
 *  @see LoKi::Types::MCCut   
 *  @see LoKi::Types::MCRange   
 *
 *  (B) Find all generator ancestor (HepMC) particles 
 *   which produces the given MC-lepton
 *
 *   @code 
 *
 *   const LHCb::MCParticle* lepton = ... ; 
 *
 *   // get the relation table from TES 
 *   typedef LHCb::HepMC2MC Table ;
 *   const Table* table = 
 *         get<Table>( LHCb::HepMC2MCLocation::Default ) ;
 * 
 *   // locate LHCb::HepMCEvents from TES:
 *   const LHCb::HepMCEvents* events = 
 *      get<LHCb::HepMCEvents>( LHCb::HepMCEventLocation::Default ) ;
 * 
 *   // prepare an output container:
 *   typedef std::vector<const HepMC::GenParticle*> GParticles ;
 *   GParticles parts ;
 *  
 *   // create the selector functios:
 *   GCut cut = GMCMOTH( lepton , table ) ;
 *
 *   // select "origins" and save them into the output container
 *   LoKi::Extract::genParticles 
 *      ( events , std::back_inserter( parts ) , cut ) ;
 *
 *   @endcode 
 *   @see LHCb::MCParticle
 *   @see HepMC::GenParticle
 *   @see LHCb::HepMC2MC
 *   @see LoKi::GenParticles::IsAMotherForMC
 *
 *   For location of the table one can use also the tool
 *   This way is possible, but coudl not be recommended:
 *
 *  @code 
 *   
 *  #include "Kernel/IHepMC2MC.h"
 * 
 *  ...
 *  // locate the tool in the "initialize" method:
 *  const IHepMC2MC* m_tool = 
 *      tool<IHepMC2MC> ("LoKi_HepMC2MC/HepMC2MC") ;
 * 
 *  // use the tool in "execute" method:
 *
 *  //   get HepMC -> MC table 
 *  const LHCb::HepMC2MC table1 = m_tool->hepMC2MC() ;
 *  
 *  //   get MC -> HepMC table  
 *  const LHCb::MC2HepMC table2 = m_tool->mc2HepMC() ;
 *
 *  @encode
 *  @see IHepMC2MC 
 *  
 *  This file is a part of LoKi project - 
 *    "C++ ToolKit  for Smart and Friendly Physics Analysis"
 *
 *  The package has been designed with the kind help from
 *  Galina PAKHLOVA and Sergey BARSUK.  Many bright ideas, 
 *  contributions and advices from G.Raven, J.van Tilburg, 
 *  A.Golutvin, P.Koppenburg have been used in the design.
 *
 *  By usage of this code one clearly states the disagreement 
 *  with the campain of Dr.O.Callot at al.: 
 *  "No Vanya's lines are allowed in LHCb/Gaudi software."
 *
 *  @author Vanya BELYAEV ibelyaev@physics.syr.edu
 *  @date 2006-02-08
 */

ApplicationMgr.DLLs   += { "LoKiGenMC"       , "LoKiCore" } ;
ApplicationMgr.ExtSvc += { "DataOnDemandSvc" , "LoKiSvc"  } ;

DataOnDemandSvc.Algorithms += 
  { "DATA='/Event/Relations/Gen/HepMCEvents'       TYPE='LoKi_HepMC2MCAlg/HepMC2MC'" } ;

// ============================================================================
// $Log: not supported by cvs2svn $
// ============================================================================
// The END 
// ============================================================================

 

