// $Id: IJetMaker.cpp,v 1.1.1.1 2009-07-22 20:54:51 jpalac Exp $
// ============================================================================
// CVS tag $Name: not supported by cvs2svn $ , version $Revision: 1.1.1.1 $ 
// ============================================================================
// $Log: not supported by cvs2svn $
// Revision 1.3  2008/04/17 14:46:13  pkoppenb
// PhysDestop save renamed to keep
//
// Revision 1.2  2007/02/06 09:57:56  pkoppenb
// Related PV update
//
// Revision 1.1  2005/07/26 16:26:17  ibelyaev
//  add new abstract interface IJetMaker
// 
// ============================================================================
// Include files
// ============================================================================
// DaVinciKernel
// ============================================================================
#include "Kernel/IJetMaker.h"
// ============================================================================

// ============================================================================
/** @file
 *  Implementation file for class IJetMaker 
 *  @author Vanya BELYAEV Ivan.Belyaev@lapp.in2p3.fr 
 *  @date 2005-07-25
 */
// ============================================================================

// ============================================================================
// anonymous namespace to hide local variables 
// ============================================================================
namespace 
{
  // ==========================================================================
  /** @var IID_IJetMaker 
   *  The unique identifier for IJetMaker interface
   *  @see IInterface
   *  @see InterfaceID
   *  @see IJetMaker 
   */
  // ==========================================================================
  const InterfaceID IID_IJetMaker ( "IJetMaker", 1, 0 ) ;
  // ==========================================================================
};
// ============================================================================

// ============================================================================
/// Return the unique interface identifier 
// ============================================================================
const InterfaceID& IJetMaker::interfaceID() { return IID_IJetMaker ; }
// ============================================================================

// ============================================================================
// virtual and protected destructor 
// ============================================================================
IJetMaker::~IJetMaker () {}; 
// ============================================================================

// ============================================================================
// The END 
// ============================================================================
