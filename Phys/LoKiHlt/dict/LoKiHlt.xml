<!--
    (c) Copyright 2000-2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!-- 
     * ========================================================================
     * @file
     * The XML seleciton file to build Reflex 
     * dictionaries for Phys/LoKiHlt package
     * @author Vanya BELYAEV ibelyaev@physics.syr.edu
     * @date 2007-12-01
     * ========================================================================
-->

<lcgdict>

  <class name = "LoKi::Hybrid::IHltFactory"               />
  <class name = "LoKi::Hybrid::IHltAntiFactory"           />
  <class name = "LoKi::Hybrid::HltEngine"                 />
  <class name = "LoKi::IHDRFilterTool"                    />

  
  <class name = "LoKi::Functor<const LHCb::ODIN*,double>" />
  <class name = "LoKi::Functor<const LHCb::ODIN*,bool>"   />
  
  <class name = "LoKi::FunctorFromFunctor<const LHCb::ODIN*,double>" />
  <class name = "LoKi::FunctorFromFunctor<const LHCb::ODIN*,bool>"   />
  
  <class name = "LoKi::Constant<const LHCb::ODIN*,double>" />
  <class name = "LoKi::Constant<const LHCb::ODIN*,bool>"   />
  
  <class pattern   = "LoKi::Dicts::*Ops<*LHCb::ODIN*>"     />
  <class pattern   = "LoKi::Dicts::*Ops__<*LHCb::ODIN*>"   />
  <class pattern   = "LoKi::Dicts::*Ops_<*LHCb::ODIN*>"    />
  <class pattern   = "LoKi::Dicts::*Calls<*LHCb::ODIN*>"   />
  
  <class pattern   = "LoKi::Odin::*"   />

  <class name = "LoKi::Functor<const LHCb::L0DUReport*,double>" />
  <class name = "LoKi::Functor<const LHCb::L0DUReport*,bool>"   />
  
  <class name = "LoKi::FunctorFromFunctor<const LHCb::L0DUReport*,double>" />
  <class name = "LoKi::FunctorFromFunctor<const LHCb::L0DUReport*,bool>"   />

  <class name = "LoKi::Constant<const LHCb::L0DUReport*,double>" />
  <class name = "LoKi::Constant<const LHCb::L0DUReport*,bool>"   />
  
  <class pattern   = "LoKi::Dicts::*Ops<*LHCb::L0DUReport*>"     />
  <class pattern   = "LoKi::Dicts::*Ops__<*LHCb::L0DUReport*>"   />
  <class pattern   = "LoKi::Dicts::*Ops_<*LHCb::L0DUReport*>"    />
  <class pattern   = "LoKi::Dicts::*Calls<*LHCb::L0DUReport*>"   />

  <class pattern   = "LoKi::L0::*"   />

  <class name = "LoKi::Functor<const LHCb::HltDecReports*,double>" />
  <class name = "LoKi::Functor<const LHCb::HltDecReports*,bool>"   />
  
  <class name = "LoKi::FunctorFromFunctor<const LHCb::HltDecReports*,double>" />
  <class name = "LoKi::FunctorFromFunctor<const LHCb::HltDecReports*,bool>"   />

  <class name = "LoKi::Constant<const LHCb::HltDecReports*,double>" />
  <class name = "LoKi::Constant<const LHCb::HltDecReports*,bool>"   />
  
  <class pattern   = "LoKi::Dicts::*Ops<*LHCb::HltDecReports*>"     />
  <class pattern   = "LoKi::Dicts::*Ops__<*LHCb::HltDecReports*>"   />
  <class pattern   = "LoKi::Dicts::*Ops_<*LHCb::HltDecReports*>"    />
  <class pattern   = "LoKi::Dicts::*Calls<*LHCb::HltDecReports*>"   />

  <class pattern   = "LoKi::HLT::*"        />
  <class name   = "LoKi::Algorithms::Passed" />
  <class name   = "LoKi::Algorithms::AnyPassed" />
  <class name   = "LoKi::Algorithms::AllPassed" />
  <class name   = "LoKi::Algorithms::NumPassed" />
  <class name   = "LoKi::Algorithms::Enabled" />
  <class name   = "LoKi::Algorithms::AnyEnabled" />
  <class name   = "LoKi::Algorithms::AllEnabled" />
  <class name   = "LoKi::Algorithms::NumEnabled" />
  <class name   = "LoKi::Algorithms::Executed" />
  <class name   = "LoKi::Algorithms::AnyExecuted" />
  <class name   = "LoKi::Algorithms::AllExecuted" />
  <class name   = "LoKi::Algorithms::NumExecuted" />
  <class name   = "LoKi::Algorithms::Run" />
  <class name   = "LoKi::Algorithms::RunAll" />

  <class name=            "LoKi::Interface<IAlgorithm>"   />
  <class name="std::vector<LoKi::Interface<IAlgorithm> >" />
    
  <class    name = "LoKi::Numbers::EvtNum"    /> 
  <class    name = "LoKi::Numbers::EvtNumList"/>
  <class    name = "LoKi::Numbers::RunEvt"    />
  <class    name = "LoKi::Numbers::RunEvtList"/>
  <function name = "LoKi::Numbers::add1"      /> 
  <function name = "LoKi::Numbers::add2"      /> 

  <class    name = "LoKi::TES::TESGet" /> 
  
  <exclusion>



    
    <class name="LoKi::HLT::RoutingBits::Bits"     />
    <class name="LoKi::HLT::HasSelection::Names"   />
    <class name="LoKi::HLT::HasDecision::Names"    />
    <class name="LoKi::HLT::DecisionBut::Names"    />
    <class name="LoKi::L0::ChannelDecision::Names" />
    <class name="LoKi::L0::ChannelDecision::Channels" />
    <class name="LoKi::Algorithms::details" /> 
    <class name="LoKi::Odin::RunNumber::run_list" />

    <class pattern="LoKi::HLT::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::L0::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Odin::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Algorithms::*">
      <method name="=" />
    </class>

    <class pattern="LoKi::Dicts::*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Interface&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::I*">
      <method name="=" />
    </class>
    <class pattern="LoKi::Hybrid::*">
      <method name="=" />
    </class>
    
    <class pattern="LoKi::Functor&lt;*&gt;">
      <method name="=" />
    </class>
    <class pattern="LoKi::Constant&lt;*&gt;">
      <method name="=" />
    </class>


    <class pattern="LoKi::HLT::*Regex">
      <method name="=" />
      <method name="expression"   />
      <member name="m_expression" />
    </class>

 </exclusion>
  

</lcgdict>
