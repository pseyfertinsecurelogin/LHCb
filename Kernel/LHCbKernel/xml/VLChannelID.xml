<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">

<gdd>
  <package name = 'LHCbKernel'>
    <class name = 'VLChannelID' 
           author = 'Heinrich Schindler'
           desc = 'This class describes a single VeloLite channel'
           virtual = "FALSE">
      <constructor 
        argList = 'unsigned int sensor, unsigned int strip, VLChannelID::sensorType type'
        desc = 'constructor with strip number, sensor number, and sensor type'>
        <code>
          m_channelID = (sensor &lt;&lt; sensorBits) | (type &lt;&lt; typeBits) | strip;
        </code>
      </constructor>
      <constructor 
        argList = 'int id' 
        initList = 'm_channelID(id)' 
        desc = 'constructor with channel ID'>
        <code></code>
      </constructor>

      <copyconstructor/>
      
      <method name = 'setType' 
              argList = 'VLChannelID::sensorType type'
              desc = 'Set sensor type bits'>
        <code>
          m_channelID &amp;= ~typeMask;
          m_channelID |= ((unsigned long)(type) &lt;&lt; typeBits) &amp; typeMask;
        </code>
      </method>

      <method type = 'LHCb::VLChannelID::sensorType' 
              name = 'type' 
              desc = 'Get sensor type' 
              const = 'TRUE'> 
        <code>
          return sensorType((m_channelID &amp; typeMask) &gt;&gt; typeBits);
        </code>
      </method> 

      <method type = 'bool' 
              name = 'isRType' 
              const = 'TRUE'
              desc = 'Is the channel in an R type sensor'>
        <code>return (VLChannelID::RType == type());</code>
      </method>

      <method type = 'bool' 
              name = 'isPhiType' 
              const = 'TRUE'
              desc = 'Is the channel in a phi type sensor'>
        <code>return (VLChannelID::PhiType == type());</code>
      </method>

      <method type = '' 
              name = 'operator long' 
              const = 'TRUE'  
              desc = 'cast'>
        <code>return m_channelID;</code>
      </method> 
      
      <method type = "std::ostream&amp;" 
              name = "fillStream" 
              virtual = 'FALSE' 
              const = 'TRUE'
              desc = 'Special serializer to ASCII stream'>
        <arg name = "s" type = "std::ostream" inout = "BOTH"/> 
      </method> 

      <enum access = 'PUBLIC'
            name = 'sensorType'
            desc = 'possible types of sensors'
            value = ' Null = 0, RType = 1, PhiType = 2'/>
      
      <attribute type = 'bitfield' name = 'channelID' desc = 'VL Channel ID'>
        <bitfield name = 'strip'  length = '12' desc = 'strip number'/>
        <bitfield name = 'sensor' length =  '8' desc = 'sensor number'/>
        <bitfield name = 'type'   length =  '2' desc = 'sensor type' setMeth = "FALSE" getMeth = "FALSE"/>
      </attribute>

    </class>
  </package>
</gdd>
