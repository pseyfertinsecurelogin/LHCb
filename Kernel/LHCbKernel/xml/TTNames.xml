<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
  <package name='STKernel'>
<!-- ****************************************************************
     * ITNames                                                      *
     ****************************************************************-->

    <class
      author="M Needham"
      desc="" 
      name="TTNames" 
      virtual = "FALSE"
    >   

    <import name = "Kernel/STChannelID"/>

       <enum
        desc="Station names"
        name="Station"
        unknownValue="UnknownStation" 
        strTypConv = "TRUE" 
        value="UnknownStation=0, TTa = 1, TTb = 2"
        access="PUBLIC"
       />
 
       <enum
        desc="Region names"
        name="detRegion"
        strTypConv = "TRUE" 
        unknownValue="UnknownRegion" 
        value="UnknownRegion=0, RegionC=1, RegionB=2, RegionA=3"
        access="PUBLIC"
       />

      <method 
       name = "detector"
       type = "std::string"
       desc = "detector name"
      >
       <code> return "TT" ; </code>
     </method>

      <method
        name = "StationToString"
        type = "std::string"
        argList = "LHCb::STChannelID chan"
        desc = "station string from id"
       > 
        <code> return StationToString(chan.station());</code>
      </method>

    <method
        name = "channelToString"
        type = "std::string"
        argList = "LHCb::STChannelID chan"
        desc = "channel to string from id"> 
      </method>

      <method
        name = "UniqueRegionToString"
        type = "std::string"
        argList = "LHCb::STChannelID chan"
        desc = "unique box string from id"
       > 
        <code> 
         std::string temp = UniqueLayerToString(chan); 
         temp += detRegionToString(chan.detRegion());
         return temp;
        </code>
      </method>

      <method
        name = "UniqueLayerToString"
        type = "std::string"
        argList = "LHCb::STChannelID chan"
        desc = "unique layer string from id"
       >
      </method>

      <method
        name = "UniqueSectorToString"
        type = "std::string"
        argList = "LHCb::STChannelID chan"
        desc = "unique sector string from id"> 

      </method>

  <method
        name = "allStations"
        type = "std::vector &lt; std::string &gt;"
        desc = "vector of string names for all stations"> 
   </method>
 
  <method
        name = "allDetRegions"
        type = "std::vector &lt; std::string &gt;"
        desc = "vector of string names for all regions"> 
   </method>

  <method
        name = "allLayers"
        type = "std::vector &lt; std::string &gt;"
        desc = "vector of string names for all layers"> 
   </method>
 

  <method
        name = "stations"
        type = "std::vector &lt; std::string &gt;"
        desc = "vector of string names for stations"> 
   </method>
 
  <method
        name = "detRegions"
        type = "std::vector &lt; std::string &gt;"
        desc = "vector of string names for regions"> 
   </method>

  <method
        name = "layers"
        type = "std::vector &lt; std::string &gt;"
        desc = "vector of string names for layers"> 
  </method>
 
  <method
    name = "stringToChannel"
    type = "LHCb::STChannelID"
    argList = "std::string name" 
    desc = "convert string to channel" > 
   </method>


  <method
    name = "findStationType"
    type = "unsigned int"
    argList = "const std::string testName, const std::vector&lt;std::string&gt; names" 
    access = "PRIVATE"
    desc = "find type in vector">
    </method>

    <method
    name = "findRegionType"
    type = "unsigned int"
    argList = "const std::string testName, const std::vector&lt;std::string&gt; names" 
    access = "PRIVATE"
    desc = "find type in vector">
    </method>


  <method 
   name = "toInt"
   type = "unsigned int"
   argList = "const std::string&amp; str "
   desc = "convert string to int"
   access = "PRIVATE" 
  >
    </method>

     </class>
  </package>
</gdd>
