<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Test what heppens when you try and read a nonexistent file, verify that the XMLSummary does something sensible in this case.
# Prerequisites: None
# Common failure modes, severities and cures: 
#               . MAJOR: changes here indicate either a major problem with the xmlsumamry, or a major change in how Gaudi handles failed-to-open-files which needs to be incoprorated in the XMLSummary.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="exit_code"><integer>2</integer></argument>
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set><text>../../options/test-XMLSummary-ReadError.py</text></set></argument>
  <argument name="validator"><text>
import re
########################################
#check the produced file, and the stdout
########################################
f=open('../refs/test-XMLSummary-ReadError.xml')
refblock=f.read().split('\n')
sum=None
try:
  sum=open('summary.xml')
except IOError:
  causes.append('XMLsummary missing')
  result['xmlsummarykernel.readerror']=result.Quote('XMLsummary missing')
sumblock=sum.read().split('\n')
########################################
#loop over the reference file
########################################
for l in refblock:
  doBreak=False
  ########################################
  #allow mem to change
  ######################################## 
  if 'MemoryMaximum' in l:
    #pass
    #do something special
    restr=l[:l.find('&gt;')+1]+'.*'+l[l.find('&lt;',l.find('&gt;')):]
    for r in sumblock:
      if 'MemoryMaximum' in r:
        if not re.search(restr,r):
          causes.append('XMLsummary MemoryMaximum error')
          result['xmlsummarykernel.readerror']=result.Quote(restr)
          doBreak=True
    if not re.search(restr,stdout):
      causes.append('XMLsummary MemoryMaximum error')
      result['xmlsummarykernel.readerror']=result.Quote(restr)
      doBreak=True
  ########################################
  #do not allow any other omissions
  ########################################
  else:
    if l not in sumblock:
      causes.append('XMLsummary content error')
      result['xmlsummarykernel.readerror']=result.Quote(l)
      doBreak=True
    if stdout.find(l)==-1:
      causes.append('XMLsummary printout error')
      result['xmlsummarykernel.readerror']=result.Quote(l)
      doBreak=True
  if doBreak: 
    break
</text></argument>
</extension>
