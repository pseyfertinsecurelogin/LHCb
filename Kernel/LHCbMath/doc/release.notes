!-----------------------------------------------------------------------------
! Package     : Kernel/LHCbMath
! Responsible : Vanya Belyaev
! Purpose     : A collection of simple generic classes and functions
!               for geometry and matrix algebra
!               All headers included in directory LHCbMath
!-----------------------------------------------------------------------------

! 2015-07-26 - Vanya Belyaev
 - minor fix 

! 2015-07-25 - Vanya Belyaev
 - improve a bit PDG-style formatting 

! 2015-07-21 - Vanya Belyaev
 - move some useful python code fragments to C++

! 2015-07-20 - Vanya Belyaev
 - pdg_format.py
   simple module, implementing PDG rounding scheme 

   >>> print pdg_format ( 1./3 , 0.0012345 )
   >>> print pdg_format ( 1./3 , 0.0012345 , latex = True )
   >>> print pdg_format2( 1./3 , 0.0012345 , 0.05 )
   >>> print pdg_format ( 1./3 , 0.0012345 , 0.05 , latex = True )


!========================= LHCbMath v3r58 2015-07-20 =========================
! 2015-07-14 - Vanya Belyaev
 - fix test_poly.py

! 2015-07-13 - Vanya Belyaev
 - tiny fix 

! 2015-07-13 - Vanya Belyaev
 - tiny fix 

! 2015-07-12 - Vanya Belyaev
 - small update 

! 2015-07-11 - Vanya Belyaev
 - functions.h/cpp - small update 

! 2015-06-02 - Marco Clemencic
 - Minor change to the fix to similarity timing test.

!========================= LHCbMath v3r57 2015-05-26 =========================
! 2015-05-21 - Ben Couturier
 - Fix warnings in the similarity timing test

!========================= LHCbMath v3r56 2015-04-20 =========================
! 2015-04-11 - Vanya Belyaev
 - and one more fix in bernstein

! 2015-04-10 - Vanya Belyaev
 - minor fix in bernstein

! 2015-04-10 - Vanya Belyaev
 - minor fix in bernstein

! 2015-04-03 - Gerhard Raven
 - use VectorLib to improve Similarity_AVX

! 2015-04-03 - Vanya Belyaev
 - add running counter

! 2015-04-02 - Ben Couturier
 - Added timing test for The Similarity functions

!========================= LHCbMath v3r55 2015-04-01 =========================
! 2015-03-28 - Vanya Belyaev
 - improve numerical stability

! 2015-03-26 - Vanya Belyaev
 - minor reshuffling

! 2015-03-25 - Vanya Belyaev
 - minor reshuffling

! 2015-03-24 - Vanya Belyaev
 - minor update

! 2015-03-19 - Vanya Belyaev
 - minor fix

! 2015-03-17 - Ben Couturier
 - Updated check threshold for TestSimilarity

! 2015-03-16 - Vanya Belyaev
 - remove compilation warning

! 2015-03-15 - Vanya Belyaev
 - update test

! 2015-03-14 - Vanya Belyaev
 - improve numerial stability

! 2015-03-13 - Vanya Belyaev
 - fix stupid recently introduced bug, update tests

! 2015-03-12 - Vanya Belyaev
 - add one more test

! 2015-03-10 -
 - fix a bug in the interration of the product
   of Bernstein polynomial and an exponential function

! 2015-03-09 - Vanya Belyaev
 - add conversions of polynomial bases

! 2015-03-05 - Vanya Belyaev
 - nSphere: use vtd::fast_sincos...
   For real case situation the gain is questionable...

! 2015-03-01 - Manuel Tobias Schiller
 - FastRoots: the code is safe on big endian machines (verified on powerpc),
   so reenable the code for big endian machines

! 2015-02-26 - Manuel Tobias Schiller
 - FastRoots: add protection if this code is ever compiled on big endian
   machines (produces an #error)

! 2015-02-26 - Manuel Tobias Schiller
 - add new header FastRoots.h which implement fast cube and fifth roots and
   their inverses which are accurate to almost the full precision of the
   underlying floating point type, and also a very quick and dirty
   approximation to the hypot function (hypot(x, y) = sqrt(x * x + y * y), the
   approximation of hypot is good to about 4% relative error)

! 2015-02-25 - Vanya Belyaev
 - add dependency on pyanalysis  (needed for test_poly.py)
   question:
    should it be used with -no_auto_imports directive(for CMT?)
     if so, what is the corresponding CMake function?

!========================= LHCbMath v3r54 2015-02-24 =========================
! 2015-02-23 - Vanya Belyaev
 - reshuffle polinomials

! 2015-02-22 - Vanya Belyaev
 - extend a bit VE-math

! 2015-02-21 - Vanya Belyaev
 - impove printout for WStatEntity

! 2015-02-20 - Marco Clemencic
 - fixed the name of the LCG_Interfaces/eigen package

! 2015-02-19 - Chris Jones
 - Turn off the installation of the private Eigen headers.
   Use the LCG version instead.

! 2015-02-18 - Vanya Belyaev
 - make flatte amplitude simpler

! 2015-02-17 - Manuel Tobias Schiller
 - add LHCbMath/PolyEval.h, as a substitute for various hand-written or
   library supplied routines (like GSL's poly-eval); the main feature of this
   implementation is a focus on writing C++ code that will map nicely onto
   CPUs with FMA support and unrolling the loop, so the loop counter needs
   checking only every eight coefficients

! 2015-02-13 - Chris Jones
 - Add -no_auto_imports to the VectorClass CMT usage so downstream packages
   are not forced into attempting to link against it.

! 2015-02-11 - Vanya Belyaev
 - MatrixUtils.h:
     add Gaudi::Math:inverse

! 2015-02-11 - Chris Jones
 - Improve EigenTypes.h
 - Add VectorClassTypes.h
 - Add a new test TestXYZTypes

! 2015-02-10 - Vanya BELYAEV
 - add convex spline

! 2015-02-10 - Vanya Belyaev
 - improve splines

! 2015-02-09 -
 - improve splines ...

! 2015-02-09 -
 - reduce some code duplication

! 2015-02-08 - Vanya Belyaev
 - move bernstein polynomials into separate file.
   add monithonic and convex polynomials

! 2015-02-07 - Chris Jones
 - Use a workaround to install the Eigen headers with CMake.

! 2015-02-06 - Chris Jones
 - Add a new header LHCbMath/EigenTypes.h that contains so wrapper classes
   that make it easier to convert between Gaudi XYZ points and vectors
   and representations based on the Eigen library of vectorised objects.

! 2015-02-05 - Manuel Tobias Schiller
 - add class to calculate fixed order Chebyshev approximations to given
   functions; this class is meant for fast approximations of complicated
   fuctions (prime example is the walk correction in the OT)

! 2015-02-03 - Gerhard Raven
 - Insure that _mm256_zeroupper() is invoked at the boundaries of AVX
   and non-AVX code -- see the discussion in section 12.1 of
   http://www.agner.org/optimize/optimizing_cpp.pdf

! 2015-01-28 - Chris Jones
 - Add a new test application, TestEigenGeometry, to help with testing
   the Eigen package.

! 2015-01-28 - Marco Clemencic
 - Removed Eigen CMakeLists.txt files, because they conflict with the Gaudi
   based CMake configuration.

! 2015-01-27 - Chris Jones
 - Add headers for Eigen v3.2.4 library. This is a TEMPORARY measure, awaiting
   deployment of Eigen within the LCG Externals area, and will be removed
   once the package is available there. Done to allow developments using the
   library to be committed independently of when the LCG release is available.

!========================= LHCbMath v3r53 2015-01-14 =========================
! 2015-01-13 - Gerhard Raven
 - optimize AVX versions of 'average' and 'filter'

! 2015-01-09 - Ben Couturier
 - Add test for Similarity_5_7 and 5_1

! 2015-01-08 - Ben Couturier
 - Fix CMakeLists.txt to build Similarity test

! 2015-01-08 - Gerhard Raven
 - cleanup namespace convention & dispatcher, add 'LHCb::Math::Filter'

! 2015-01-07 - Marco Cattaneo
 - Fix gcc49 unused function warning in Hesse.cpp
 - Fix gcc49 unused local typedef warning in BSpline.cpp

! 2015-01-07 - Gerhard Raven
 - Add generic & initial AVX version of 'average' used in Kalman Bi-Smoother.
   Generalize dispatcher to be able to deal with both void and non-void functions

! 2015-01-07 - Ben Couturier
 - Added Unit test that checks the 5x5 similarity calculation in LHCbMath is
   identical when done on the various instruction sets (SSE3, AVX)

! 2015-01-06 - Gerhard Raven
 - Similarity transforms: clean up dispatching code

! 2015-01-05 - Gerhard Raven
 - Similarity transforms: fix bug in SSE3 dot product, add (5x5) -> (1x1)
   transform. Speed up SSE3 version by computing two dot products simultaneously.

! 2015-01-03 - Gerhard Raven
 - add vectorized (5x5) -> (5x5) and (5x5) -> (7x7) symmetric matrix
   similarity transforms -- these come in three flavours 'generic',
   'SSE3' and 'AVX'; the relevant version is choosen dynamically
   at runtime, on its first invocation.

!========================= LHCbMath v3r52 2014-12-11 =========================
! 2014-12-02 - Vanya Belyaev
 - some improvement in the integration of 2D-polynomials

! 2014-11-30 - Vanya Belyaev
 - add various Splines (B,I,M,..)

! 2014-11-20 - Manuel Tobias Schiller
 - BloomFilter: make various overloads a bit more specific, so compilers don't
   run into trouble

! 2014-10-17 - Manuel Tobias Schiller
 - BloomFilter: trivial change to avoid compiler error at -O0 (no visible
   changes in client code)

!========================= LHCbMath v3r51 2014-10-15 =========================
! 2014-10-15 - Vanya Belyaev
 - Types.py
   fix for ROOT5/ROOT6 issues

! 2014-10-09 - Vanya Belyaev
 - Functions.cpp
   fix stupid typo

! 2014-09-17 - Marco Clemencic
 - Fixed genreflex warnings (ROOT 6).

! 2014-09-12 - Manuel Tobias Schiller
 - BloomFilter: make old clang versions happy

! 2014-09-11 - Manuel Tobias Schiller
 - BloomFilter: be nice and undefine the preprocessor macros which do not have
   the BLOOMFILTER prefix...

! 2014-09-11 - Manuel Tobias Schiller
 - BloomFilter: constexpr is nice, but it's not well supported with the
   version of icc we usually build with, so add the old template based log2
   again for that compiler (this should be REMOVED AS SOON AS THE INTEL AND
   CLANG COMPILERS FULLY SUPPORT CONSTEXPR!)

! 2014-09-10 - Manuel Tobias Schiller
 - BloomFilter: get the constexpr qualifiers correct (icc warning); now that I
   understand about constexpr a bit better, the whole template metaprogrammed
   fixed point log2 story can be replaced by nice and short constexpr functions

!========================= LHCbMath v3r50 2014-09-08 =========================
! 2014-09-02 - Vanya Belyaev
 - Types.py
   fix for missing __iadd__, __isub__ operators
   extend operators for linear-algebra vectors, 3D-points and 3D-vectors
   add new QMTEST

! 2014-09-01 - Manuel Tobias Schiller
 - (hopefully) fix warnings about unneeded semicolons in BloomFilter.h

! 2014-09-01 - Marco Clemencic
 - Fixed CMake configuration.

! 2014-09-01 - Marco Clemencic
 - Fixed compilation problem with head version of ROOT.

! 2014-08-29 - Manuel Tobias Schiller
 - add BloomFilter class
 - add unit test for BloomFilter class
 - steal enough from other packages to make the tests that seem to be there
   run within the QMTest framework, and have it check exit codes (I know this
   is enough for the BloomFilter unit test, as it checks its results and
   aborts, so stdout/stderr is for human consumption; for the other tests, an
   expert should take a good look...)

! 2014-08-25 - Vanya Belyaev
 - add more efficient treatment of normalization integrals

! 2014-08-24 - Vanya Belyaev
 - minor improvements

! 2014-08-23 - Vanya Belyaev
 - few minor fixes in Bukin function

! 2014-08-22 - Vanya Belyaev
 - few minor fixed in Bukin function

! 2014-08-02 - Vanya Belyaev
 - add SinhAsinh function

!========================= LHCbMath v3r49 2014-07-14 =========================
! 2014-06-26 - Vanya Belyaev
 - remove some local functions (non needed anymore)

! 2014-06-26 - Marco Cattaneo
 - fix some clang33 compilation warnings (unused variables)

!========================= LHCbMath v3r48 2014-06-10 =========================
! 2014-06-10 - Vanya Belyaev
 - fix compilation warning

! 2014-06-09 - Vanya Belyaev
 - add more functions

! 2014-06-08 - Vanya Belyaev
 - add weighted statistics

! 2014-06-07 - Vanya Belyaev
 - few minor fixes

! 2014-06-06 - Vanya Belyaev
 - new module

! 2014-06-03 - Vanya Belyaev
 - minor fix

! 2014-06-02 - Vanya Belyaev
 - add few helper math-functions

! 2014-05-28 - Vanya Belyaev
 - Functions.cpp few fixes

! 2014-05-24 - Vanya Belyaev
 - Functions.cpp minor fix

! 2014-05-21 - Marco Cattaneo
 - Use constexpr in Functions.cpp, to fix compilation problem with clang

!========================= LHCbMath v3r47 2014-05-12 =========================
! 2014-05-11 - Vanya Belyaev
 - improve positive polynomials

! 2014-05-10 - Vanya Belyaev
 - improve integration and fix few bugs

! 2014-05-09 - Vanya Belyaev

 - Functions.h:
     1) add integration for 2D non-factorizable models
     2) fix a stupid bug in nSphere
   LHCbMath.h:
     1) add Zero, NonZero and scale functions


! 2014-05-04 - Vanya Belyaev
 - analytical integration of bvernsteins polynomials

!========================= LHCbMath v3r46 2014-03-17 =========================
! 2014-03-16 - Vanya Belyaev
 - add new test to illustrate #bug 104111

!========================= LHCbMath v3r45 2014-02-17 =========================
! 2014-01-25 - Vanya Belyaev
 - add jackknife estimator

! 2014-01-22 - Vanya Belyaev
 - fix bug in NSphere+Positive

! 2014-01-21 - Vanya Belyaev
 - improve positive polinomials with n-sphere parameterization

! 2014-01-21 - Vanya Belyaev

 - ValueWithError
    minor fix to resolve python ambguities

! 2014-01-13 - Vanya Belyaev
 - a bit more functions

! 2014-01-06 - Marco Clemencic
 - Replaced import of GaudiPython with import of cppyy (to allow usage of the
   modules in configuration files).

! 2013-12-20 - Marco Clemencic
 - Restored backward compatibility to Gaudi v24.

! 2013-11-07 - Marco Clemencic
 - Renamed the dummy class __Instantiations to have a unique name (for ROOT 6).

! 2013-11-07 - Marco Clemencic
 - Added work-around for autoloading dictionary of templates in ROOT 6.

! 2013-11-07 - Marco Clemencic
 - Restore the use of GaudiPython in Types.py and Math.py to facilitate the
   transition to ROOT 6.

!========================= LHCbMath v3r44 2013-12-09 =========================
! 2013-12-03 - Sasha Baranov
 - Add utf-8 coding string(PEP 0263) to python files

! 2013-11-23 - Vanya Belyaev
 - adjust a bit Bugg&Co family of functions

! 2013-11-16 - Vanya Belyaev
 - adjust alpha in Crystal Ball

! 2013-10-27 - Vanya Belyaev
 - add few math-functions for phase space modulated by polynomial

!========================= LHCbMath v3r43 2013-10-23 =========================
! 2013-10-05 - Vanya Belyaev
 - add few math-functions

!========================= LHCbMath v3r42 2013-09-30 =========================
! 2013-08-28 - Vanya Belyaev
 - add more useful functions

!========================= LHCbMath v3r41 2013-07-17 =========================
! 2013-07-11 - Vanya Belyaev
 - python/LHCbMath/Types.py
   python/LHCbMath/Math.py

   eliminate unnesessary imports from GaudiPython

! 2013-06-17 - Marco Cattaneo
 - Remove Gaudi::Math::invertPosDefSymMatrix altogether

! 2013-06-14 - Marco Cattaneo
 - Replace use of obsolete wrapper class Gaudi::Math::invertPosDefSymMatrix
   with direct call to SMatrix InvertChol() method. Fixes gcc48 warning

!========================= LHCbMath v3r40 2013-06-03 =========================
! 2013-05-18 - Vanya Belyaev
 - Types.py: minor fix in symmatrix alias

! 2013-05-12 - Vanya Belyaev
 - add gamma-dist and loggamma-dist functions

! 2013-05-11 - Vanya Belyaev
 - speedup the integration

!========================= LHCbMath v3r39 2013-04-29 =========================
! 2013-04-27  - Vanya Belyaev
 - EqualTo: add comparison ove vectors, points & matrices
 - Functions.h: small fix

! 2013-04-25 - Vanya Belyaev
 -  add few helper functions into ValueWithError

! 2013-04-23 - Chris Jones
 - Move 'operator<<' for MD5 inside a namespace to fix compilation
   errors with clang.

! 2013-04-22 - Chris Jones
 - More fixes for clang 3.2 compilation.

! 2013-04-15 - Marco Clemencic
 - Move 'operator<<' inside a namespace to fix compilation errors with clang.

! 2013-04-06 - Vanya Belyaev
 - small adjustment of operators in python

! 2013-03-26 - Chris Jones
 - A few work arounds to fix compilation with clang 3.2

!========================= LHCbMath v3r38 2013-03-20 =========================
! 2013-03-18 - Marco Clemencic
 - updated CMake configuration after latest changes

! 2013-03-17 - Vanya Belyaev
 - add some interpolation & spline functionality

!========================= LHCbMath v3r37 2013-02-04 =========================
! 2013-01-05 - Vany aBelyaev
 - add StudentT function by Matt Needham

! 2012-12-14 - Vanya Belyaev
 - fix some issue with Functions.cpp

!========================= LHCbMath v3r36 2012-11-26 =========================
! 2012-11-15 - Marco Clemencic
 - Added CMake configuration file.

! 2012-11-09 - Vanya Belyaev
 - add functions for calcualtion of sum/difference/multiplication/division
   with correlation

! 2012-10-12 - Marco Clemencic
 - Fixed warnings:
   - comma at end of enumerator list [-pedantic]
   - extra ‘;’ [-pedantic]

!========================= LHCbMath v3r35 2012-09-28 =========================
! 2012-09-05 - Vanya Belyaev
 - fix the bug in Bugg23L function
   many thanks to Liming Zhang!
 - add Gounaris-Sakurai function

! 2012-08-23 - Vanya Belyaev
 - access amplitudes

! 2012-08-23 - Vanya Belyaev
 - add three-body phase space

!========================= LHCbMath v3r34 2012-07-24 =========================
! 2012-07-21 - Vanya Belyaev
 - improve Bernstein & positive polynomials

! 2012-07-18 - Vanya Belyaev
 - add Bernstein & positive polynomials

!========================= LHCbMath v3r33 2012-06-25 =========================
! 2012-06-07 - Vanya Belyaev
 - minor fix

! 2012-06-04 - Vanya Belyaev
 - fix ICC warnings/remarks
   fix some Coverity reports

! 2012-05-28 - Vanya Belyaev
 - add hfit

! 2012-05-28 - Vanya Belyaev
 - add the code for hfits

!========================= LHCbMath v3r32 2012-05-24 =========================
! 2012-05-24 - Vanya Belyaev
 - add Flatte's function properly corrected for phase space factors

! 2012-05-23 - Vanya Belyaev
 - add Bugg' function for low mass S-wave dipion system ("sigma")
     *
     *  The parameterization of sigma pole by
     *  B.S.Zou and D.V.Bugg, Phys.Rev. D48 (1993) R3948.
     *
     *
!========================= LHCbMath v3r31 2012-05-19 =========================
! 2012-05-13 - Vanya Belyaev
 - add Needham function for J/psi

!========================= LHCbMath v3r30 2012-05-02 =========================
! 2012-04-29 - Vanya Belyaev
 - minor polishing

! 2012-04-28 - Vanya Belyaev
 - fix Bifurcated gaussian,
   extend the generic solution for Chi2-problem,
   add the dictionary
   extend random-module with asymmetric gaussian

! 2012-04-27 - Vanya Belyaev
 - add generic solved for N-dimensional Chi2-problem with R-constraint

! 2012-04-02 - Vanya Belyaev
 - add LASS shape for S-wave Kpi

! 2012-04-01 - Vanya Belyaev
 - add phase space function for 2-from-3 decays with orbital momentum

!========================= LHCbMath v3r29 2012-01-31 =========================
! 2012-01-18 - Vanya Belyaev
 - minor fix in Gaudi::Math::trace function

!========================= LHCbMath v3r28 2011-12-14 =========================
! 2011-12-04 - Vanya Belyaev
 - more functions

! 2011-12-03 - Vanya Belyaev
 - few minor fixes with ValueWithError

! 2011-12-01 - Vanya Belyaev
 - add few useful functions

!========================= LHCbMath v3r27p1 2011-11-07 =========================
! 2011-10-07 - Marco Cattaneo
 - Mask a couple of ICC warnings and remarks from Boost, resulting from
   inclusion of Digit.h

!========================= LHCbMath v3r27 2011-08-30 =========================
! 2011-08-26 - Alexander Mazurov
 - Updates to ValueWithError's parser functions. This version works only with
   Gaudi version > v22r2 (where the new parser model is provided)

! 2011-08-01 - Vanya Belyaev
 - ValueWithError: fix few primitive operations:
      self-addition, self-subtraction, self-multiplication and self-division

! 2011-07-29 - Vanya Belyaev
 - Types.py: fix typo in eigenVectors evaluation

!========================= LHCbMath v3r26 2011-07-25 =========================
! 2011-07-18 - Vanya Belyaev
 - add few more functions into dictionary

! 2011-07-17 - Vanya Belyaev
 - add rounding and related functions

! 2011-07-16 - Vanya Belyaev
 - add ifnan/isfinite/isnormal/isinf checks for Gaudi::Math::ValueWithError

! 2011-07-13 - Vanya Belyaev
 - few fixes

! 2011-06-16 - Vanya Belyaev
 - add few useful math functions...

!========================= LHCbMath v3r25 2011-04-04 =========================
! 2011-03-29 - Vanya Belyaev
 - Kinematics.h
    fix a bug in Gaudi::Math::sigma2pt calculation (thanks to Simone Bifani)

!========================= LHCbMath v3r24 2011-02-22 =========================
! 2011-02-21 - Vanya Belyaev
 - ValueWithErorr:
    add constructor from textual representation

! 2011-02-08 - Marco Clemencic
 - Fixed defect #10002.10607
   http://lhcb-coverity.cern.ch:8080/sourcebrowser.htm?projectId=10002#mergedDefectId=10607

!========================= LHCbMath v3r23 2011-01-31 =========================
! 2011-01-22 - Vanya Belyaev
 - add more functions for Gaudi::Math::ValueWithErrors

! 2011-01-14 - Vanya Belyaev
 - add one more test TestAbs, that shows the difference between
     std::fabs, std::abs , ::fabs and ::abs

   It prints:

  Value:  -4115           std::fabs - std::abs : 0  fabs - abs :    0
  Value:  1371.6667       std::fabs - std::abs : 0  fabs - abs :    0.66666667
  Value:  -457.22222      std::fabs - std::abs : 0  fabs - abs :    0.22222222
  Value:  152.40741       std::fabs - std::abs : 0  fabs - abs :    0.40740741
  Value:  -50.802469      std::fabs - std::abs : 0  fabs - abs :    0.80246914
  Value:  16.934156       std::fabs - std::abs : 0  fabs - abs :    0.93415638
  Value:  -5.6447188      std::fabs - std::abs : 0  fabs - abs :    0.64471879
  Value:  1.8815729       std::fabs - std::abs : 0  fabs - abs :    0.88157293
  Value:  -0.62719098     std::fabs - std::abs : 0  fabs - abs :    0.62719098
  Value:  0.20906366      std::fabs - std::abs : 0  fabs - abs :    0.20906366
  Value:  -0.069687886    std::fabs - std::abs : 0  fabs - abs :    0.069687886
  Value:  0.023229295     std::fabs - std::abs : 0  fabs - abs :    0.023229295

  One clearly sees that ::abs truncates double values


! 2011-01-10 - Marco Cattaneo
 - Fix icc warnings and remarks

!========================= LHCbMath v3r22 2010-11-27 =========================
! 2010-11-14 - Vanya Belyaev
 - add (python) accessor to correlation matrix

! 2010-11-13 - Vanya Belyaev
 - add eigenvalues and eigenvectors in python for 2x2,3x3 and 4x4 matrices
 - cmt/requirements
    version increment to v3r22

!========================= LHCbMath v3r21 2010-10-25 =========================

! 2010-10-12 - Vanya Belyaev
 - LHCbMath/Lomont.h
    make use of Lomont from GaudiKernel
 - src/Lomont.cpp
    remove the file...

! 2010-10-12 - Vanya Belyaev

 - tests/blind.cpp

    fix for win32 platform

! 2010-10-10 - Vanya Belyaev

   LHCbMath/Blind.h

     add some string->double hashing (useful for blinding)

! 2010-10-06 - Marco Clemencic
 - Fixed an ICC remark that was mistaken for en error by the nightly build.

! 2010-10-05 - Marco Clemencic
 - Fixed a configuration problem with the Intel compiler.

!========================= LHCbMath v3r20 2010-09-27 =========================
! 2010-09-27 - Vanya Belyaev
 - python/LHCbMath/Types.py
   remove unprintable null byte form the string
   (manythanks to Marco Clemencic)

! 2010-09-26 - Vanya Belyaev
 - python/LHCbMath/Types.py
     solve the problem with vizibility of symbols

 - python/LHCbMath.py -> python/LHCbMath/Math.py
 - python/LHCbMath/__init__.py
     forced import of everything from LHCbMath/Math.py
      (for backward compatibility)

 - cmt/requiremnts
    version increment to v3r20

!========================= LHCbMath v3r19 2010-07-19 =========================
! 2010-07-12 - Manuel Tobias Schiller
 - remove the code in SymPosDefMatrixInverter.h since an improved version is
   now part of ROOT (as it was an implementation header the code was never
   meant to be used directly, so I just left a comment pointing to the new
   code; "bad" code using this file directly should break and get fixed)
 - in MatrixInversion.h replace the call into SymPosDefMatrixInverter to the
   newer corresponding routine in ROOT; this should be transparent for all
   well-behaved client code

!========================= LHCbMath v3r18 2010-06-20 =========================
! 2010-06-20 - Marco Cattaneo
 - LHCbMath/MatrixInversion.h:
    Add missing include path to LHCbMath includes

! 2010-06-16 - Vanya Belyaev
 - LHCbMath/Types.py
   add the proper printout for matrices and symmetric matrices

! 2010-06-16 - Vanya Belyaev
 - Kinematics:
    add overload methods for matrix expressions

! 2010-06-08 - Vanya Belyaev
 - LorentzVectorWithError:
      add few useful methods

! 2010-05-26 - Vanya Belyaev
 - fix some errors in ParticleParams

! 2010-05-26 - Vanya BELYAEV
 - SymPosDefMatrixInverter.h
   add helper structire _invertForAllN
   ( the code is copied from Manuel's class invertForAllN,
     the only one difference "N" is compile time constant (template parameter),
     and thus it allows the compilation for Win32 platform) .
   The inverter<> has been update dto use _inverterFroAllN instead of invertrerForAlLN.
   It is *safe*, since for inverter<>, N is a compile tiem constant.

! 2010-05-25 - Vanya Belyaev
 - minor fix, hopefully it also fixes the compilation
   problem for windows platform

! 2010-05-24 - Vanya Belyaev
 - ParticleParams.h/cpp
   new object for representation of 4-momentum/reference-point&decay-length
   iformation coherent, self-contained way. It is a useful representation
   for resuld to variosu fitters.
   Essetially it is a bit modified verison of
     class LHCb::VtxFitParams by wouter Huldbergen
     from Phys/DecayTreeFitter package

 - LHCbMath/Types.py
      fix few typos
 - LorentzVectorWithError.h
      add few useful accessors

 - cmt/requirements
     version increment to v3r18

!========================= LHCbMath v3r17p1 2010-05-21 =======================
! 2010-05-18 - Marco Cattaneo
 - LHCbMath/Bit.h, dict/LHCbMathDict.h: Fix Windows compilation warnings

!========================= LHCbMath v3r17 2010-04-09 =========================
! 2010-03-22 - Vanya Belyaev

 - LHCbMath/Types.py
    add symbols from Gaudi::TrackMatrix and the rest of
    SMatrix/SVector classes mentioned in
      ( cd $LHCBRELEASES/LHCB/LHCB_v29r2/Event/ ;  grep XXX */Event/*.h )

! 2010-03-18 - Vanya Belyaev

 - ValueWithError

    add helper function for evalaution of "fraction" a/(a+b)
    add "asymmetry" (a-b)/(a+b)
    add possibility to define the printout format
    add function to evaluate binomina-efficiency

    add these functionality into the dictionary

 - cmt/requirements

    version increment to v3r17


!========================= LHCbMath v3r16 2010-02-12 =========================
! 2010-02-09 - Vanya BELYAEV
 - LHCbMath/EigenSystem.h(.icpp)
     fix compilation problmems for Win32 platrofm
 - test/TestEigen.cpp
     new test/example for EigenSystem
 - cmt/requirements
     version increment to v3r16

!========================= LHCbMath v3r15 2010-01-20 =========================
! 2010-01-02 - Vanya BELYAEV
 - LHCbMath/LHCbMath.h

     Equal_To :

        a. use "Lomont"-compare for floating point numbers (from GaudiKernel)
           instead of "Knuth/GSL"-compare

        b. "Precision" parameter now is  unisgned short/int instead of float/double.
           The constructor from floating-point precision is PRIVATE now,
           thus compiler error will be generated

        c. add explicit specializations for std::vector<double> and
             std::vector<float>

      equal_to_int , equal_to_uint:

           use "Lomont"-compare for floating point numbers (from GaudiKernel)
           instead of "Knuth/GSL"-compare

      knuth_equal_to_double:

           backup old "Knuth/GSL" comparison criteria for floatring pooint numbers

 - cmt/requirements
       version increment to v3r15

!========================= LHCbMath v3r14 2009-11-13 =========================
! 2009-10-23 - Vanya Belyaev

 - add new tests for CPU comparison of Lomont-type
      & Knuth-type compare.

0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
 Knuth/GSL-compare 4.0001e+06 Time User   : Tot= 24.8  [s] Ave/Min/Max= 1.24(+-0.428)/    0/    2 [ms] #=20000
 Lomont-compare    3.9996e+06 Time User   : Tot= 5.86  [s] Ave/Min/Max=  293(+-  455)/    0/1e+03 [us] #=20000

  Bottom line:  Lomont-type compare is approximately 4 times more CPU efficient


! 2009-10-23 - Vanya Belyaev

 - LHCbMath/LHCbMath.h

      reimplement the function "round" using boost:numeric

 - tests/TestRound.cpp

      new test/illustration for new "round" function.

    Three functions are compared:

     1. "old-round" (based on Knuth-compare)
     2. modified round (based on Lomont-compare
     2  New implementation using boost::numeric::converter

   Results:

      - No difference in result has been found ,
      - Large difference in CPU has been detected:

    Differences: 0

0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
 round-Knuth     -1.3e+07
                Time User   : Tot= 17.2  [s] Ave/Min/Max= 34.5(+-  182)/    0/1e+03 [us] #=500000
 round&Lomont    -1.3e+07
                Time User   : Tot= 4.91  [s] Ave/Min/Max= 9.82(+- 98.6)/    0/1e+03 [us] #=500000
 round-New       -1.3e+07
                Time User   : Tot= 2.03  [s] Ave/Min/Max= 4.06(+- 63.6)/    0/1e+03 [us] #=500000


     Lomont-based rounding is approximately factor of 4 faster,
     and the new rounding is approximately factor of 10 faster...


! 2009-10-22 - Vanya Belyaev

 - python/LHCbMath/Types.h

     add more decorations for lines & planes & their operations, like
      intersections, impact parameters, distances, parallel, etc..

 - python/LHCbMath/tests.py

     add the tests for new functions

 - cmt/requirements

     version increment to v3r14


!========================= LHCbMath v3r13 2009-10-16 =========================
! 2009-10-07 - Gerhard Raven
 - faster (but equivalent) check for parallel tracks in GeomFun.icpp

! 2009-09-13 - Vanya BELYAEV
 - add the parsing functions to ValueWithError and
   std::vector<ValueWithError> classes, thus allowing their usage
   as proeprteis for Gaudi components


! 2009-09-12 - Vanya BELYAEV
 - more polishing for *WithErrorClasses
 - add python/LHCbMath/Types.py helper module to load few
    important classes, like  Gaudi.XYZPoint, etc...
    the classes also "Decorated" on-flight


! 2009-09-05 - Vanya BELYAEV
 - SVEctorWithErorr
    add functions to get the correlation coefficient and correlation matrix
 - cmt/requirements
    version increment to v3r13

!========================= LHCbMath v3r12 2009-09-02 =========================
! 2009-08-19 - Vanya BELYAEV
 - ValueWithError
    1. add the constuctor form (value.error)-pair
    2. add the conversion to  (value,error)-pair

 - cmt/requirements
   version increment to v3r12

!========================= LHCbMath v3r11p1 2009-07-28 =======================
! 2009-07-20 - Juan PALACIOS
 - python/LHCbMath.py
  . Comment out line that causes debug and windows seg fault

!========================= LHCbMath v3r11 2009-07-13 =========================
! 2009-07-10 - MC for Wouter
 - In MatrixTransforms.h, use std::sqrt, std::abs instead of sqrt, fabs

! 2009-07-09 - Marco Cattaneo
 - Line.h: Fix a compilation warning on windows
 - Cleanup requirements (remove linkopts for ROOT < 5.19)

! 2009-07-06 - Marco Cattaneo
 - Bit.h: Fix a compilation warning on windows
 - Fix some doxygen warnings

!========================= LHCbMath v3r10 2009-06-29 =========================
! 2009-06-29 - Juan PALACIOS
 - python/LHCbMath.py
  . Add some LorentzVectors and 3D rotation types.

!========================= LHCbMath v3r9 2009-06-16 ==========================
! 2009-06-13 - Vanya BELYAEV
 - add new class: SVectorWithError
 - fix matrix inversions
        Point3DWithError
        Vector3DWithError
        LorentzVectorWithError
 - LorentzVectorWithError:
         add method sigmaMass and chi2mass
 - LHCbMath/Kinematics.h
         sigmamass: use invalid return valeus for invalid arguments

! 2009-06-13 - Vanya Belyaev
 - fix for Linux

! 2009-06-12 - Vanya BELYAEV
 - add new classes:

     Gaudi::Math::ValueWithError
     Gaudi::Math::Point3DWithError
     Gaudi::Math::Vector3DWithError
     Gaudi::Math::LorentzVectorWithError

 - cmt/requirements
     version increment to v3r9

!========================= LHCbMath v3r8 2009-05-25 ==========================
! 2009-05-23 - Vanya Belyaev
 - src/Lomont.cpp
    use unions instead of reinterpret_cast to avoid gcc4 problems
    for gcc34 the result are identical
 - add tests for Lomont-compare
 - cmt/requirements
    version inrement to v3r8

!========================= LHCbMath v3r7 2009-05-07 ==========================
! 2009-04-08 - Vanya BELYAEV
 - LHCbMath/Digit.h
   fix compilation warning for Win32 platform

!========================= LHCbMath v3r6 2009-02-18 ==========================
! 2009-02-18 - Marco Cattaneo
 - Removed slc3 cases from GSL linkopts

! 2009-02-05 - Marco Clemencic
 - Removed the -no_auto_imports of GSL.

! 2009-02-04 - Marco Clemencic
 - Fixed usage of GSL (-no_auto_imports + -no-as-needed).

! 2009-01-30 M Needham
 - Add function to get width of the half sample in ModeFunctions

!========================= LHCbMath v3r5 2009-01-12 ==========================
! 2009-01-10 - Vanya BELYAEV
 - LHCbMath/Digit.h
   to please Reflex at Win32 platform. make a drafstical simplification
   of argument for BOOST_STATIC_ASSERT macro.

! 2008-12-03 M Needham
 - More protections against fpe in ModeFunctions

! 2008-12-02 - Vanya BELYAEV
 - LHCbMath/Kinematics.h
    fix the bugs...
 - tests/kinematics.cpp
    one more test-file
 - cmt/requirments
    version increment to v3r5

! 2008-12-02 M Needham
  - Guard against fpe in generalizedMean calc

! 2008-12-02 M. Needham
  - Add robust functions to calculate mode or MPV [ModeFunctions.h]

! 2008-11-28 - Gerhard Raven
 - add list<MD5> to the dictionary

!========================= LHCbMath v3r4 2008-11-17 ==========================
! 2008-11-08 - Vanya BELYAEV
 - LHCbMath/Lomont.h
   src/Lomont.cpp
    add an equality functions for float&doubles using very efficient
    implementation of Bruce Dawson's algorithm by Chris Lomont

    @see www.lomont.org "Taming the floating point beast"
    @see http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm

    The files define two major functions in namespace LHCb::Math
      lomont_compare_float  (float  A,  float  B, unsigned short maxULPs = 100 )
      lomont_compare_double (double A,  double B, unisgned int   maxULPs )

   and two helper functions:
      next_float
      next_double

   The helper functions can be used to adjust properly the parameters maxULPS for
   the "major" fucntions.

   For each maxULPs one can evaluate the corresponding
   relative precision R = |A-B|/(|A|+|B|)

   For floats the relation is:
        R ~(5*e-8)*maxULPS for |A| > 1.e-37, and it quickly goes to 1,
        as |A| goes from 1.e-37 to 0

   For doubles the relation is:
        R ~(5*e-16)*maxULPS for |A| > 1.e-304, and it quickly goes to 1,
        as |A| goes from 1.e-304 to 0


! 2008-10-24 - Marco Cattaneo
 - Add link to libGenVector when using ROOT_GE_5_19

! 2008-10-22 - Marco Cattaneo
 - Add -no_auto_imports to GaudiPython use

! 2008-10-01 - Vanya BELYAEV
 - LHCbMath/LHCbMath.h
   LHCb::Math::equal_to_int
   fix an error "integral constant overflow"

!========================= LHCbMath v3r3 2008-09-30 ==========================
! 2008-09-17 - Vanya BELYAEV
 - LHCbMath/LHCbMath.h
    add the functions for comparison of double and int, and double
    and unsigned int:
      LHCb::Math::equal_to_int
      LHCb::Math::equal_to_uint

! 2008-09-06 - Manuel Tobias Schiller
 - LHCbMath/{MatrixInversion.h,SymMatrixInverter.h,SymPosDefMatrixInverter.h}
   Add matrix inversion routines for symmetric and symmetric positive definite
   matrices based on Cholesky decomposition for the positive definite case (or
   a variant thereof for the general symmetric case). These routines have
   template specializations for different matrix sizes for better performance.
   All the inversion code should be inlined by the compiler.
   For the positive definite case, the code should be more accurate than the
   inversion routine that comes with ROOT::SMatrix, in the general case, it
   depends on the matrix which implementation is more accurate; see the
   documentation for details.
   The user interface is in MatrixInversion.h and will work for symmetric
   ROOT::SMatrix instances. The inversion code is implemented in the two other
   header files. The implementation is a little more generic, so users who
   know what they're doing might want to call this code directly for other
   types of matrices (which should behave like a ROOT::SMatrix, though).

!========================= LHCbMath v3r2 2008-09-03 ==========================
! 2008-08-02 - Vanya BELYAEV
 - LHCbMath/Bit.h
   LHCbMath/Digit.h

     add functionality to get the RANGE of bits (or decimal digits) from
     unsigned integral type.

     The utilities for evaluation of
     decimal N1->N2 decimal digits for the unsigned integral values:

    -  Gaudi::Math::IDigits
       The most efficient compile-time evaluator.
       It is applicable if both N1/N2 and value are compile-time constanst
    -  Gaudi::Math::Digits
       Rather efficient fuctor, N1&N2 are compile-time constanst
    -  Gaudi::Math::digits
       The regular function, the least efficient evaluator

     The utilities for evaluation of range of bits [N1,N2) for
     the unsigned integral values. N2 is *NOT* included:

     -  Gaudi::Math::IBits
        The most efficient compile-time evaluator.
        It is applicable if both N1&N2 and value are compile-time constanst
     -  Gaudi::Math::Bits
        Rather efficient fuctor, N1&N2 are compile-time constanst
     -  Gaudi::Math::bits
        The regular function, the least efficient evaluator

! 2008-08-01 - Vanya BELYAEV
 - LHCbMath/Bit.h
    add few more evaluators of Nth nit for integral unsigned types

    Finally one has three possibility:

    1) Gaudi::Math::IBit, for compile time evaluation of Nth bit:

          const bool bit12 = Gaudi::Math::IBit<unisgned int,12456,12>::value ;

    2) Gaudi::Math::Bit, for evaluation of Nth  bit of integral type,
       N is a compile-time constant:

          Gaudi::Math::Bit<unsigned int,12> fun ;

        unsigned int value = ... ;

        const bool bit12 = fun ( value ) ;

    3) Gaudi::Math::bit, the function which should be use if neither
       value nor N are known at compile time:


       unsigned int value = ... ;
       unsigned int N     = ... ;

         const bool bitN = Gaudi::Math::bit ( value , N ) ;

    The compile-time protection is added for all templates,
    the "value" is required to be
        - integral
        - unsigned
    The check is done with boost::integer_traits

    ATTENTION!
    The least significat bit is numbered as  #0

 - LHCbMath/Digit.h

    add few more evaluators of Nth decimal digit  for integral unsigned types

    Finally one has three possibility:

    1) Gaudi::Math::IDigit, for compile time evaluation of Nth decimal digit:

          const int dig5 = Gaudi::Math::IDigit<unisgned int,12456,5>::value ;

    2) Gaudi::Math::Digit, for evaluation of Nth  decimal of integral unsigned
       type,
       N is a compile-time constant:

          Gaudi::Math::Digit<unsigned int,12> fun ;

        unsigned int value = ... ;

        const int digit12 = fun ( value ) ;

    3) Gaudi::Math::digit, the function which should be use if neither
       value nor N are known at compile time:


       unsigned int value = ... ;
       unsigned int N     = ... ;

       const int digitN = Gaudi::Math::digit ( value , N ) ;

    The compile-time protection is added for all templates,
    the "value" is required to be
        - integral
        - unsigned
    The check is done with boost::integer_traits

    ATTENTION!
    The least significat digit is numbered #0


-  LHCbMath/TypeWrapper.h
      TypeWrapper utility (extraction from IPower.hpp)
      Null and Null_ strructures

-  LHCbMath/IPower.hpp
      extract the useful TypeWrapper consttuction

- tests/pow.cpp
      new test for testiing various "pow"-functions

- tests/bit.cpp
      new test for testiing various "bit"-functions

- tests/digit.cpp
      new test for testiing various "digit"-functions

- cmt/requirements
       add "check" applications:

           TestPow
           TestBit
           TestDigit

        version increment to v3r2

!========================= LHCbMath v3r1 2008-07-16 ==========================
! 2008-07-15 - Wouter Hulsbergen (code provided by Manuel Schiller)
 - LHCbMath/MatrixInversion.h: matrix inversion for pos-def
   symmetric matrices based on cholesky decomposition.

! 2008-07-09 - Vanya BELYAEV
 - LHCbMath/Digit.h
    new (templated) function to get the Nth decimal digit for integer type:

     #include "LHCbMath/Digit.h"

     ...
     const int number = ... ;
     if( 5 != Gaudi::Math::digit ( number , 1 ) ) { ... }

 - LHCbMath/Bit.h: Function to check Nth bit of the integer type

     #include "LHCbMath/Bit.h"

     ...
     const int number = ... ;
     if (  Gaudi::Math::bit ( number , 11 ) ) { ... }

  - cmt/requirements:  version increment to v3r1

!========================= LHCbMath v3r0 2008-07-01 ==========================
! 2008-07-01 - Gerhard Raven
 - add MD5 and vector<MD5> to the dictionary
 - Add default c'tor of MD5 which is required if you want a vector<MD5> in
   a dictionary...

! 2008-07-01 - Marco Cattaneo
 - On Windows, disable some dictionaries that do not compile

! 2008-06-30 - Marco Cattaneo
 - Removed  <class name = "Gaudi::Math::Math::Dummy"/> from selection file

! 2008-06-25 - Juan PALACIOS
 - dict/LHCbMathDict.h
  . Add all the GeomFun::Gaudi::Math free functions to the dictionary.
 - cmt/requirements
  . Change version to v3r0 since namespace changes are not backwards
    compatible.

! 2008-06-24 - Juan PALACIOS
 - LHCbMath/Line.h
 - LHCbMath/LineTypes.h
 - dict/LHCbMathDict.h
 - dict/LHCbMathDict.xml
  . Put everything directly under the Gaudi:: namespace under Gaudi::Math::
 - python/LHCbMath.py
  . Adapt to changes above.

! 2008-06-24 Juan PALACIOS
 - cmt/requirements
  . Remove LHCbMath from PYTHONPATH and add apply_pattern install_python_modules
! 2008-06-24 Juan PALACIOS
 - add dict/LHCbMath.h, LHCbMath.xml
  . Python dictionaries for some Line types and GeomFun free functions.
 - add python/LHCbMath.py
  . Python module to ease the use of Lines and GeomFun free functions.
 - cmt/requirements
  . Increase version to v2r9
  . Add LHCbMath to PYTHONPATH
  . Make linker library from src/*.cpp files

!========================= LHCbMath v2r8 2008-06-04 ==========================
! 2008-06-04 M Needham
 - Avoid a comparision of == of doubles in round function

! 2008-05-28 - Gerhard Raven
 - cleanup of MD5 code, don't artificially distinguish between digest and engine

! 2008-05-22 - Marco Cattaneo
 - Fix some doxygen warnings

! 2008-05-22 - Gerhard Raven
 - Add MD5.h src/MD5.cpp: class to compute an MD5 digest of strings, or objects
   which can be streamed into strings

!========================= LHCbMath v2r7p1 2008-04-29 ========================
! 2008-04-29 - Marco Cattaneo
 - Fix a doxygen warning

! 2008-04-29 - Vanya BELYAEV
 -  LHCbMath/Line.h
    fix LaTeX inside DoxyGen comments

!========================= LHCbMath v2r7 2008-04-02 ==========================
! 2008-04-02 - Marco Cattaneo
 - In LHCbMath.h:
   . Change namespace from LHCbMath to LHCb::Math
   . Add floating point comparison constructs previously in LoKi::StdMath
 - In requirements: Clean up link options for MathCore

! 2008-03-10 - Vanya BELYAEV
 -  LHCbMath/GeomFun.icpp
    LHCbMath/GeomFun.h
    LHCbMath/Line.h
   fix a bug in Gaudi::Math::closestPointParam function,
   improve a bit the  doxygen comments...

! 2008-03-05 - Vanya BELYAEV
 - LHCbMath/MatrixTransforms.h
   Add many new operators into namespace Gaudi::Math::Operators
   The full list is availabel through the doxyen documentation of
   namespace Gaudi::Math::Operators. These operators  are really very
   helpful and useful for coding of the kinamtical fitters.

!========================= LHCbMath v2r6 2008-02-24 ==========================
! 2008-02-24 - Vanya BELYAEV
 - LHCbMath/MatrixUtils.h
     add a bit more optimizations

! 2008-02-20 - Vanya BELYAEV
 - add few more optimizations into MatrixUtils.h & MatrixTransforms.h
   in particular the additon operators for "geometry" and "linear algebra"
   objects.. They really saves a lot of lines in coding the various fitters

!========================= LHCbMath v2r5 2008-01-21 ==========================
! 2008-01-19 - Vanya BELYAEV
 - LHCbMath/MatrixUtils.h
    add new function Gaudi::Math::mult for evaluation of v1^T*M*v2

! 2008-01-15 - Vanya BELYAEV

 - Split LHCbMath/MatrixUtils.h into two files MatrixUtils.h and MatrixTransforms.h

    I) The current functionality of LHCbMath/MatrixUtils.h :

      *     - (re)setting all elements of matrices and vectors
      *     - set the diagonal matrix to be proportional to unit matrix
      *     - efficient scaling of matrices&vectors
      *     - minimal&maximal elements of matrices and vectors
      *     - indices of the minimal&maximal elements of matrices and vectors
      *     - minima&maximal by absolute value elements of matrices and vectors
      *     - indices of minima&maximal by absolute value elements of matrices and vectors
      *     - the trace of the square matrices
      *     - find the minimal/maximal/abs.minimal&abs.maximal diagonal elements of square matrices
      *     - count number of elements which satisfy some criteria
      *     - count number of diagonal elements which satisfy some criteria
      *     - check the presence of elements which satisfy some criteria
      *     - check the presence of diagonal elements which satisfy some criteria
      *     - efficient element-by-element "equality" for matrices
      *     - few specific "matrix updates" (in the spirit of BLAS)

    II) The current functionality of LHCbMath/MatrixTransforms.h :

      *     - conversion from geometry&kinematical vectors into Linear Algebra vectors
      *     - conversion from Linear Algebra vectors into geometry&kinematical vectors
      *     - evaluation of various "chi2"-like values, like chi2-distance between
      *       two 3D or 4D-vectors. E.g. "vicinity" of two points, or two momenta
      *     - conversion form "track" to 4-momenta representation (by Sean BRISBANE)
      *     - the transition matrix for the conversion form "track" to
      *        4-momenta representation (by Sean BRISBANE)
      *

  ATTENTION!
  ==========
  It "partly" breaks some existing lines, since not "Gaudi::Math::geo2la" functions
  are available through LHCbMath/MatrixTransporms.h instead of LHCbMath/MatrixUtils.h
  header file. The fix is trivial: one just needs to include LHCbMath/MatrixTransforms.h file.

 - Add new file Kinematics.h to keep some pure mathematical functions useful
   for kinematical calculations. Currently it contains the functions for
   evaluation of dispersions and sigmas  for mass and mass^2 and chi2 of mass:
       *   - sigma2mass2   :   sigma^2(M^2)
       *   - sigma2mass    :   sigma^2(M)  for M^2 > 0
       *   - sigmamass     :   sigma(M)    for M^2 > 0
       *   - chi2mass      :   delta^2(M^2)/sigma^2(M^2)

 - Update(improve?) the doxygen comments for some other header files.

!========================= LHCbMath v2r4 2007-11-29 ===========================
! 207-11-27 - Sean BRISBANE
 - Add functions in MatrixUtils.h
   o geoLA: Fill Lorentz vector from 3D displacement vector + Mass
   o JacobdP4dMom: Compute Jacobian for the transformation
                   covPxPyPzE_xyz = Jacob * covTxTyQoP_xyz;

! 2007-10-16 Wouter Hulsbergen
 - Changed templates for line-to-line calculations to allow for lines of
   different types

!========================= LHCbMath v2r3 2007-10-02 ===========================
! 2007-10-02 - Marco Cattaneo
 - Remove implementations of cbrt from Power.h, now available in GaudiKernel

!========================= LHCbMath v2r2 2007-07-10 ===========================
! 2007-07-10 - Juan Palacios
 - LHCbMath/GeomFun.icpp
    . Bug fix to parallel(line, line) method.
   . Bug-fix in closestPointParams method.

! 2007-07-10 - Marco Cattaneo
 - More doxygen fixes

! 2007-07-09 - Juan Palacios
 - LHCbMath/GeomFun.icpp
   . closestPointParams(line, line, double, double)  was assuming lines with
     normalised direciton vectors. Fix to work with arbirtary length
     direction vectors.
 - Fix LHCbMath/Power.hpp doxygen

!========================= LHCbMath v2r1 2007-02-06 ===========================
! 2007-02-26 - Marco Cattaneo
 - Remove SMatrix from linkopts
 - Fix doxygen warnings

!========================= LHCbMath v2r0 2006-12-15 ===========================
! 2006-12-15 - Marco Cattaneo
 - Added LHCbMath/LHCbMath.h and LHCbMath/LineTypes.h, moved from LHCbDefinitions
 - Removed Root from include path, already in GaudiKernel

! 2006-12-06 - Florence RANJARD
 - apply_pattern install_more_includes

!========================== LHCbMath v1r3 2006-11-02 ==========================
! 2006-11-02 - Chris Jones
 - Fix windows compilation error with ambiguity in pow with Gaudi::Math::cbrt

! 2006-11-01 - Marco Cattaneo
 - Update requirements to add MathCore and SMatrix to the linkopts, previously
   done in LHCBDefinitions

! 2006-11-01 - Chris Jones
 - Update Gaudi::Math::cbrt to be non-templated, to avoid problems with
    cbrt(int) returning a truncated int

! 2006-11-01 - Juan PALACIOS
  - LHCbMath/GeomFun.icpp
    . Fix a few bugs. Some functions were assuming Line had unit direction
      vector. This is not necessarily the case so use line.direction().Unit()
      where appropriate.

! 2006-10-27 - Chris Jones
 - Implement cube root method Gaudi::Math::cbrt(x) that works on all platforms,
   but uses the fast in built cbrt on GCC systems

! 2006-10-27 - Juan PALACIOS
  - LHCbMath/GeomFun.icpp
    . Remove explicit dependency on ROOT::Math vector type. Functions are now
      totally generic.

  - cmt/requirements
    . Removed dependency on Kernel/LHCbDefinitions
    . Increase version number to v1r3

  Added:

  - LHCbMath/IPower.hpp:
    . Template metafunction for compile-time calculation of even, positive
      powers of integer numbers.
      Example usage:

      // assign 2**35 to result.
        const int result = Gaudi::Math::IPower< int, 2,  35>::value;
  - LHCbMath/Power.hpp:
    .  Template metafunction to calculate integer powers of integer
       and floating point numbers.
       Example useage:

       // calculate 50.**10
       const double result = Gaudi::Math::pow<double, 10> ( 50. ) ;

! 2006-10-26 - Juan PALACIOS
  - LHCbMath/Power.h
    . Add doxygen comment: pow only works for positive interer powers.

!========================== LHCbMath v1r2 2006-06-30 ==========================
! 2006-06-29 M. Needham
  - Bug fix in plane-line intersection parallelity test

! 2006-06-06 - Juan PALACIOS
  - Add LHCbMath/Power.h
    . Fast and efficient pow function for large integer powers
      by Ivan Belyaev. Imported from LoKi.

!========================== LHCbMath v1r1 2006-05-31 ==========================
! 2006-05-31 - Juan PALACIOS

  - Add LHCbMath/EigenSystem.h, .icpp and src/EigenSystem.cpp from
    Vanya Belyaev. Make linker library LHCbMath

  - Import LHCbMath/MatrixManip.h from Kernel/LHCbDefinitions. Change namespace
    to Gaudi::Math for consistency.

  - Remove Kernel, move everything to new LHCbMath directory.

  - Kernel: Add MatrixManip.h from Vanya Belyaev. Various useful matrix
            and vector utilities. Includes linking to 3D and 4D MathCore
            vectors and points,  scaling on all elements of matrices
            and vectors, setting already existing matrix to unit matrix,
            comparison functions, max and minimum elements, various counting,
            checking and equal methods.

!========================== LHCbMath v1r0p1 2006-05-30 ========================

! 2006-05-30 - Juan Palacios
  - Kernel/GeomFun.h: Fix typo in line - plane intersection method declaration.

! 2006-05-24 - Juan Palacios
 - cmt/requirements: Delete removal of "-lSmatrix" in linkopts. This is needed
   to get Python dictionaries for SMatrix.

!========================== LHCbMath v1r0 2006-05-15 ==========================
! 2006-05-10 - Juan Palacios
 - Kernel/GeomFun : Add bool parallel(aLine, aLine) method.
 - Kernel/GeomFun.icpp : fix Gaudi::Math::distance for case when lines
                         are parallel.

! 2006-05-08 - Juan Palacios
 - First release of Kernel/LHCbMath

