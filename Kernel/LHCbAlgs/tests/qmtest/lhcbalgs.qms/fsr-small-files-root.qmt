<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set><text>../options/fsr-only-file.py</text>
        <text>../options/SmallFiles.py</text>
	<text>--option</text>
	<text>from Configurables import LHCbApp; from GaudiConf import IOHelper; LHCbApp().Persistency="ROOT"; IOHelper().outStream("tryRoot.dst","InputCopyStream");</text></set></argument>
  <argument name="use_temp_dir"><enumeral>true</enumeral></argument>
  <argument name="validator"><text>
import ROOT
tf=ROOT.TFile.Open('tryRoot.dst')
if tf.GetListOfKeys().GetSize()==0:
  causes.append('No keys, output file is corrupted')
  result['gaudiconf.fsr-small-files-root']=result.Quote("No keys, file is corrupted")
t1=tf.Get("Event")
if (t1 is None or not t1) or (t1.GetEntries()&lt;50):
  causes.append('Not enough events copied, output file is corrupted')
  result['gaudiconf.fsr-small-files-root']=result.Quote("Not enough events copied, output file is corrupted")

</text></argument>
</extension>
