<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Check that a file which has only FSRs on it can be produced and read correctly.
# Prerequisites: None
# Common failure modes, severities and cures: 
#               . SEVERE: Segfault or raised exception, stderr, nonzero return code
#               . MAJOR: additional FATAL/ERROR messages always a major problem. no ERROR messages should ever be printed when running this test.
#               . MAJOR: Corrupted output file with no keys or no FSRs.
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set><text>../options/fsr-only-file.py</text>
	<text>--option</text>
	<text>from Configurables import LHCbApp; from GaudiConf import IOHelper; LHCbApp().Persistency="ROOT"; IOHelper().outStream("tryRoot.dst","InputCopyStream");</text></set></argument>
  <argument name="use_temp_dir"><enumeral>true</enumeral></argument>
  <argument name="validator"><text>
import ROOT
tf=ROOT.TFile.Open('tryRoot.dst')
if tf.GetListOfKeys().GetSize()==0:
  causes.append('No keys, output file is corrupted')
  result['gaudiconf.fsr-only-file-root']=result.Quote("No keys, file is corrupted")

</text></argument>
</extension>
