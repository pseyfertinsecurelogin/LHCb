# $Id: release.notes,v 1.158 2008-11-17 14:33:09 cattanem Exp $
!-----------------------------------------------------------------------------
! Package     : Det/DetCond
! Responsible : Marco Clemencic
! Purpose     : Interface between LHCb and LGC/COOL project
!-----------------------------------------------------------------------------

!===================== Det/DetCond v12r4 2008-11-17 ==========================
! 2008-11-17 - Marco Cattaneo
 - Fix to requirements avoid warnings when making configurables database 
 - Add LoadDDDB algorithm, moved from DetDescChecks to avoid tests dependency
   on DetDescChecks package
 - Add missing dependencies for QMTest

! 2008-11-14 - Marco Cattaneo
 - In Configurable, set up VFSSvc, e.g. for use by ParticlePropertySvc

! 2008-11-11 - Marco Clemencic
 - Fixed configuration problems in the test after the changes in DDDB.

! 2008-11-06 - Marco Clemencic
 - Added the ConfigurableUser CondDB for the high level configuration of the
   conditions database. The old configuration function (addCondDBLayer etc.) are
   still available for backward compatibility, but implemented using the new
   configurable which allows to specify local tags too. 

! 2008-10-31 - Marco Cattaneo
 - Fix for gcc 4.3

                           NEEDS: LCGCMT > 55a
                           
! 2008-10-10 - Marco Clemencic
 - Modified the requirements file following the changes in the CORAL interface
   package (see bug #41579).

!===================== Det/DetCond v12r3 2008-09-30 ==========================
! 2008-09-29 - Marco Clemencic
 - Fixed a bug in CondDBCommon::generateXMLCatalog, failing for folders with
   names shorter than 4 chars.

!===================== Det/DetCond v12r2 2008-07-30 ==========================
! 2008-07-30 - Marco Clemencic
 - Changed the name of the configurables for online partition from ONLINE-YYYYMM
   to ONLINE_YYYYMM.

! 2008-07-28 - Marco Cattaneo 
 - Fix windows compilation
 
! 2008-07-23 - Marco Clemencic
 - Changed the type of CondDBDispatcherSvc.Alternatives from list of strings
   to map<string,string>.
 - Added tests for DetCond.Configuration.
 - Fixed a problem with conversion between 'double' and 'long long' in
   CondDBTimeSwitchSvc.

! 2008-07-21 - Marco Clemencic
 - Added a function to DetCond.Configuration (configureOnlineSnapshots) to
   prepare the configuration using monthly snapshots of the ONLINE partition.
   The first and last snapshot used extend their validity to 0 and +infinity
   respectively.

!===================== Det/DetCond v12r1 2008-07-16 ==========================
! 2008-07-10 - Marco Clemencic
 - Fixed a tiny memory leak introduced in COOLConfSvc during the deSEALing.

!===================== Det/DetCond v12r0 2008-06-30 ==========================
! 2008-07-02 - Marco Clemencic
 - Introduced a work-around for COOL bug #38422, which was preventing the usage
   of local tags as overlays.
 - Removed a left-over in the requirements file needed for some tests.
   (It was breaking compilation on win32)

! 2008-06-27 - Marco Clemencic
 - Introduced the ICondDBReader implementation CondDBTimeSwitch.
   - it allows to use different partitions for different IOVs
   - added a simple test for it (using a test algorithm added to the package:
     DetCondTest::TestConditionAlg).
 
! 2008-06-26 - Marco Clemencic
 - Improved direct mapping between the COOL hierarchy and the transient store
   one:
   - direct mapping enabled by default (can be turned off via options to improve
     the performances of CondDBLayeringSvc and CondDBDispatcherSvc)
   - correct mapping in CondDBDispatcherSvc and CondDBLayeringSvc:
     - CondDBDispatcherSvc: add entries implied by alternatives
     - CondDBLayeringSvc: expose all the possible entries
   - modified ICondDBReader (needed for a generic implementation of the mapping)
   - added tests for foreseen use-cases
   - the code to generate the XML catalog has been moved to a separate file to
     be shared among the implementations of ICondDBReader
 - Added dictionaries for few CORAL interfaces that are not available through
   COOL.

! 2008-06-24 - Marco Clemencic
 - Fixed a bug in the direct mapping between the hierarchy of the COOL
   database and the transient store one.

! 2008-06-10 - Marco Clemencic
 - Adapted to the new SEAL-less COOL and CORAL. Needs LCG_55 (Gaudi v20r0)

!===================== Det/DetCond v11r11 2008-05-19 =========================
! 2008-05-19 - Marco Clemencic
 - Added the possibility of direct mapping between the hierarchy of the COOL
   database and the transient store one.
   Disabled by default, but needed to use the Online partition of the condition
   database.
   The implementation still lacks few features:
     - does not work if the cache is not enabled
     - it is implemented only at the CondDBAccessSvc (it should work at the
       CondDBDispatcherSvc and CondDBLayeringSvc level too) 

!===================== Det/DetCond v11r10 2008-04-24 =========================
! 2008-04-24 - Marco Clemencic
 - Improved the algorithm to select the closest replica of the database when
   using LFCReplicaSvc. The local site (preferred replica), can be specified, in
   order of priority, with job option (of COOLConfSvc), the environment
   variables DIRACSITE and LHCBPRODSITE or the hard-coded default "CERN.ch". The
   value of local site can be any substring (case insensitive) to be matched in
   the "host" field of the CORAL LFC entries. The fall-back servers are used in
   random order.   

! 2008-04-22 - Marco Clemencic
 - Fixed a problem in CondDBAccessSvc related to the usage of local tags.

! 2008-04-09 - Marco Clemencic
 - Modified default idle connection time-out in CondDBAccessSvc from 600s to
   120s.

!===================== Det/DetCond v11r9 2008-03-03 ==========================
! 2008-03-03 - Marco Clemencic
 - Added the function "useCondDBLogger" to DetCond.Configuration.
 - Modified DetCond.Configuration to expose the configurables provided by the
   package when imported. 

! 2008-02-29 - Marco Clemencic
 - Added the Python module DetCond.Configuration to provide useful functions
   for the configuration of the CondDB:
   - addCondDBLayer
   - addCondDBAlternative

! 2008-02-22 - Marco Cattaneo
 - Remove hacks in requirements no longer needed with Gaudi v19r7

! 2008-02-12 - Marco Clemencic
 - Fixed a problem occurring when trying to retrieve a folder which is not in
   the database (typical case for CondDBLayeringSvc), due to an uninitialized
   variable.

!===================== Det/DetCond v11r8 2008-01-28 ==========================
                           NEEDS: LCGCMT >= 54
! 2008-01-26 - Marco Clemencic
 - Added the service CondDBLogger (implementation of ICondDBReader) that, if put
   between a user and a provider of the ICondDBReader interface, stores in a
   file all the requests that were made to the CondDBReader, with the time of
   the request.
   The class allows to generate some history of the CondDB traffic to be able to
   analyze and replay it afterward.
 - Added the algorithm CondDBReplayAlg. It can read a file produced with
   CondDBLogger to replay the requests to the database.
 - Modified ICondDBReader and CondDBAccessSvc to allow the retrieval of objects
   from the conditions database using the channel name (available since COOL
   2.3.0, LCGCMT 54).

! 2008-01-21 - Marco Clemencic
 - Improved error messages in case of CORAL exceptions.

! 2007-12-20 - Marco Clemencic
 - Allow to use tags that are not global in CondDBAccessSvc.
 - Added a service (COOLConfSvc/ICOOLConfSvc) dedicated to the instantiation and
   configuration of COOL/CORAL. The options to configure COOL and CORAL have
   been moved from CondDBAccessSvc to the new service. 

! 2007-12-20 - Marco Cattaneo
 - Replace homemade linkopts with new Boost_linkopts_filesystem_mt
 - Remove slc3 specific set, no longer supported in LCG_54

!===================== Det/DetCond v11r7 2007-12-03 ==========================
! 2007-11-29 - Marco Clemencic
 - Added two options to CondDBAccessSvc to control the retrial period and
   retrial time-out of CORAL. 

!===================== Det/DetCond v11r6 2007-09-04 ==========================
! 2007-08-01 - Marco Clemencic
 - Fixed a bug connected to "lazy connection" feature. I was using an instance
   of a cool object to call a static member function. 

! 2007-07-31 - Marco Clemencic
 - Fixed a bug with the "lazy connection" feature. The thread to disconnect from
   the database was started even if we never connect.
   Now it is started only at the first connection.

!===================== Det/DetCond v11r5 2007-07-05 ==========================
! 2007-07-05 - Marco Clemencic
 - Added the possibility to connect to the database only when needed (and made
   it the default), so a job does not need the database does not need to be
   able to connect to it or to be reconfigured.
   To restore the old behavior (connection at initialize) use the option:
      CondDBAccessSvc.LazyConnect = False;

!===================== Det/DetCond v11r4 2007-06-15 ==========================
                           NEEDS: LCGCMT >= 52
! 2007-06-06 - Marco Clemencic
 - Removed the check on macro CORAL_1_8_x (use always the new CORAL feature).

!===================== Det/DetCond v11r3 2007-05-16 ==========================
                           NEEDS: LHCbKernel >= v7r3 (ICondDBInfo)
																	LCGCMT >= 51 (if macro CORAL_1_8_x is set,
                                                for CORAL 1.8.0)

! 2007-05-16 - Marco Clemencic
 - The parts that depend on CORAL 1.8.0 API are now enclosed in #ifdef/#endif
   directives, so that DetCond can be compiled with the old version of CORAL.

! 2007-05-11 - Marco Clemencic
 - Extended ICondDBReader with the interface ICondDBInfo from LHCbKernel and
   implemented the new function in all the ICondDBReader's (CondDBCnvSvc,
   CondDBAccessSvc, CondDBLayeringSvc, CondDBDispatcherSvc).
   NOTE: this introduce a dependency on LHCbKernel.

! 2007-05-03 - Marco Clemencic
 - Added service OnlineDBValidatorSvc to check if the Online CondDB replica
   is recent enough. (see doxygen documentation)

! 2007-05-02 - Marco Clemencic
 - First implementation of the algorithm to sort DB replicas extracted from
   LFC.

!===================== Det/DetCond v11r2 2007-04-23 ==========================
! 2007-04-20 - Marco Clemencic
 - Added ICondDBAccessSvc::connectionString() to be able to find the
   connection string that was used without looking in the options.
 - Use a static std::auto_ptr instead of a basic pointer and a counter of 
   instances (for CondDBAccessSvc::s_XMLstorageSpec).
 - Added class CondDBSQLiteCopyAccSvc to copy an SQLite file and connect to
   the copy.

!===================== Det/DetCond v11r1 2007-03-22 ==========================
! 2007-03-22 - Marco Clemencic
 - Small improvement to the database disconnect message.

! 2007-03-16 - Marco Clemencic
 - Added an option to enable CORAL LFCReplicaService (off by default).
 - Added an option to enable CORAL automatic connection purge.
 - Added a check on the database in CondDBAccessSvc::i_checkTag to avoid
   segmentation possible faults.
 - Disable some compiler optimizations in libstdc++ on slc3, because it seems
   that on SLC3 there are problems with multithreaded applications.

!===================== Det/DetCond v11r0 2007-03-05 ==========================
                            NEEDS LCGCMT >= 50

! 2007-03-05 - Marco Cattaneo
 - Removed obsolete DetCond_load.cpp file

! 2007-02-28 - Marco Clemencic
 - Removed a work-around for missing library in LCG_Interfaces/COOL

! 2007-02-22 - Marco Clemencic
 - Fixed a bug (segfault) occurring when requiring the time-out task without
   a connection (pure memory cache).
 - Moved few message from DEBUG to INFO and added few more messages (like
   the connection string and the tag used).
 - Activated by default the disconnect on time-out feature (with time out set
   to 10 min.)
 
! 2007-02-19 - Marco Clemencic
 - Minor change in RelyConverter.cpp (removed a useless line)

! 2007-02-14 - Marco CLEMENCIC
 - Updated to changes in COOL API
 - Added to CondDBAccessSvc a function to clear the cache

!================ Det/DetCond v10r0 2007-01-31 =============================
! 2007-01-31 - Marco Cattaneo
 - Fix and retag requirements to link on Windows.
  
! 2006-12-06 - Florence RANJARD
 - apply_pattern install_more_includes
 - fixes for new plugins (P.Mato)

!================= Det/DetCond v9r1 2006-09-04 ==============================
! 2006-09-04 - Marco Clemencic
 - Modified the way of specifying one of the element of the condition. Now the
   path to a condition in XML is:

   "conddb:/path/to/condition/[attribute@]Folder.xml[:channel][#Name]"

! 2006-08-31 - Marco Clemencic
 - Added the possibility of using one CondDB condition to store more than one
   file using elements of the attribute list.
   Backward compatible chages in the API (with deprecated functions).

! 2006-08-31 - Marco Clemencic
 - Added the possibility of disconnection from the DB after an inactivity
   period defined by CondDBAvvessSvc.ConnectionTimeOut.
   (The feature is implemented using Boost.Thread)

! 2006-08-30 - Marco Clemencic
 - Fixed a bug in CondDBDispatcherSvc: the correct alternative database was
   never selected
 - Fixed a bug in RelyConverter that was causing a segmentation fault if the
   retreived XML string didn't start with "<?xml" (it is not a valid XML
   string, but it does not justfy a segfault ;)

!================= Det/DetCond v9r0 2006-07-18 ==============================
! 2006-07-18 - Marco CLEMENCIC
 - Added to CondDBAccessSvc the possibility of chosing between read-only and
   read-write connections to the database. (default is read-only)

! 2006-07-17 - Marco CLEMENCIC
 - Using Gaudi random generator service instad of the posix one in
   CondDBAccessSvc (needed for recursive tagging)

! 2006-07-14 - Marco CLEMENCIC
 - Removed interface ICondDBCnvSvc. Now CondDBCnvSvc is an ICondDBReader and
   the layering of databases is delegated to the class CondDBLayeringSvc.
 - Removed the obsolete method ICondDBEditor::createFolder

! 2006-07-12 - Marco CLEMENCIC
 - Fixed a small bug in the code for the selection of the alternative in
   CondDBDispatcherSvc.

! 2006-07-11 - Marco CLEMENCIC
   *** will be v9r0 ***
 - Completely redesigned the support for alternative DBs:
    - Reverted to previous implementation of CondDBAccessSvc
    - Splitted ICondDBAccessSvc in 3:
       1) ICondDBReader: read only functions
       2) ICondDBEditor: write functions (storeXML, createNode, etc.)
       3) ICondDBAccessSvc: access function (setTag, etc.)
    - Added the class CondDBDispatcherSvc as an implementation of ICondDBReader.
      This one is selecting the appropriate alternative AccessSvc to use.
      The alternative is declared with something like:
        CondDBDispatcherSvc.Alternatives += { "/OnLine=CondDBAccessSvc/OnlineAccSvc" };
   The new functionality is not tested, but it is backward compatible even using
   CondDBDispatcherSvc with only the default access service (CondDBAccessSvc).
 - Dictionary updated to include the 2 new interfaces.
 - Removed dependency on PCRE (not needed anymore)
 - Documentation still to be updated.

! 2006-07-07 - Marco CLEMENCIC
 - Added the possibility of specifying alternative databases for certain
   sub trees to a CondDBAccessSvc.
   Now you have a default DB (backward compatible) and you can use a different
   COOL DB for all the directories under e.g. "/OnLine", with an option like
   CondDBAccessSvc.AlternativeDBs += { "/OnLine=<connectionString>" };
   Note: it still has to be tested, but it is backward compatible.
 - Added dependency on PCRE (used to parse the string to specify alternative DB)

! 2006-06-16 - Marco CLEMENCIC
 - Removed some code used for debugging which is not needed.
 - Added the possibility to wait that the requested tag appears
   (configurable number of trials and time between trials)

! 2006-06-12 - Marco CLEMENCIC
 - Many API changes
   - remamed ICondDBAccessSvc::createFolder to ICondDBAccessSvc::createNode
   - removed the version of ICondDBAccessSvc::storeXMLString taking two doubles
     because it was obsolete and confunding
   - replaced ICondDBAccessSvc::tagFolder with the two functions
     ICondDBAccessSvc::tagLeafNode and ICondDBAccessSvc::recursiveTag
     (the first for Folders, the second for sub-trees)
   - removed obsolete properties: HostName, User, Password, HidePassword,
     Database, Schema, BackEnd
   - property TAG renamed to DefaultTAG
   - default value for property UseCache set to true (it was false)
 - Enabled tagging functionalities (based on COOL HVS)

!================= Det/DetCond v8r0 2006-04-25 ==============================
! 2006-04-25 - Marco Clemencic
 **** requires LCGCMT_43 ****
 - Updated to COOL_1_3_x

! 2006-04-13 - Marco Clemencic
 - Fixed a problem with uninitialized variables just affecting the case of
   a FolderSet stored in the CondDB cache.

!================= Det/DetCond v7r10p1 2006-03-29 ============================
! 2006-03-29 - Marco Cattaneo
 - Trivial fix in requirements for GCCXML+Boost on Windows with LCG_v42a

!================= Det/DetCond v7r10 2006-03-22 ==============================
! 2006-03-22 - Marco Cattaneo
 - Add DetCondDict (to remove dependency on DetCond in DetSys)

!================= Det/DetCond v7r9 2006-02-03 ===============================
! 2006-02-01 - Marco Clemencic
 - Updated to Gaudi v18r2 (use Gaudi::Time instead of ITime+TimePoint)
 - Added Boost and SEAL to the dependencies because they are not inherited
   from other packages anymore

! 2006-01-25 - Nicolas Gilardi
 - Allow to use a COOL connection string instead of the splitted credentials
 - Modified Function CondDBAccessSvc::createFolder() to use large (16M)
   strings by default in the CondDB folders.

! 2006-01-22 - Marco Clemencic + Nicolas Gilardi
 - Updated to improved COOL API.

================= Det/DetCond v7r8 2006-01-20 ================================
! 2006-01-20 - Marco Cattaneo
 - Add use CORAL to requirements. N.B.: this is temporary, should be done 
   directly in COOL interface package

! 2005-12-08 - Marco Clemencic
 - Use GaudiUtils::HashMap in CondDBCache.h

================= Det/DetCond v7r7 2005-11-04 ================================
! 2005-10-18 - Marco Clemencic
 - Cosmetic improvements
   (RelyConverter, CondDBGenericCnv, CondDBAccessSvc, CondDBCnvSvc)
 - Added `#include <vector>' in ICondDBAccessSvc.h and ICondDBCnvSvc.h

! 2005-10-05 - Marco Clemencic
 - Minimal update to follow API changes from COOL_1_1_0 to COOL_1_2_4

================= Det/DetCond v7r6 2005-09-19 ================================
! 2005-09-18 - Marco Clemencic
 - Allow direct mapping of the CondDB structure to the DetectorDataSvc tree
   (no need to pass through an XML file/string with only catalogs)
 - Use the 3rd string of the GenericAddress to store the origin of the XML
   string (needed for self referencing XML string with DetDescCnv > v2r8)

! 2005-08-31 - Marco Clemencic
 - Implemented RelyConverter::updateObjRefs in order to re-initialize
   correctly the updated conditions.

! 2005-08-30 - Marco Clemencic
 - Added support to cool::ChannelId (needs DetDescCnv > v2r8)
 - Fixed a bug in CondDBCache
   (the search of conflicts in the IOVs worked only in a well defined case,
    the one tested!)

================= Det/DetCond v7r5 2005-07-21 ================================
! 2005-07-21 - Marco Clemencic
 - Apply always tag NEEDS_COOL_FACTORY (is needed by Windows and Python)

! 2005-07-11 - Marco Clemencic
 - Removed unused pointers from CondDBCnvSvc

! 2005-07-07 - Marco Cattaneo
 - Fix a doxygen warning

! 2005-07-07 - Marco Clemencic
 - Abstract interfaces moved to DetDesc (to allow python bindings)
 - Added CondDBAccessSvc::dumpCache(), it prints (level=DEBUG) the content
   of the cache.

! 2005-06-30 - Marco Clemencic
 - Added RelyConverter::fillObjectRefs (was missing, but needed for
   initialization of objects)

================= Det/DetCond v7r4 2005-06-23 ================================
! 2005-06-23 - Marco Clemencic
 - Added the possibility of having an in-memory copy of the CondDB.

! 2005-06-14 - Marco Clemencic
 - Renamed ConditionsDBCnvSvc to CondDBCnvSvc and added the interface
   ICondDBCnvSvc

================= Det/DetCond v7r3 2005-06-14 ================================
! 2005-06-14 - Marco Cattaneo
 - Move ConditionsDbCnvSvc and RelyConverter to component library.

! 2005-06-14 - Marco Clemencic
 - CondDBAccessSvc does not complain anymore if the user is not specified
	 (adapted to POOL XML authentication service, COOL > 1.1.0)

! 2005-06-08 - Marco Clemencic
 - Changed from "component library" to "component + link library"

================= Det/DetCond v7r2 ===========================================
! 2005-05-27 - Marco Clemencic
 - fixed compilation issue for Windows

! 2005-05-25 - Marco Clemencic
 - Adapted to COOL 1.1.0 (LCG_35)

================= Det/DetCond v7r1 ===========================================
! 2005-05-12 - Marco Clemencic
 - Fixed the compilation on WIN32
 - Added support to multiple databases through option
   ConditionsDBCnvSvc.CondDBAccessServices

================= Det/DetCond v7r0 ===========================================
! 2005-04-25 - Marco CLEMENCIC
 - Upgrade to COOL_1_0_0 (first production release)
 - Works with LHCb v18r3

================= Det/DetCond v6r1 ===========================================
! 2005-04-22 - Marco CLEMENCIC
 - Upgrade to COOL_0_1_0-pre2
 - Support for tagging
 - almost all the technicalities (POOL/COOL) moved to CondDBAccessSvc
 - some clean up
 - commit before the first production release

==============================================================================
! 2005-02-09 - Marco CLEMENCIC
 - Upgrade to first public preliminary version of COOL (COOL_0_0_3-pre1)
 - Renamed XMLRelyCnv to RelyConverter (it can use, in principle, any
   conversion service).
 - Moved CondDBGenericCnv to the public interface in order to allow public
   usage of RelyConverter.

==============================================================================
! 2005-01-27 - Marco CLEMENCIC
 - Upgrade to first preliminary version of the Conditions Database API:
   COOL_0_0_1

==============================================================================
! 2004-12-08 - Marco Clemencic
 - Upgrade to latest stable version of CondDB (CONDDB_0_2_0) and fixed for the
changes in Gaudi/LHCb
 - Moved and modified part of the ConditionsDBCnvSvc to a dedicated converter
(XmlRelyCnv) + a generic CondDB converter to put common Converter functions in
one place
 - Implemented the possibility to use a fall back Converter (the one relying on
DetectorPersistencySvc) if no dedicated converter is found.
Requirements v5r0

==============================================================================
!20030131 - Andrea Valassi
Upgrade to DetDesc v11r8.
Only change is in recommended CMTPATH.
- DetDesc is included in LHCB_v11r5 for all of rh61dbx, rh73dbx and Windows
- This makes it easier to distribute as DetDesc does not need to be recompiled
Requirements v4r3, private tag h20030131

==============================================================================
!20021203 - Andrea Valassi
Include the MySQL implementation for both RH73 and WIN32
- DetCond on RH73/WIN32 now depends on both Oracle and MySQL implementations
  > multiple "use..." in the requirements
  > if the "use..." statement is removed, some code is #ifndef'd away
    (as the base packages propagate to DetCond the relevant cppflags)
  > to make the code more readable, implementation-specific init() and 
    i_buildCondDBInfo() have been introduced (#ifdef'd in only if necessary!)
  > I assume RH61 is always Objy only
- Implementation is read at runtime from the job options
  > ConditionsDBGate.condDBImpl = one of CondDBObjy, CondDBOracle, CondDBMySQL
- Remove CondDBKey.h from DetCond (I forgot to remove it on h20020301!)
Requirements v4r2, private tag h20021203

==============================================================================
!20021125 - Andrea Valassi
Upgrade to CondDBOracle v4r16, Gaudi v11r2 and DetDesc v11r2.
Upgrade to RedHat73 on lxplus7.
- no major change to DetCond code
  > disable WIN32 compilation warning 4786 in ConditionsDBGate.cpp 
  > print out ORA_NLS33 and NLS_LANG to keep track of their values
- dependency on Det/CondDBOracle changed from v4r15 to v4r16 (RH7,WIN)
- dependency on Gaudi changed to v13r* (tested with v13r2)
- dependency on GaudiSvc changed to v10r* (tested with v10r1)
- dependency on Det/DetDesc changed to v11r* (tested with v11r2)
Modify CMT requirements to allow for runtime choice between Oracle and MySQL.
- precompiler directives are inherited from CondDB package(s)
- dependency on CONDDB (using Objectivity) changed to v3r02p3 (RH6)
Requirements v4r1, private tag h20021125

==============================================================================
!20020725 - Andrea Valassi
Upgrade to CondDBOracle v4r15 and Gaudi v10r4.
- no change to DetCond code
- dependency on Det/CondDBOracle changed from v3r10p1 to v4r15 (RH7,WIN)
- dependency on CONDDB (using Objectivity) remains v3r02p2 (RH6)
- dependency on Gaudi tested with GaudiKernel v12r3 and GaudiSvc v8r3
- dependency on Det/DetDesc (v10r*) tested with v10r3
Requirements v4r0, private tag h20020725

==============================================================================
!20020417 - Andrea Valassi
Upgrade to Gaudi v10
- use RedHat7.2 tag rh72_gcc2952 (not rh72_gcc29521), defined in GaudiPolicy
- dependency on Det/CondDBOracle changed from v3r10 to v3r10p1
- dependency on CONDDB changed from v3r02p1 to v3r02p2 (bug fix)
- adapt to new version of MsgStream.h in GaudiKernel for longlong printout
- dependency on Det/DetDesc changed from v9r* to v10r*
Requirements v3r0, private tag h20020417

==============================================================================
!20020405 - Andrea Valassi
Minor modifications to requirements
- dependency on CONDDB changed from v3r02 to v3r02p1
- env. variable CONDDB_implementation is defined in CONDDB or Det/CondDBOracle
Requirements v2r1, private tag h20020405

==============================================================================
!20020328 - Andrea Valassi
First Oracle implementation ported to Linux (RedHat 7.2 only)
See doc/README.RedHat72 in Ex/DetCondExample for more details
Corresponds to Emil's first official release of ConditionsDB (0.3.1.0)
- change WIN32 dependency on Det/CondDBOracle package to version v3r10
- add rh72_gcc29521 dependency on Det/CondDBOracle v3r10
- keep rh61_gcc29521 dependency on CONDDB v3r02
Requirements v2r1, private tag h20020328.

==============================================================================
!20020308 - Andrea Valassi
Change dependency on CondDBOracle package to version v2r10 (0.2.1.0).
Requirements v2r1, private tag h20020308.

==============================================================================
!20020301 - Andrea Valassi
First version supported on Windows using an Oracle implementation of CondDB.
- Platform-specific support
  > remove CondDBKey.h from DetCond: use that from the ConditionsDB package
  > interchange the contents of DetCond_dll and DetCond_load
  > remove #ifdef's with dummy failure codes for non-Linux platforms
- Support of Oracle (needed also to suppport Oracle under Linux)
  > implementation specified in the requirements  is propagated via #ifdef's
  > new init string for the Oracle database including host, user and password
  > CondDBOracleMgrFactory or CondDBObjyDBMgrFactory called in either case
Requirements v2r1, private tag h20020301.

==============================================================================
!20020110 - Flr
 requirements - apply packageShr instead of ld_library_path pattern because 
                it is a component library.
                do not apply package_Lshlibflags, there is no linker library.
 
!20011220 - Andrea Valassi
Simplify dependencies on the Gaudi framework.

==============================================================================
!20011216 - Andrea Valassi
Major changes due to tighter coordination with DetDesc and XmlDDDB packages.
- Update cannot be delegated to XmlCnvSvc until major changes in DetDes 
  > code creating and interpreting DOM trees in each Xml converter should be 
    executed also in updateObj(): to avoid duplicating code, a solution is 
    to move it from createObj() to updateObj() or better updateObjRefs(),
    which should be called internally from createObj()
  > my (temporary?) solution is to create a new object using the address, and 
    deep copy part of it into the old one by a Condition::update(Condition&)
    method to deep copy only those properties of a DataObject that refer
    to a Condition (eg validity and parameters); the registry, address,
    reference counts and other DataObject properties should not be deep
    copied instead (hence an overloaded operator= is not introduced)
  > update of DataObjects is only possible for Conditions (and derived classes)
    because this method exists only for Conditions
  > this is the only reason to have a dependency on DetDesc
  > however, DataObjects not implementing IValidity are now assumed valid
    (previously, an error was returned when updating them)
- Changes in folder description
  > classID are removed from all XML refs: remove it from folder description
  > assume that secondary storage type is always read from folder description
- Remove ConditionsDBAddress (a GenericAddress of type CONDDB is enough)
  > par[0] is still the COndDB folder name
  > the tag name is not anymore in the CONDDB address
  > par[1] is now the name of the element (e.g. the name of an XML element)
  > the string storage type is not in the CONDDB address
    (it is now assumed that it is always read from the folder description)
  > ipar{0,1] are not used anymore 
- Registry entry (can be 0) is used in creating and updating Conditions
  > for instance: this is needed for catalog conversion
  > it is set in the secondary temporary address (e.g. an XML catalog address)
- Minor changes in messaging: use VERBOSE tag for verbose comments
- Overload methods for writing representations in ConditionsDBCnvSvc
  > they must be overloaded because this CnvSvc has no converters
  > they are empty for the moment (not yet implemented)
- Upgrade to CMT v1r10: remove scripts and hacks needed to cure a bug in CMT
Requirements v2r0, private tag h20011216.

==============================================================================
!20011130 - Andrea Valassi
Modified version of DetDataSvc in GaudiSvc committed to CVS 
- Contains main features of ConditionDataSvc and ConditionsDBDataSvc
- Remove ConditionDataSvc and ConditionsDBDataSvc from this package

==============================================================================
!20011129 - Andrea Valassi
- Remove the IConditionsDBDataSvc special interface
  > ConditionsDBDataSvc now does little more than ConditionDataSvc
- Implement a dummy IIncidentListener interface in ConditionDataSvc
- Redefine ConditionsDBAddress_undefinedClassID = CLID_NULL (it will disappear)

==============================================================================
!20011128 - Andrea Valassi
Move the global tag from the ConditionsDBDataSvc to the ConditionsDBCnvSvc
- Use IAddressCreator interface of CnvSvc to create addresses with global tag
  > "DEFAULT" becomes a reserved word to indicate the global tag
- Remove method setGlobalTag (the tag can only be set in the job options)

==============================================================================
!20011127 - Andrea Valassi
A few more changes before including my detector data service in GaudiSvc
- The event time is not passed in an address from the DataSvc to the CnvSvc
  > remove IConditionAddress
  > ConditionsDBCnvSvc now reads the event time from the DetDataSvc
  > ConditionDataSvc::updateObject now just checks validity before delegating
- Move interface IDetDataSvc (formerly IConditionDataSvc) to GaudiKernel 
  > needed to retrieve the event time within the ConditionsDBCnvSvc
  > the setEventTime method is temporary (eventually: use the IncidentService)
- Store ConditionsDBAddress private data as GenericAddress private data

==============================================================================
!20011126 - Andrea Valassi
A few changes before including my data service in GaudiSvc.
- Move ConditionData from DetCond/src/Lib to DetCondExample
  > only DataObjects are manipulated, with dynamic casts to IValidity
  > no Lib anymore in DetCond/src
- Manipulate ITime and TimePoint objects rather than ITime pointers
  > add bool method to check if the event time is defined in ConditionDataSvc

==============================================================================
!20011123 - Andrea Valassi
Upgrade to Gaudi v9
- Addresses now inherit from GenericAddress (which has been simplified a lot)
- There are no address factories any more
- Adapt to changes in RegistryEntry (which now implements IRegistry)
- Add dummy methods fillObjRefs and updateObjRefs in ConditionsDBCnvSvc
- Notify (by flag "true") ServiceLocator to create services not existing yet
Requirements v2, private tag h20011123.

==============================================================================
!20010914 - Andrea Valassi
New package.
Requirements v1, private tag v1.

