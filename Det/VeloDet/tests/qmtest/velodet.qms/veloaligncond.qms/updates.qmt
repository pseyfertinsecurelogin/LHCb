<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
    (c) Copyright 2000-2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="options"><text>
from Gaudi.Configuration import *
from Configurables import (ApplicationMgr, MessageSvc,
                           DDDBConf, CondDB,
                           EventClockSvc, FakeEventTime,
                           UpdateManagerSvc)
import GaudiKernel.SystemOfUnits as unit
import os

ConditionPaths =  ["/dd/Conditions/Online/Velo/MotionSystem",
                   "/dd/Conditions/Alignment/Velo/VeloLeft",
                   "/dd/Conditions/Alignment/Velo/VeloRight"]

DDDBConf() # detector description
CondDB().addLayer(os.path.join(os.environ.get('TEST_OVERLAY_ROOT',
                                              'Det/VeloDet/test/DB'),
                               'updates'))  # use local test DB

# This is needed to trigger the instantiation of the update manager service
from Configurables import DetCondTest__TestConditionAlg
alg = DetCondTest__TestConditionAlg()
alg.Conditions = ConditionPaths

ApplicationMgr(TopAlg = [alg], EvtSel = "NONE", EvtMax = 8)
#MessageSvc(OutputLevel = 1)

UpdateManagerSvc().OutputLevel = VERBOSE


ecs = EventClockSvc(InitialTime = 10 * unit.s)
ecs.addTool(FakeEventTime, "EventTimeDecoder")
ecs.EventTimeDecoder.StartTime = ecs.InitialTime
ecs.EventTimeDecoder.TimeStep =  10 * unit.s

#MessageSvc(setVerbose = ["VeloAlignCond"])
</text></argument>
<argument name="reference"><text>../data/VeloAlignCondUpdates.ref</text></argument>
<argument name="validator"><text>
from GaudiConf.QMTest.LHCbExclusions import preprocessor
validateWithReference(preproc=preprocessor
                      + RegexpReplacer(r'using checked out files in .*test/DB',
                                       'using checked out files in test/DB'))
</text></argument>
</extension>
