/*****************************************************************************\
* (c) Copyright 2018 CERN for the benefit of the LHCb Collaboration           *
*                                                                             *
* This software is distributed under the terms of the GNU General Public      *
* Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".   *
*                                                                             *
* In applying this licence, CERN does not waive the privileges and immunities *
* granted to it by virtue of its status as an Intergovernmental Organization  *
* or submit itself to any jurisdiction.                                       *
\*****************************************************************************/
#ifndef    DETDESCCNV_XMLCNVEXCEPTION_ICPP
#define    DETDESCCNV_XMLCNVEXCEPTION_ICPP 1 
 
#include "DetDescCnv/XmlCnvException.h"


///////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::XmlCnvException( const std::string& message , 
                                         const StatusCode & sc      )
  : GaudiException( message , "*XmlCnvException*" , sc )
{}
///////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::XmlCnvException( const std::string    & message ,
                                         const GaudiException & ge      ,
                                         const StatusCode     & sc      )
  : GaudiException( message , "*XmlCnvException*" , sc , ge      )
{}
////////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::XmlCnvException( const XmlCnvException& right )
  : std::exception(), GaudiException( right )
{}
///////////////////////////////////////////////////////////////////////////////////////////////////
inline XmlCnvException::~XmlCnvException() throw() {}
///////////////////////////////////////////////////////////////////////////////////////////////////
inline const char*       XmlCnvException::getMessage() const { return message().c_str() ; }
///////////////////////////////////////////////////////////////////////////////////////////////////
inline const char*       XmlCnvException::getType   () const { return tag().c_str()     ; } 
///////////////////////////////////////////////////////////////////////////////////////////////////
inline const StatusCode& XmlCnvException::status    () const { return code()            ; } 
///////////////////////////////////////////////////////////////////////////////////////////////////
inline GaudiException*   XmlCnvException::clone     () const { return new XmlCnvException(*this);} 
///////////////////////////////////////////////////////////////////////////////////////////////////

#endif  // DETDESCCNV_XMLCNVEXCEPTION_ICPP
