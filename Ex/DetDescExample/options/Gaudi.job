#!/bin/csh
###########################################################
#   Initialize LSF queue parameters
#
# "-q" gives the queue (1nh by default)
# "-c" gives the CPU time in minutes
#
# -q 8nm  = about 30 min HP735     express
# -q 1nh           3 hours         short
# -q 8nh           1 day           medium
# -q 1nd           3 days          long
# -q 1nw          10 days HP K260  verylong
#
#
#  define the job name
#BSUB -J myjob
#  define the queue
#BSUB -q z5_1nh
#
###########################################################
#
# in BATH output files are written in the BATCH machine
# and copy at the end to your $MYWORKDIR output directory
# in INTERACTIVE output files are written onto $WORKDIR
# you have to set $WORKDIR to what you want
#

set MODE = $CMTCONFIG
if ($#argv == 1) set MODE = "$1"

# == set the root directory of your job
if ($?LS_SUBCWD) then 
# in BATCH, WORKDIR is set by the system
# in BATCH, location of executable has to be given explicitly
  setenv MYJOBROOT $HOME/cmtuser/Ex/DetDescExample/v7r5
else
# in interactive set WORKDIR to submission directory
  set WORKDIR = $PWD
# in interactive, executable is under same root directory as this command file
  cd `dirname $0` 
  cd ..
  set MYJOBROOT = $PWD
endif

# == set the program environment
source $MYJOBROOT/cmt/setup.csh -tag=$MODE

# == executable name
setenv EXEC DetDescExample
#
# == in batch copy the executable,======================================= 
#    in interactive create a link to the executable you want to run =======
#
if ($?LS_SUBCWD) then
  cp $MYJOBROOT/$MODE/$EXEC.exe tmpjob.exe
else
  ln -fs $MYJOBROOT/$MODE/$EXEC.exe tmpjob.exe
endif
#
#==  create temporary joboptions file ==================
#
#
cat >! tmpjob.opts<<EOF
// Do not use standard options, as we do not need event input

// Define the other standard DLLs and services
ApplicationMgr.DLLs   = { "GaudiAud" };
AuditorSvc.Auditors   = { "ChronoAuditor" };

// Set up the detector description service
#include "$DDDBROOT/options/DDDB.opts"
#include "$DDDBROOT/options/DC06.opts"

//--------------------------------------------------------------
// Private Application Configuration options
//--------------------------------------------------------------
ApplicationMgr.TopAlg =  { "SimpleAlgorithm/Simple" };

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel = 3;

EOF

#
# == run $EXEC.exe ============================================
#
time ./tmpjob.exe tmpjob.opts

# == job is finished: remove temporary files ==========
rm tmp*

# == job is finished: if in batch copy output files on user directories
#
if ($?LS_SUBCWD) then 
  ls *.* >! RETURN
endif

exit 0










