<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="options"><text>
from Configurables import IOTest
from GaudiConf.IOHelper import IOHelper

from Configurables import ApplicationMgr, createODIN
odin = createODIN()
ApplicationMgr().TopAlg += [ odin ]

IOTest( EvtMax = 5, LoadAll = True, DataContent = 'MDST' )

ioh = IOHelper()
ioh.setupServices()
ioh.inputFiles(['Reco14-Stripping21.mdst'])
  </text></argument>
  <argument name="reference"><text>../refs/reco14stripping21mdst.ref</text></argument>
  <argument name="validator"><text>
from GaudiConf.QMTest.LHCbExclusions import preprocessor as LHCbPreprocessor
preprocessor = LHCbPreprocessor + \
  LineSkipper(["DetectorPersist...   INFO Added successfully Conversion service:XmlCnvSvc"]) + \
  LineSkipper(["DetectorDataSvc   SUCCESS Detector description database: conddb:/lhcb.xml"]) + \
  LineSkipper(["EventSelector        INFO Stream:EventSelector.DataStreamTool_1 Def:DATAFILE"]) + \
  LineSkipper(["EventPersistenc...   INFO Added successfully Conversion service:RootCnvSvc"]) + \
  LineSkipper(["InputCopyStream"]) + \
  LineSkipper(["COOLConfSvc          INFO CORAL Connection Retrial"]) + \
  LineSkipper(["ONLINE_xxxxxx        INFO Connected to database"]) + \
  LineSkipper(["FileRecordPersi...   INFO Added successfully Conversion service:FileRecordCnvSvc"])
validateWithReference(preproc = preprocessor)
</text></argument>
  <argument name="prerequisites"><set>
    <tuple><text>ioexample.copyreco14stripping21mdsttoroot</text><enumeral>PASS</enumeral></tuple>
  </set></argument>
</extension>
