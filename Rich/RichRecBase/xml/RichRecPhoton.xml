<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">
<gdd>
<package name="RichRecBase">

<!-- **************************************************************************
  * $Id: RichRecPhoton.xml,v 1.7 2006-01-23 14:08:55 jonrob Exp $
  *****************************************************************************
  * XML-description of RichRecTrack class                                     *
  * author: Chris Jones   Christopher.Rob.Jones@cern.ch                       *
  * date:   2004-06-23                                                        *
  ************************************************************************* -->

        
<class 
        author           = "Chris Jones   (Christopher.Rob.Jones@cern.ch)" 
        desc             = "Rich reconstruction photon candidate. The result of an association between a RichRecTrack and a RichRecPixel." 
        id               = "12424" 
        keyedContTypeDef = "TRUE" 
        location         = "Rec/Rich/RecoEvent/Photons" 
        name             = "RichRecPhoton" 
        stdVectorTypeDef = "TRUE" >

        <base name="KeyedObject&lt;RichRecPhotonKey&gt;"/>

        <import name="RichRecBase/RichRecPhotonKey"/>
        <import name="RichKernel/RichHypoData"/>
        <import name="Kernel/RichParticleIDType"/>
        <import name="RichEvent/RichGeomPhoton"/>
        <import name="RichKernel/RichObjPtn"/>
        <import name="Event/RichRecSegment" soft="TRUE" />
        <import name="Event/RichRecTrack"   soft="TRUE" />
        <import name="Event/RichRecPixel"   soft="TRUE" />

        <location name="Offline" place="Rec/Rich/OfflineEvent/Photons"/>
        <location name="HLT"     place="Rec/Rich/HLTEvent/Photons"/>

        &KeyedObject;

 	<typedef 
		desc   = "type for internal storage for floating point data" 
		access = "PUBLIC" 
		def    = "FloatType" 
		type   = "float"
	/>

        <constructor 
                desc     = "Constructor from detailed information" 
                initList = "m_geomPhoton(photon), m_expPixelSignalPhots(), m_expPixelScattPhots(), m_richRecSegment(pSeg), m_richRecTrack(pTrk), m_richRecPixel(pPix)">
                <arg name="photon" type="LHCb::RichGeomPhoton*"/>
                <arg inout="BYVALUE" name="pSeg" type="LHCb::RichRecSegment*"/>
                <arg inout="BYVALUE" name="pTrk" type="LHCb::RichRecTrack*"/>
                <arg inout="BYVALUE" name="pPix" type="LHCb::RichRecPixel*"/>
                <code/>
        </constructor>
            
        <method 
                const = "FALSE" 
                desc  = "Sets the expected signal contribution to the associated RichRecPixel for a given particle hypothesis" 
                name  = "setExpPixelSignalPhots" >
                <arg const="TRUE" inout="BYVALUE" name="type"    type="Rich::ParticleIDType"/>
                <arg const="TRUE" inout="BYVALUE" name="photons" type="LHCb::RichRecPhoton::FloatType"/>
                <code>
                        expPixelSignalPhots().setData(type,photons);
                </code>
        </method>
            
        <method 
                const = "FALSE" 
                desc  = "Sets the expected scattered contribution to the associated RichRecPixel for a given particle hypothesis" 
                name  = "setExpPixelScattPhots" >
                <arg const="TRUE" inout="BYVALUE" name="type"    type="Rich::ParticleIDType"/>
                <arg const="TRUE" inout="BYVALUE" name="photons" type="LHCb::RichRecPhoton::FloatType"/>
                <code>
                        expPixelScattPhots().setData(type,photons);
                </code>
        </method>
            
        <method 
                const = "TRUE" 
                desc  = "Returns the expected signal contribution to the associated RichRecPixel for a given particle hypothesis" 
                name  = "expPixelSignalPhots" 
                type  = "LHCb::RichRecPhoton::FloatType" >
                <arg const="TRUE" inout="BYVALUE" name="type" type="Rich::ParticleIDType"/>
                <code>
                        return (expPixelSignalPhots())[type];
                </code>
        </method>
            
        <method 
                const = "TRUE" 
                desc  = "Returns the expected scattered contribution to the associated RichRecPixel for a given particle hypothesis" 
                name  = "expPixelScattPhots" 
                type  = "LHCb::RichRecPhoton::FloatType">
                <arg const="TRUE" inout="BYVALUE" name="type" type="Rich::ParticleIDType"/>
                <code>
                        return (expPixelScattPhots())[type];
                </code>
        </method>
            
        <method 
                desc = "Reset information to force recalculation" 
                name = "reset" 
                type = "void"
        />

        <method 
                desc  = "The result of the Cherenkov angles reconstruction" 
                name  = "geomPhoton" 
                const = "TRUE" 
                type  = "const LHCb::RichGeomPhoton &amp;" >
                <code> return *m_geomPhoton.object(); </code>
        </method>
        <method 
                desc  = "The result of the Cherenkov angles reconstruction" 
                name  = "geomPhoton" 
                const = "FALSE" 
                type  = "LHCb::RichGeomPhoton &amp;" >
                <code> return *m_geomPhoton.object(); </code>
        </method>
        <attribute 
                setMeth     = "FALSE"
                getMeth     = "FALSE"
                desc        = "The result of the Cherenkov angles reconstruction" 
                name        = "geomPhoton" 
                type        = "RichObjPtn&lt; LHCb::RichGeomPhoton &gt;"
        />   

        <method 
                desc  = "Retrieve const The Expected number of signal photons for each particle hypothesis" 
                name  = "expPixelSignalPhots" 
                const = "TRUE" 
                type  = "const RichHypoData&lt;LHCb::RichRecPhoton::FloatType&gt; &amp;" >
                <code> return *m_expPixelSignalPhots.object(); </code>
        </method>
        <method 
                desc  = "Retrieve The Expected number of signal photons for each particle hypothesis" 
                name  = "expPixelSignalPhots" 
                const = "FALSE" 
                type  = "RichHypoData&lt;LHCb::RichRecPhoton::FloatType&gt; &amp;" >
                <code> return *m_expPixelSignalPhots.object(); </code>
        </method>
        <attribute 
                setMeth     = "FALSE"
                getMeth     = "FALSE"
                desc        = "The Expected number of signal photons for each particle hypothesis" 
                name        = "expPixelSignalPhots" 
                type        = "RichObjPtn&lt; RichHypoData&lt;LHCb::RichRecPhoton::FloatType&gt; &gt;"
        />

        <method 
                desc  = "Retrieve const The Expected number of scattered photons for each particle hypothesis" 
                name  = "expPixelScattPhots" 
                const = "TRUE" 
                type  = "const RichHypoData&lt;LHCb::RichRecPhoton::FloatType&gt; &amp;" >
                <code> return *m_expPixelScattPhots.object(); </code>
        </method>
        <method 
                desc  = "Retrieve The Expected number of scattered photons for each particle hypothesis" 
                name  = "expPixelScattPhots" 
                const = "FALSE" 
                type  = "RichHypoData&lt;LHCb::RichRecPhoton::FloatType&gt; &amp;" >
                <code> return *m_expPixelScattPhots.object(); </code>
        </method>
        <attribute 
                setMeth     = "FALSE"
                getMeth     = "FALSE"
                desc        = "The Expected number of scattered photons for each particle hypothesis" 
                name        = "expPixelScattPhots" 
                type        = "RichObjPtn&lt; RichHypoData&lt;LHCb::RichRecPhoton::FloatType&gt; &gt;"
        />

        <attribute 
                compression = "FALSE" 
                desc        = "RichRecSegment used in the formation of the RichRecPhoton candidate" 
                init        = "0" 
                name        = "richRecSegment" 
                type        = "LHCb::RichRecSegment*"
                nonconstaccessor = "TRUE"
        />
            
        <attribute 
                compression = "FALSE" 
                desc        = "RichRecTrack associated to the RichRecSegment used in the formation of the RichRecPhoton candidate" 
                init        = "0" 
                name        = "richRecTrack" 
                type        = "LHCb::RichRecTrack*"
                nonconstaccessor = "TRUE"
        />
            
        <attribute 
                compression = "FALSE" 
                desc        = "RichRecPixel used in the formation of the RichRecPhoton candidate" 
                init        = "0" 
                name        = "richRecPixel" 
                type        = "LHCb::RichRecPixel*"
                nonconstaccessor = "TRUE"
        />
        
</class>

</package>
</gdd>
