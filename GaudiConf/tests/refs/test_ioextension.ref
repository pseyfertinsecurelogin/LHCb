=============================
None
=============================
- input conversion tests
- test file detection and dressing
MDF
MDF
DATAFILE='eggs.spam_.RAW' SVC='LHCb::MDFSelector' OPT='READ'
DATAFILE='eggs.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
MDF
MDF
DATAFILE='eggs.spam_.spam_.mdf' SVC='LHCb::MDFSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.digi' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.sim' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
ROOT
ROOT
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.sdst' SVC='Gaudi::RootEvtSelector' OPT='READ'
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
- check you take the last extension
ROOT
MDF
- test getting ioh
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='MDF'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='MDF'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
- test inputting files
['eggs.spam_.RAW', 'eggs.spam_.spam_.mdf', 'eggs.spam_.spam_.spam_.digi', 'eggs.spam_.spam_.spam_.spam_.sim', 'eggs.spam_.spam_.spam_.spam_.spam_.sdst', 'eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst', 'eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst', 'eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst']
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
["DATAFILE='eggs.spam_.RAW' SVC='LHCb::MDFSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.mdf' SVC='LHCb::MDFSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.digi' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.sim' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.sdst' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='Gaudi::RootEvtSelector' OPT='READ'"]
- test outputting files
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
[OutputStream('StrRAW'), OutputStream('Strmdf'), OutputStream('Strdigi'), RecordStream('FSROutputStreamStrdigi'), OutputStream('Strsim'), RecordStream('FSROutputStreamStrsim'), OutputStream('Strsdst'), RecordStream('FSROutputStreamStrsdst'), OutputStream('Strxdst'), RecordStream('FSROutputStreamStrxdst'), OutputStream('Strmdst'), RecordStream('FSROutputStreamStrmdst'), OutputStream('Strdst'), RecordStream('FSROutputStreamStrdst'), OutputStream('Algmdf'), OutputStream('Algxdst'), RecordStream('FSROutputStreamAlgmdst'), RecordStream('FSROutputStreamAlgdst'), OutputStream('Algdigi'), OutputStream('AlgRAW'), OutputStream('Algsim'), OutputStream('Algmdst'), RecordStream('FSROutputStreamAlgdigi'), OutputStream('Algsdst'), RecordStream('FSROutputStreamAlgxdst'), RecordStream('FSROutputStreamAlgsim'), RecordStream('FSROutputStreamAlgsdst'), OutputStream('Algdst')]
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
- test file extensions which should not be known
['UNKNOWN', 'UNKNOWN', 'UNKNOWN', 'UNKNOWN']
- input card printing test
from GaudiConf import IOExtension
IOExtension("ROOT").inputFiles([
    "eggs.spam_.RAW",
    "eggs.spam_.spam_.mdf",
    "eggs.spam_.spam_.spam_.digi",
    "eggs.spam_.spam_.spam_.spam_.sim",
    "eggs.spam_.spam_.spam_.spam_.spam_.sdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst"
    ])
from GaudiConf import IOExtension
IOExtension().inputFiles([
    "eggs.spam_.RAW",
    "eggs.spam_.spam_.mdf",
    "eggs.spam_.spam_.spam_.digi",
    "eggs.spam_.spam_.spam_.spam_.sim",
    "eggs.spam_.spam_.spam_.spam_.spam_.sdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst"
    ])
(0, '# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning')
(0, '# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning')
=============================
ROOT
=============================
- input conversion tests
- test file detection and dressing
MDF
MDF
DATAFILE='eggs.spam_.RAW' SVC='LHCb::MDFSelector' OPT='READ'
DATAFILE='eggs.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
MDF
MDF
DATAFILE='eggs.spam_.spam_.mdf' SVC='LHCb::MDFSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.digi' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.sim' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
ROOT
ROOT
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.sdst' SVC='Gaudi::RootEvtSelector' OPT='READ'
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
ROOT
ROOT
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='Gaudi::RootEvtSelector' OPT='READ'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
- check you take the last extension
ROOT
MDF
- test getting ioh
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='MDF'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='MDF' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='MDF'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='MDF'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='MDF'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
<IOHelper Input='ROOT' Output='ROOT'>
- test inputting files
['eggs.spam_.RAW', 'eggs.spam_.spam_.mdf', 'eggs.spam_.spam_.spam_.digi', 'eggs.spam_.spam_.spam_.spam_.sim', 'eggs.spam_.spam_.spam_.spam_.spam_.sdst', 'eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst', 'eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst', 'eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst']
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
["DATAFILE='eggs.spam_.RAW' SVC='LHCb::MDFSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.mdf' SVC='LHCb::MDFSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.digi' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.sim' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.sdst' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='Gaudi::RootEvtSelector' OPT='READ'", "DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='Gaudi::RootEvtSelector' OPT='READ'"]
- test outputting files
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning
[OutputStream('StrRAW'), OutputStream('Strmdf'), OutputStream('Strdigi'), RecordStream('FSROutputStreamStrdigi'), OutputStream('Strsim'), RecordStream('FSROutputStreamStrsim'), OutputStream('Strsdst'), RecordStream('FSROutputStreamStrsdst'), OutputStream('Strxdst'), RecordStream('FSROutputStreamStrxdst'), OutputStream('Strmdst'), RecordStream('FSROutputStreamStrmdst'), OutputStream('Strdst'), RecordStream('FSROutputStreamStrdst'), OutputStream('StrRAW'), OutputStream('Strmdf'), OutputStream('Strdigi'), RecordStream('FSROutputStreamStrdigi'), OutputStream('Strsim'), RecordStream('FSROutputStreamStrsim'), OutputStream('Strsdst'), RecordStream('FSROutputStreamStrsdst'), OutputStream('Strxdst'), RecordStream('FSROutputStreamStrxdst'), OutputStream('Strmdst'), RecordStream('FSROutputStreamStrmdst'), OutputStream('Strdst'), RecordStream('FSROutputStreamStrdst'), OutputStream('Algmdf'), OutputStream('Algxdst'), RecordStream('FSROutputStreamAlgmdst'), RecordStream('FSROutputStreamAlgdst'), OutputStream('Algdigi'), OutputStream('AlgRAW'), OutputStream('Algsim'), OutputStream('Algmdst'), RecordStream('FSROutputStreamAlgdigi'), OutputStream('Algsdst'), RecordStream('FSROutputStreamAlgxdst'), RecordStream('FSROutputStreamAlgsim'), RecordStream('FSROutputStreamAlgsdst'), OutputStream('Algdst')]
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdf' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.RAW' SVC='LHCb::RawDataCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.digi' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='RootCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.xdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sim' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.sdst' SVC='FileRecordCnvSvc' OPT='REC'
DATAFILE='eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst' SVC='RootCnvSvc' OPT='REC'
- test file extensions which should not be known
['UNKNOWN', 'UNKNOWN', 'UNKNOWN', 'UNKNOWN']
- input card printing test
from GaudiConf import IOExtension
IOExtension("ROOT").inputFiles([
    "eggs.spam_.RAW",
    "eggs.spam_.spam_.mdf",
    "eggs.spam_.spam_.spam_.digi",
    "eggs.spam_.spam_.spam_.spam_.sim",
    "eggs.spam_.spam_.spam_.spam_.spam_.sdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst"
    ])
from GaudiConf import IOExtension
IOExtension().inputFiles([
    "eggs.spam_.RAW",
    "eggs.spam_.spam_.mdf",
    "eggs.spam_.spam_.spam_.digi",
    "eggs.spam_.spam_.spam_.spam_.sim",
    "eggs.spam_.spam_.spam_.spam_.spam_.sdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.xdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.mdst",
    "eggs.spam_.spam_.spam_.spam_.spam_.spam_.spam_.spam_.dst"
    ])
(0, '# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning')
(0, '# Warning, guessing type of SDST to be ROOT use IOHelper instead to avoid this warning')
