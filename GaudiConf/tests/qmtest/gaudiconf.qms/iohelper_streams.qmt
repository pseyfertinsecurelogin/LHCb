<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
    (c) Copyright 2000-2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: rlambert
# Purpose: Test IOHelper's handling of input/output streams
# Prerequisites: None
# Common failure modes, severities and cures:
#               . MAJOR: Any failure indicates a major problem with how IOHelper handles streams
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>python</text></argument>
  <argument name="args"><set><text>../test_iohelper_streams.py</text></set></argument>
  <argument name="reference"><text>../refs/test_iohelper_streams.ref</text></argument>
  <argument name="validator"><text>
from GaudiConf.QMTest.LHCbExclusions import preprocessor
import Configurables
if repr(Configurables.Gaudi__Examples__EvtColAlg("x")).startswith("Gaudi::Examples::"):
    # It's an old Gaudi, so we miss the fix to https://its.cern.ch/jira/browse/GAUDI-1290
    # we must artifically hide some differences
    from GaudiTesting.BaseTest import RegexpReplacer
    preprocessor = preprocessor + RegexpReplacer("__", "::", "SomethingWeird")
validateWithReference(preproc = preprocessor)
</text></argument>
</extension>
