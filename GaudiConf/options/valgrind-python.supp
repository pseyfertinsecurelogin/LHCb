##-----------------------------------------------------------------------------##
# Valgrind error suppression file for python (e.g. for gaudirun.py)
# See also http://svn.python.org/projects/python/trunk/Misc/valgrind-python.supp
##-----------------------------------------------------------------------------##

{
   PyList_New
   Memcheck:Leak
   fun:malloc
   fun:PyList_New
}
{
   PyObject_Malloc
   Memcheck:Leak
   fun:malloc
   fun:PyObject_Malloc
}
{
  PyObject_Free : Invalid read of size 4
  Memcheck:Addr4
  fun:PyObject_Free
}
{
  PyObject_Free : Invalid read of size 8
  Memcheck:Addr8
  fun:PyObject_Free
}
{
  PyObject_Free : Use of uninitialised value of size 4
  Memcheck:Value4
  fun:PyObject_Free
}
{
  PyObject_Free : Use of uninitialised value of size 8
  Memcheck:Value8
  fun:PyObject_Free
}
{
  PyObject_Free : Conditional jump or move depends on uninitialised value(s)
  Memcheck:Cond
  fun:PyObject_Free
}
{
  PyObject_Realloc : Invalid read of size 4
  Memcheck:Addr4
  fun:PyObject_Realloc
}
{
  PyObject_Realloc : Invalid read of size 8
  Memcheck:Addr8
  fun:PyObject_Realloc
}
{
  PyObject_Realloc : Use of uninitialised value of size 4
  Memcheck:Value4
  fun:PyObject_Realloc
}
{
  PyObject_Realloc : Use of uninitialised value of size 8
  Memcheck:Value8
  fun:PyObject_Realloc
}
{
  PyObject_Realloc : Conditional jump or move depends on uninitialised value(s)
  Memcheck:Cond
  fun:PyObject_Realloc
}
{
   _PyObject_GC_Malloc : Possible memory leak
   Memcheck:Leak
   fun:malloc
   fun:_PyObject_GC_Malloc
}
{
   dictresize : Possible memory leak
   Memcheck:Leak
   fun:malloc
   fun:dictresize
}
{
   PyString_FromStringAndSize : Possible memory leak
   Memcheck:Leak
   fun:malloc
   fun:PyString_FromStringAndSize
}
{
   PyInt_FromLong
   Memcheck:Leak
   fun:malloc
   fun:PyInt_FromLong
}
{
   PyROOT::BuildRootClassDict
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN6PyROOT18BuildRootClassDictINS_13TScopeAdapterENS_12TBaseAdapterENS_14TMemberAdapterEEEiRKT_P7_object
}

{
   PyROOT::CreateConverter(std::string const&, long)
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN6PyROOT15CreateConverterERKSsl
}

{
   PyROOT::CreateExecutor(std::string const&)
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN6PyROOT14CreateExecutorERKSs
}

{
   PyROOT::CreateConverter(std::string const&, long)
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN12_GLOBAL__N_118CreateIntConverterEl
}

{
   PyROOT::CreateExecutor(std::string const&)
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN12_GLOBAL__N_118CreateLongExecutorEv
}

{
   PyROOT::MethodProxy::MethodInfo_t::MethodInfo_t()
   Memcheck:Leak
   fun:_Znwm
   fun:_ZN6PyROOT11MethodProxy12MethodInfo_tC1Ev
}

{
   PyROOT::MethodProxy_New(std::string const&, PyROOT::PyCallable*)
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN6PyROOT15MethodProxy_NewERKSsPNS_10PyCallableE
}

{
   PyROOT::TMethodHolder<PyROOT::TScopeAdapter, PyROOT::TMemberAdapter>::InitCallFunc_()
   Memcheck:Leak
   fun:_Znwm
   ...
   fun:_ZN6PyROOT13TMethodHolderINS_13TScopeAdapterENS_14TMemberAdapterEE13InitCallFunc_Ev
}
