!-----------------------------------------------------------------------------
! Package     : Calo/CaloDAQ
! Responsible : Olivier Deschamps
! Purpose     : Convert Calo Digit and Trigger information to RawEvent banks.
!-----------------------------------------------------------------------------

!========================= CaloDAQ v4r37 2014-02-17 =========================
! 2014-02-13 - Rob Lambert
 - Suppress silly info printout

! 2014-02-13 - Rob Lambert
 - Adapt calo decoder tool to Decoder base classes, task #49078

!========================= CaloDAQ v4r36 2013-10-23 =========================
! 2013-10-09 - Olivier Deschamps
 -  python/CaloDAQ/CaloDigits.py & Configuration.py : allow to set-up the valid sub-detectors
 -  src/CaloDigitFilter{Alg,Tool} :  protect against the upgrade configuration with no Spd/Prs

!========================= CaloDAQ v4r35 2013-07-17 =========================
! 2013-06-12 - Marco Cattaneo
 - Add virtual destructor to ICaloReadoutTool interface class. Fixes gcc48 warning
   virtual-move-assign, see explanation in https://sft.its.cern.ch/jira/CFHEP-87

!========================= CaloDAQ v4r34 2013-06-03 =========================
! 2013-05-10 - Olivier Deschamps
  - CaloDigitsFilterTool : bug fix in getMask() method

! 2013-05-07 - Marco Cattaneo
 - Fix inappropriate use of endmsg with an ostringstream
 - Remove 'do nothing' finalize methods

!========================= CaloDAQ v4r33 2013-04-29 =========================
! 2013-04-16 - Marco Clemencic
 - Fixed Clang warnings.

! 2013-04-02 - Marco Cattaneo
 - In CaloFillRawBuffer:
   . Fix UNINIT_CTOR defect
   . Protect against invalid algorithm name

!========================= CaloDAQ v4r32 2013-02-04 =========================
! 2012-12-07 - Marco Cattaneo
 - use getIfExists when appropriate

!========================= CaloDAQ v4r31 2012-11-26 =========================
! 2012-11-15 - Marco Clemencic
 - Added CMake configuration file.

! 2012-10-12 - Marco Clemencic
 - Fixed warning: extra ‘;’ [-pedantic].

! 2012-10-08 - Marco Cattaneo
 - In CaloBankHandler.opts and Configuration.py, remove setting MeasureTime=True,
   should not be the default, and should in any case use TimingAuditor.
 - Fix some more UNINIT_CTOR defects

!========================= CaloDAQ v4r30 2012-09-28 =========================
! 2012-08-09 - Olivier Deschamps
  - CaloBankHandler.opts : remove bank conversion - just decode Xcal digits and
    produce ProcStatus from ReadoutStatus
  - fix typo in CaloDigitFilterAlg properties

!========================= CaloDAQ v4r29 2012-07-24 =========================
! 2012-07-09 - Marco Cattaneo
 - Use new TES getIfExists function instead of separate exist and get calls
 - Fix UNINIT_CTOR defects

!========================= CaloDAQ v4r28 2012-06-25 =========================
! 2012-06-23 - Deschamps Olivier
   - CaloDigitFilterTool : prepare for spd-dependent pile-up subtraction

! 2012-06-15 - Marco Cattaneo
 - Replace RawEventLocation::Other with RawEventLocation::Calo

! 2012-06-08 - Marco Cattaneo
 - Add RawEventLocations property to decoder to allow to specify a search
   list of locations. Default is to look for
   RawEventLocation::Other followed by RawEventLocation::Default.
 - RawLocation property is declared obsolete. If set, it is prepended
   to RawEventLocations and a warning is printed.

!========================= CaloDAQ v4r27 2012-04-13 =========================
! 2012-04-03 - Olivier Deschamps
 - CaloBankHandler.opts : create ProcStatus - stop conversion in case of
   ReadoutStatus error

!========================= CaloDAQ v4r26 2012-01-31 =========================
! 2012-01-16 - Marco Cattaneo
 - Do not cache pedestalShift at initialize, get it from detector element
   whenever it's needed, since it can change during the job.

!========================= CaloDAQ v4r25 2011-12-14 =========================
! 2011-11-23 - Olivier Deschamps
  - CaloL0DataProvider.cpp : fix compilation warning.

! 2011-11-18 - Olivier Deschamps
  - CaloDataProvider.cpp : fix compilation warning.

!========================= CaloDAQ v4r24 2011-09-15 =========================
! 2011-09-04 - Olivier Deschamps
 - Readout.cpp : protect readout against missing parasitic FEB in the rawBank
  - As for the PIN data parasitic data is not to appear in the physics data  (except in case of wrong ECTELL1 configuration)
    -> decoders would complain because of an unseen FEB
  - In case of  ECTELL misconfiguration, such parasitic data could appear in the physics bank, but they are throw away in the decoding process anyway.

!========================= CaloDAQ v4r23p1 2011-08-30 ========================
! 2011-08-02 - Marco Cattaneo
 - Fix UNINIT_CTOR warnings from coverity

!========================= CaloDAQ v4r23 2011-07-25 =========================
! 2011-07-22 - Marco Cattaneo
 - Create debug() and verbose() messages only when output level requires it,
   also using UNLIKELY macro

!========================= CaloDAQ v4r22 2011-04-04 =========================
! 2011-03-23 - Olivier Deschamps
  - fix compilation warning

! 2011-03-23 - Olivier Deschamps
  - Extend protection against multiple entry in KeyedContainer
  - Fix coverity pb spotted by Gerhard
  - Monitor 'DuplicateEntry' via RawBankReadoutStatus in all DAQ algs

!========================= CaloDAQ v4r21p1 2011-03-23 =========================
! 2011-03-23 - Olivier Deschamps
  - protect against multiple ADC (SEU-induced ?)  : mininal protection - no monitoring (only cpp)

!========================= CaloDAQ v4r21 2011-02-22 =========================
! 2011-08-02 - Olivier Deschamps
  - add ICaloDigitFilterTool to the dictionary
  - reduce statistics verbosity

! 2011-07-02 - Olivier Deschamps
	- CaloDigitFilterTool/CaloDigitFilterAlg : new tool/alg for digit masking and energy offset
	- CaloDataProvided : fix Spd L0Data decoding
	- requirements : add dpencency on CaloUtils

!========================== CaloDAQ v4r20 2010-04-26 =========================
! 2010-03-22 - Olivier Deschamps
 - (I)Calo(L0)DataProvider : implement user-defined default value in adc
   (id,default=0) and digit(id,default=0) methods

!========================== CaloDAQ v4r19 2010-03-17 =========================
! 2010-03-02 - Olivier Deschamps
 - Protect against bad bank->MagicPattern + fill ReadouStatus

!========================== CaloDAQ v4r18 2010-02-12 =========================
! 2010-01-30 - Olivier Deschamps
 - CaloL0DataProvider : fix BeginEvent missing re-init

!========================== CaloDAQ v4r17 2010-01-20 =========================
! 2010-01-20 - Olivier Deschamps
 - CaloL0DataProvider : fix Spd trigger bit value ( 0x2 instead of 0x1 )
   in offline format

!========================== CaloDAQ v4r16 2009-11-27 =========================
! 2009-11-25
 - CaloZSupAlg/CaloDigitsFromRaw : fix location extension settings

!========================== CaloDAQ v4r15 2009-11-13 =========================
! 2009-10-29 - Vanya Belyaev
 - CaloDAQ/CaloDigits.py
     remove the excessive debug printout

! 2009-10-27 - Olivier Deschamps
  - CaloDigitFromRaw : add missing statusOnTES when output = ADC

! 2009-10-27 - Vanya Belyaev
 - new configurable to decode CaloDigits

! 2009-10-26 - Olivier Deschamps
  - new options file : CaloDigitsSeq.opts (to be imported everywhere it is needed)
  - protect CaloDataProviderFromTES against missing adc/digit
  - protect CheckCaloBank against missing RawEvent
  - CaloDigitFromRaw : remove duplicate property !
  - CaloXXFromRaw    : clear read sourceID in clear() method (not really useful but ...)

!========================== CaloDAQ v4r14 2009-10-16 =========================
! 2009-10-14 - Patrick Koppenburg
 - CaloReadoutTool.cpp : bug fix : initialise m_packed in constructor

! 2009-10-10 - Olivier Deschamps
  - Calo decoding tools (I)Calo(L0)DataProvider/(I)CaloEnergyFromRaw/(I)CaloTriggerXXXFromRaw :
    - add protections with const qualifier
    - remove usage of stringstream (slow)
    - change signature of adcs() methods
    - increment interface version

! 2009-09-30 - Olivier Deschamps
  - Calo(L0)DataProvider : fix intialisation when (l0)Adc() method is called first

! 2009-09-30 - Olivier Deschamps
 - ICaloDataProvider : new virtual methods adcRange() and pinRange() return min/max (pin)Adc in the decoded ADC list.
  - increment ICaloDataProvider version
  - adapt CaloDataProviderFromTES and CaloDataProvider
  - remove CaloDataProviderPatched (obsolete)

! 2009-09-28 - Olivier Deschamps
 - Calo(L0)DataProvider(...).cpp : fix uncomplete initialization in clear()

! 2009-09-18 - Olivier Deschamps
 - CaloReadoutTool : fix problem with IncidentSvc handling for getBanks() (problem in Boole when RawBanks does not exist at BeginEvent)

! 2009-09-16 - Olivier Deschamps
 - CaloReadoutTool :
    - implement BeginEvent update via IncidentService : the getBanks() method no longer need to be externally invoked at each event
    - implement initialize()/finalize() method
    - adapt all iheriting readout tools accordingly

!========================== CaloDAQ v4r13 2009-09-02 =========================
! 2009-09-02 - Marco Cattaneo
 - Remove CaloReCreateMCLinks.cpp (moved to CaloAssociators)
 - Remove MCEvent dependency (no longer needed after above change)
 - Replace all endreq by endmsg
 - Remove hack for Gaudi v21r1 to link dictionary on Windows
 - Remove obsolete file CaloDAQ_dll.cpp

!========================== CaloDAQ v4r12p1 2009-09-03 =========================
! 2009-09-17 - Olivier Deschamps
 - new algorithm : CaloAdcFromRaw produces ADC from rawBanks with possible mis-calibration
 - fix Calo(L0)DataProvider for 'partial' decoding in case of single 'offline' bank

!========================== CaloDAQ v4r12 2009-06-29 =========================
! 2009-06-19 - Olivier Deschamps
 - (I)Calo(L0)DataProvider(FromTES) : new method for partial CaloBank decoding
                                      from a vector of sourceIDs

!========================== CaloDAQ v4r11p1 2009-06-02 =======================
! 2009-06-02 - Marco Cattaneo
 - In requirements, add hack for Gaudi v21r1 to link dictionary on Windows

!========================== CaloDAQ v4r11 2009-05-06 =========================
! 2009-04-06 - Olivier Deschamps
  - adapt to change in CaloDet

! 2009-03-13 - Olivier Deschamps
  - CaloReadoutTool : reduce verbosity

!========================== CaloDAQ v4r10 2009-02-20 =========================
! 2009-02-20 - Olivier Deschamps
  - CaloDigitFromRaw : bug fix when both ADC and Digits are requested to be stored
    (thanks to Giulia for pointing the bug)

!========================== CaloDAQ v4r9 2009-01-08 ==========================
! 2008-12-04 - Olivier Deschamps
 - Calo(L0)DataProvider : protect against abusive warning in case of 0-suppressed data

!========================== CaloDAQ v4r8 2008-11-17 ==========================
! 2008-10-28 - Marco Cattaneo
 - Fixes for gcc 4.3 compilation

! 2008-10-27 - Olivier Deschamps
 - new tool : CaloDataProviderFromTES produce CaloDigits/CaloAdcs from the TES
              (using the same interface than CaloDataProvider)
 - adjust verbosity in CaloZsupAlg and CaloDigitsFromRawAlg.
 - make the string 'outputType' property case-independant in CaloZsupAlg and CaloDigitsFromRawAlg.
 - CaloDigitsFromRawAlg : allow to write pin-diode ADC in the same container as PMT ADC

! 2008-10-24 - Olivier Deschamps
 - new algorithm : CaloMergeTAE produce CaloDigits/CaloAdcs as the sum over a given TAE sequence

!========================== CaloDAQ v4r7 2008-07-27 ==========================
! 2008-07-23 - Olivier Deschamps
 - CaloZSupAlg : protect against large negative noise in 2D 0-sup method (via ZsupNeighbor property)

!========================== CaloDAQ v4r6 2008-06-30 ==========================
! 2008-06-13 - Olivier Deschamps
 - CaloZSupAlg : allow 2D suppression over calo area (as now 0-sup is software)

! 2008-06-04 - Olivier Deschamps
 - check whether ErrorBank is present or not in CaloReadoutTool
  (RawBankReadoutStatus updated accordingly)

!========================== CaloDAQ v4r5 2008-06-02 ==========================
! 2008-05-16 - Olivier Deschamps
 - reduce WARNING verbosity in CaloReadoutTool

! 2008-04-27 - Olivier Deschamps
 - fix Missing banks summary in ReadoutStatus setting (CaloReadoutTool.cpp)

!========================== CaloDAQ v4r4p1 2008-04-23 ========================
! 2008-04-23 - Marco Cattaneo
 - In CaloBankHandler.opts, remove some whitespace causing problems to Python

!========================== CaloDAQ v4r4 2008-04-08 ==========================
! 2008-04-04 - Olivier Deschamps
 - reduce verbosity in decoding tools

! 2008-03-15 - Olivier Deschamps
 - fix small problem with decoding of incomplete Prs Front-End board

!========================== CaloDAQ v4r3 2008-01-30 ==========================
! 2008-01-29 - Olivier Deschamps
 - bug fix in CaloL0DataProvider (for Prs trigger but decoding)

! 2008-01-25 - Olivier Deschamps
 - add Hcal together with Ecal as default in CaloReCreateMCLinks.cpp

! 2008-01-24 - Olivier Deschamps
 - CaloReadoutTool : fix abusive warning  + fix wrong initialization of m_readSource

! 2008-01-24 - Marco Cattaneo
 - Change CalDigitsOnDemand.opts to use DataOnDemndSvc.AlgMap

! 2008-01-23 - Olivier Deschamps
 - minor change in CaloReadoutTool.cpp (better handling of ReadoutStatus)

! 2008-01-22 - Olivier Deschamps
 - Add new status ("NonUnique") when several banks with identical sourceID in the same rawEvent

! 2008-01-10 - Olivier Deschamps
 - Add a protection against events pile-up in the same rawEvent  (actually, several banks with same sourceID)
 - fix unclear precedence to please windows compiler

! 2008-01-08 - Marco Cattaneo
 - Fix an obsolete include

! 2007-12-14 - Olivier Deschamps
 - improve the calls to msgSvc

! 2007-12-12 - Olivier Deschamps
 - fix ifndef in ICALOL0DATAPROVIDER

!========================== CaloDAQ v4r2 2007-12-12 ==========================
! 2007-12-11 - Olivier Deschamps
 - Improve printout using Error() method

! 2007-12-06 - Marco Cattaneo
 - Add dictionary for CAloDAQ interfaces

! 2007-12-04 - Olivier Deschamps
 - Fix bug in decoding Prs/Spd TELL1 format. Related to the treatment of
   'half-board' (i.e. 32 valid channels/64). DOES NOT affect MC data simulated
    so far where non-valid channels are not simulated anyway
      -> only visible on real TELL1 data
 - add a new decoding tool & interface : (I)CaloL0DataProvider (same as
   CaloDataProvider for 8-bit L0-Adc)
 - better handling of corrupted/missing bank :
      - additional checks and improved printout in decoding tools
      - No longer clear the whole data container in case of partial inconsistency
        of data with the readout structure defined in condDB
      - Add the possibility to only remove the most likely corrupted data,
        i.e. the latest readout FEB data, via options
          default : keep the doubtful data
      - Fill DAQEvent/RawBankReadoutStatus objects in decoding tools
        (new version of ICaloReadout interface)
      - Put RawBankReadoutStatus on TES for later usage in decoding algorithms
        (property StatusOnTES - default = true)

 - CaloFillRawBuffer : add PIN-FEB data only when requested
   (FillWithPin new property - default=false)
    -> No longer PIN-FEB header in Bank when no PIN data

!========================== CaloDAQ v4r1 2007-11-02 ==========================
! 2007-10-16 - Olivier Deschamps
 - Fix bug in CaloDataProvider.cpp

!========================== CaloDAQ v4r0 2007-09-04 ==========================
! 2007-08-27 - Olivier Deschamps
 - clean unchecked StatusCode

! 2007-08-06 - Olivier Deschamps
 - Global review :
   - make the decoding interfaces and tools more uniform
   - new base interface CaloDaq/ICaloReadoutTool
   - new version number for all interfaces in CaloDAQ
   - CaloReadout.h moved from CaloDaq/ to src/
   - cleaning (printout, remove unecessary StatusCodes, ...)
   - check the decoding stuff was fully robust against corrupted/missing data

!========================== CaloDAQ v3r3 2007-06-13 ==========================
! 2007-06-11 - Olivier Deschamps
 - msglevel checks + improve printout
 - fix CaloDataProvider in order the tool can run correctly on 0-suppressed banks
  (requested by Johannes Albrecht for L0-confirmation studies)

! 2007-06-04 - Marco Cattaneo
 - Remove rootOnTES() logic, now done in GaudiAlg/Tool base class
   (needs Gaudi >= v19r4)

! 2004-05-01 Olivier Deschamps
  - CaloReadoutTool and decoding tools : add property to allow skipping
    the Detector Specific Header when present

!========================== CaloDAQ v3r2 2007-04-25 ==========================
! 2004-04-25 Olivier Deschamps
  - improve printout in CaloReadoutTool

! 2004-04-24 Olivier Deschamps
  - printout cleaning in decoding tools
  - protection against dummy bank format in CaloDataProvider tools.

! 2007-04-17 Olivier Deschamps
  - add new feature to deal with consecutive bunch crossings in CaloReadoutTool
  - protect from non-existent rawEvent in CaloReadoutTool

! 2007-04-10 Olivier Deschamps
- CaloDataProviderPatched :
  . remove the patch related to adcLength and trigLength
   (corrected in TELL1 firmware)
  . remains : patch for OPG data (can be activated via options)
              patch for the non-documented TELL1 'header' word in the data body
- CaloReadoutTool : rawEvent location can be changed by option
- Fix bug in CaloTriggerBitFromRaw : tool returned only the last TELL1 data.
- Fix an old bug in CaloFillPrsSpdRawBuffer : last Prs/Spd L0bits were missing
  for 50% of events.

! 2007-04-05 Olivier Deschamps
 - Add a patched implementation of CaloDataProvider : CaloDataProviderPatched
 - The patches allow to deal with the current Calo TELL1 firmware (April 2007)
 - Temporary implementation will be removed

!========================== CaloDAQ v3r1 2007-03-05 ==========================
! 2007-03-05 - Marco Cattaneo
 - Remove obsolete file CaloDAQ_load.cpp and ApplicationMgr.DLLs options

! 2007-02-28 - Olivier Deschamps
 - Add a new tool : CaloDataProvider : fast calo data decoding
   (for Orwell and HLT usage)
 - fix a small bug in CaloFillPrsSpdRawBuffer
   (problem when filling Prs bank when Zsup threshold =0)

! 2007-02-22 - Olivier Deschamps
 - Implement the readout of PIN-diode data (using DeCalorimeter)
 - Remove CaloReadoutTool.{h,cpp} (was containing FECard and Tell1 description
   now implemented in CaloDet)
 - Add a base class with the same name (CaloReadoutTool)from which
	 inherit all the decoding tools (CaloEnergyFromRaw,
	 CaloTriggerAdcFromRaw and CaloTriggerBitsFromRaw)

!========================== CaloDAQ v3r0 2007-01-12 ==========================
! 2006-12-06 - Florence RANJARD
 - apply_pattern install_more_includes
 - use DECLARE_xxx_FACTORY macros

!========================== CaloDAQ v2r6 2006-11-23 ==========================
! 2006-11-23 - Marco Cattaneo
 - Use DECLARE_xxx_FACTORY macros
 - Get SystemOfUnits.h from GaudiKernel

! 2006-11-22 - Olivier Callot
 - Add the rootOnTES() prefix for coding/deconding in the Raw Event.

!========================== CaloDAQ v2r5 2006-09-29 ==========================
! 2006-09-29 - Olivier Deschamps
  - Adapt CaloTriggerAdcsFromRaw to please L0Calo
  - Adapt CaloEnergyFromRaw to be uniform

! 2006-09-26 - Olivier Deschamps
  - Add CheckCaloBank.{cpp,h} algorithm
  - Adapt options/CaloBankHandler.opts :
      - Handling separatly Prs/Ecal & Hcal banks
      - Check if 'Short' banks exist at the begining of the sequence
      - If only 'Packed'  -> create 'Shorts' and remove 'Packed'
      - If 'Short' is already there (e.g. from real Data) -> sequence stop.
  - add the property 'PackedIsDefault' in the tools CaloEnergyFromRaw, CaloTriggerBitsFromRaw and CaloTriggerADCsFromRaw.
      - allow to force the packed banks to be the default input banks in case
        of both 'packed' and 'short' exist.(default is false, i.e short when exist else packed).
        Should be usefull at start-up when both bank will be stored
  - adapt CaloZSupAlg, CaloDigitFromRaw, CaloTriggerAdcsFromRawAlg and CaloTriggerBitsFromRawAlg algorithms

! 2006-09-07 - Olivier Deschamps
  - Add options/CaloBankHandler.opts : fill Compressed Calo Banks and remove Packed one

!========================== CaloDAQ v2r4 2006-09-04 ==========================
! 2006-09-01 - Olivier Deschamps
  - Update options/CaloDigitsOnDemand.opts

!========================== CaloDAQ v2r3 2006-06-28 ==========================
! 2006-06-27 - Olivier Deschamps
  - add src/CaloTriggerBitsFromRawAlg algorithm (produce PrsSpdL0Bit in TES)
  - add options/CaloFillRawBank.opts (create "Compressed" banks from "Packed")
  - bug fix in CaloTriggerBitsFromRaw & CaloFillPrsSpdRawBuffer

!========================== CaloDAQ v2r2 2006-04-20 ==========================
! 2006-04-19 - Olivier Deschamps
 - modification of CaloZsupAlg (option driven output: CaloDigits and/or CaloADCs)
 - new algorithm : src/CaloTriggerAdcsFromRawAlg

!========================== CaloDAQ v2r1 2006-03-15 ==========================
! 2006-03-15 - Olivier Deschamps
 - CaloZSupAlg.{cpp,h} algorithm added (moved from CaloDigit)

!========================== CaloDAQ v2r0 2006-03-07 ==========================
! 2006-02-24 - Olivier Callot
 - Remove the detection of 'same event' in CaloTriggerBitsFromRaw as ODIN bank
   is not yet very stable... This means decoding twice to get SPD and PRS bits.
 - Put proper parenthesese to fix precedence problem in CaloTriggerBitsFromRaw

! 2006-02-23 - Vanya BELYAEV
 - change the default options for CaloReCreateMCLinks algorithm

! 2006-02-16 - Olivier Callot
 - Use ODIN bank to get the event number for CaloTriggerBitsFromRaw.

! 2006-02-15 - Marco Cattaneo
 - In requirements, migrate to DigiEvent

! 2006-02-14 - Olivier Callot
 - Fix improper use of cell.index() instead of cell.all()

! 2006-02-02 - Olivier Callot
 - Protect CaloTrigegrBitsFromRaw if DAQ bank is absent.
 - Code (CaloFillRawBuffer) from Full CaloADC banks if coding type = 2.
 - Bank length is in bytes now (CaloTriggerAdcsFromRaw, CaloTriggerBitsFromRaw,
   CaloEnergyFromRaw)

! 2006-01-19 - Marco Cattaneo
 - Use definitions from CaloDet for detector locations, instead of raw strings

! 2006-01-10 - Marco Cattaneo
 - Remove BankType property from CaloFillRawBuffer, because an enum cannot be
   a property

! 2005-12-20 - Olivier Callot
 - Fix the namespace LHCb:: for CaloEvent classes, due to a missing recompilation

! 2005-12-19 - Olivier Callot
 - Adapt to the new event model, mainly LHCb:: namespace, and also the new DAQEvent.
   Several things still to cleanup and fix.

! 2005-12-02 - Olivier Callot
 - Remove the detector prefix in the condition CellsToCards

! 2005-11-15 - Olivier Callot
 - Changed Prs/SPd coding type 2, with cell id in upper 14 bits instead of lower

! 2005-11-10 - Olivier Callot
 - Use a new RawBuffer::BankType for the packed (TELL1) information. The
   bank type is set according to detector name, option with default from
   the name of the  instance.

! 2005-11-08 - Olivier Callot
 - Change the interface to get a more efficient decoding:
   o ICaloEnergyFromRaw returns a vector of CaloDigit or of CaloAdc (new object)
   o ICaloTriggerAdcsFromRaw returns a vector of L0CaloAdc
   o ICaloTriggerBitsFromRaw returns a vector of CaloCellID.

! 2005-09-06 - Olivier Callot
 - New tool CaloReadoutTool for a description of the cards and readout, 1 MHz version
 - Implementation of the proposed 1 MHz coding, with packing instead of
   zero suppression. Starts from EcalFull and HcalFull digit containers
   Affects CaloFillRawBuffer and CaloFillPrsSpdRawBuffer. Note that this coding is
   NOT the default, one has to add the options :
    EcalFillRawBuffer.DataCodingType = 2;
    HcalFillRawBuffer.DataCodingType = 2;
    CaloFillPrsSpdRawBuffer.DataCodingType = 3;
 - Process the new format in the decoding algorithms CaloEnergyFromRaw, CaloTriggerFromRaw,
   CaloPrsBitFromRaw and CaloSpdBitFromRaw,

 - Adjust the comparison algorithm. New option 'packedRawBuffer' to be set to
   true when using the 1 MHz coding type.

  Decoding speed can be improved by inlining the 'nextCell' method, i.e. changing the
  interface of this package. One could also implement just a begin and end accessor
  to the local array where the unpacking is performed. But this makes visible
  the internal implementation. To be done when the 1 MHz readout becomes the
  baseline scenario.

!========================== CaloDAQ v1r1 2005-05-10 ==========================
! 2005-05-11 - Vanya BELYAEV
 - src/CaloReCreateMCLinks.cpp
     1) add new property "IgnoreMode"
        (the defualt value is "false" )
        to ignore the absence of MC-containers
        (a warning is printed at the end of the job, but processing is continued)
     2) some consmetics changes
     3) improve Doxygen comments
 - src/CaloReCreateMcLinks.h
     remove the file

! 2005-05-10 - Olivier Callot
 - Initialize the base class of CaloEnergyFromRaw, was forgotten.

! 2005-05-04 - Olivier Callot
 - Accesses the RawEvent and not explicitely the RawBuffer while decoding.
 - Avoid a copy of the list of banks when decoding the RawEvent.

! 2005-05-03 - Marco Cattaneo
 - Add missing factory for CaloEnergyFromRaw tool

!========================= CaloDAQ v1r0p2 2005-03-07 =========================
! 2005-03-07 - Marco Cattaneo
 - Fix requirements to use DAQEvent v*

!========================= CaloDAQ v1r0p1 2005-01-31 =========================
! 2005-01-31 - Marco Cattaneo
 - Add a missing include for Windows (no longer included via CLHEP...)

!========================== CaloDAQ v1r0 2005-01-14 ==========================
! 2005-01-10 - Olivier Callot
 - Tools to decode the Raw buffer: One interface for the trigger and one for
   the energies:
     interface ICaloTriggerFromRaw:
        CaloPrsBitFromRaw
        CaloSpdBitFromRaw
        CaloTriggerFromRaw
     interface ICaloEnergyFromRaw
        CaloEnergyFromRaw
 - Algorithm CaloDigitsFromRaw (was in CaloEvent) to decode the Raw buffer and
   re-create the CaloDigits
 - Algorithm CompareCaloDigits (was in CaloEvent) to test two codings of the
   CaloDigits.
 - Algorithm CaloReCreateMCLinks (was in CaloEvent) to re-create the MCLink for
   the CaloDigit containers.
 - Compared to version in CaloEvent, data coding of Prs/Ecal/Hcal energies is
   more compact (-1.5 kbyte/event), but thanks to versioning of the RawBuffer
   banks, the decoding is handling properly the old and new data formats

! 2004-12-17 - Olivier Callot
 - Creation of CaloFillRawBuffer from CaloZSup in CaloDigit package, to code
   Ecal and Hcal data and trigger banks, from CaloDigits and L0CaloAdcs.
 - Creation of CaloFillPrsSpdRawBuffer to code the Prs data and the Prs+Spd
   trigger banks, from CaloDigits (Prs) and L0PrsSpdHits (Prs and Spd).
