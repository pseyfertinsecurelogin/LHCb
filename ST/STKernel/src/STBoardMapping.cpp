
// Include files
#include <map>
#if !(defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L)
#include "boost/assign/list_of.hpp"
#endif

// Kernel
#include "Kernel/STBoardMapping.h"

const STBoardMapping::Map& STBoardMapping::TTSourceIDToNumberMap() {
#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
  static Map s_map = {{0, 17}, {1, 18}, {2, 19}, {3, 20}, {4, 1}, {5, 2}, {6, 3},
      {7, 33}, {8, 34}, {9, 35}, {10, 36}, {32, 21}, {33, 22}, {34, 23}, {35, 24}, {36, 4},
     {37, 5}, {38, 6}, {39, 37}, {40, 38}, {41, 39}, {42, 40}, {64, 25}, {65, 26}, {66, 27},
     {67, 28}, {68, 7}, {69, 8}, {70, 9}, {71, 10}, {72, 11}, {73, 41}, {74, 42}, {75, 43},
     {76, 44}, {96, 29}, {97, 30}, {98, 31}, {99, 32}, {100, 12}, {101, 13}, {102, 14},
     {103, 15}, {104, 16}, {105, 45}, {106, 46}, {107, 47}, {108, 48}};
#else
  static Map s_map;
  if (s_map.empty()){
    s_map
     = boost::assign::map_list_of(0, 17)(1, 18)(2, 19)(3, 20)(4, 1)(5, 2)(6, 3)
       (7, 33)(8, 34)(9, 35)(10, 36)(32, 21)(33, 22)(34, 23)(35, 24)(36, 4)
      (37, 5)(38, 6)(39, 37)(40, 38)(41, 39)(42, 40)(64, 25)(65, 26)(66, 27)
      (67, 28)(68, 7)(69, 8)(70, 9)(71, 10)(72, 11)(73, 41)(74, 42)(75, 43)
      (76, 44)(96, 29)(97, 30)(98, 31)(99, 32)(100, 12)(101, 13)(102, 14)
      (103, 15)(104, 16)(105, 45)(106, 46)(107, 47)(108, 48);
  }
#endif
  return s_map;
}

const STBoardMapping::Map& STBoardMapping::TTNumberToSourceIDMap() {
#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
  static Map s_map = {{17, 0}, {18, 1}, {19, 2}, {20, 3}, {1, 4}, {2, 5},
      {3, 6}, {33, 7}, {34, 8}, {35, 9}, {36, 10}, {21, 32}, {22, 33}, {23, 34}, {24, 35},
      {4, 36}, {5, 37}, {6, 38}, {37, 39}, {38, 40}, {39, 41}, {40, 42}, {25, 64}, {26, 65},
      {27, 66}, {28, 67}, {7, 68}, {8, 69}, {9, 70}, {10, 71}, {11, 72}, {41, 73}, {42, 74},
      {43, 75}, {44, 76}, {29, 96}, {30, 97}, {31, 98}, {32, 99}, {12, 100}, {13, 101},
      {14, 102}, {15, 103}, {16, 104}, {45, 105}, {46, 106}, {47, 107}, {48, 108}};
#else
  static Map s_map;
  if (s_map.empty()){
    s_map
      = boost::assign::map_list_of(17, 0)(18, 1)(19, 2)(20, 3)(1, 4)(2, 5)
      (3, 6)(33, 7)(34, 8)(35, 9)(36, 10)(21, 32)(22, 33)(23, 34)(24, 35)
      (4, 36)(5, 37)(6, 38)(37, 39)(38, 40)(39, 41)(40, 42)(25, 64)(26, 65)
      (27, 66)(28, 67)(7, 68)(8, 69)(9, 70)(10, 71)(11, 72)(41, 73)(42, 74)
      (43, 75)(44, 76)(29, 96)(30, 97)(31, 98)(32, 99)(12, 100)(13, 101)
      (14, 102)(15, 103)(16, 104)(45, 105)(46, 106)(47, 107)(48, 108);
  }
#endif
  return s_map;
}

const STBoardMapping::Map& STBoardMapping::ITSourceIDToNumberMap(){
#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
  static Map s_map = {{0, 1}, {1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7},
    {7, 8}, {8, 9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {32, 15}, {33, 16},
    {34, 17}, {35, 18}, {36, 19}, {37, 20}, {38, 21}, {39, 22}, {40, 23}, {41, 24}, {42, 25},
    {43, 26}, {44, 27}, {45, 28}, {64, 29}, {65, 30}, {66, 31}, {67, 32}, {68,33}, {69, 34},
    {70, 35}, {71, 36}, {72, 37}, {73, 38}, {74, 39}, {75, 40}, {76, 41}, {77, 42}};
#else
  static Map s_map;
  if (s_map.empty()){
    s_map
       = boost::assign::map_list_of(0, 1)(1, 2)(2, 3)(3, 4)(4, 5)(5, 6)(6, 7)
    (7, 8)(8, 9)(9, 10)(10, 11)(11, 12)(12, 13)(13, 14)(32, 15)(33, 16)
    (34, 17)(35, 18)(36, 19)(37, 20)(38, 21)(39, 22)(40, 23)(41, 24)(42, 25)
    (43, 26)(44, 27)(45, 28)(64, 29)(65, 30)(66, 31)(67, 32)(68,33)(69, 34)
    (70, 35)(71, 36)(72, 37)(73, 38)(74, 39)(75, 40)(76, 41)(77, 42);
  }
#endif
  return s_map;
}


const STBoardMapping::Map& STBoardMapping::ITNumberToSourceIDMap() {
#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
  static Map s_map = {{1, 0}, {2, 1}, {3, 2}, {4, 3}, {5, 4}, {6, 5}, {7, 6},
     {8, 7}, {9, 8}, {10, 9}, {11, 10}, {12, 11}, {13, 12}, {14, 13}, {15, 32}, {16, 33},
     {17, 34}, {18, 35}, {19, 36}, {20, 37}, {21, 38}, {22, 39}, {23, 40}, {24, 41}, {25, 42},
     {26, 43}, {27, 44}, {28, 45}, {29, 64}, {30, 65}, {31, 66}, {32, 67}, {33, 68}, {34, 69},
     {35, 70}, {36, 71}, {37, 72}, {38, 73}, {39, 74}, {40, 75}, {41, 76}, {42, 77}};
#else
 static Map s_map;
  if (s_map.empty()){
    s_map
      = boost::assign::map_list_of(1, 0)(2, 1)(3, 2)(4, 3)(5, 4)(6, 5)(7, 6)
    (8, 7)(9, 8)(10, 9)(11, 10)(12, 11)(13, 12)(14, 13)(15, 32)(16, 33)
    (17, 34)(18, 35)(19, 36)(20, 37)(21, 38)(22, 39)(23, 40)(24, 41)(25, 42)
    (26, 43)(27, 44)(28, 45)(29, 64)(30, 65)(31, 66)(32, 67)(33, 68)(34, 69)
    (35, 70)(36, 71)(37, 72)(38, 73)(39, 74)(40, 75)(41, 76)(42, 77);
  }
#endif
  return s_map;
}

const STBoardMapping::Map& STBoardMapping::UTSourceIDToNumberMap() {
#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
  static Map s_map =
   {{0, 1}, {1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7},
    {7, 8}, {8, 9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {15, 16},
    {16, 17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {21, 22}, {22, 23}, {23, 24}, {24, 25},
    {25, 26}, {26, 27}, {27, 28}, {28, 29}, {29, 30}, {30, 31}, {31, 32}, {32, 33}, {33, 34},
    {34, 35}, {35, 36}, {36, 37}, {37, 38}, {38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 43},
    {43, 44}, {64, 45}, {65, 46}, {66, 47}, {67, 48}, {68, 49}, {69, 50}, {70, 51}, {71, 52},
    {72, 53}, {73, 54}, {74, 55}, {75, 56}, {76, 57}, {77, 58}, {78, 59}, {79, 60}, {80, 61},
    {81, 62}, {82, 63}, {83, 64}, {84, 65}, {85, 66}, {86, 67}, {87, 68}, {88, 69}, {89, 70},
    {90, 71}, {91, 72}, {92, 73}, {93, 74}, {94, 75}, {95, 76}, {96, 77}, {97, 78}, {98, 79},
    {99, 80}, {100, 81}, {101, 82}, {102, 83}, {103, 84}, {104, 85}, {105, 86}, {106, 87},
    {107, 88}, {128, 89}, {129, 90}, {130, 91}, {131, 92}, {132, 93}, {133, 94}, {134, 95},
    {135, 96}, {136, 97}, {137, 98}, {138, 99}, {139, 100}, {140, 101}, {141, 102},
    {142, 103}, {143, 104}, {144, 105}, {145, 106}, {146, 107}, {147, 108}, {148, 109},
    {149, 110}, {150, 111}, {151, 112}, {152, 113}, {153, 114}, {154, 115}, {155, 116},
    {156, 117}, {157, 118}, {158, 119}, {159, 120}, {160, 121}, {161, 122}, {162, 123},
    {163, 124}, {164, 125}, {165, 126}, {166, 127}, {167, 128}, {168, 129}, {169, 130},
    {170, 131}, {171, 132}, {172, 133}, {173, 134}, {174, 135}, {175, 136}, {176, 137},
    {177, 138}, {192, 139}, {193, 140}, {194, 141}, {195, 142}, {196, 143}, {197, 144},
    {198, 145}, {199, 146}, {200, 147}, {201, 148}, {202, 149}, {203, 150}, {204, 151},
    {205, 152}, {206, 153}, {207, 154}, {208, 155}, {209, 156}, {210, 157}, {211, 158},
    {212, 159}, {213, 160}, {214, 161}, {215, 162}, {216, 163}, {217, 164}, {218, 165},
    {219, 166}, {220, 167}, {221, 168}, {222, 169}, {223, 170}, {224, 171}, {225, 172},
    {226, 173}, {227, 174}, {228, 175}, {229, 176}, {230, 177}, {231, 178}, {232, 179},
    {233, 180}, {234, 181}, {235, 182}, {236, 183}, {237, 184}, {238, 185}, {239, 186},
    {240, 187}, {241, 188}};
#else
  static Map s_map;
  if (s_map.empty()) {
    s_map
    = boost::assign::map_list_of(0, 1)(1, 2)(2, 3)(3, 4)(4, 5)(5, 6)(6, 7)
    (7, 8)(8, 9)(9, 10)(10, 11)(11, 12)(12, 13)(13, 14)(14, 15)(15, 16)
    (16, 17)(17, 18)(18, 19)(19, 20)(20, 21)(21, 22)(22, 23)(23, 24)(24, 25)
    (25, 26)(26, 27)(27, 28)(28, 29)(29, 30)(30, 31)(31, 32)(32, 33)(33, 34)
    (34, 35)(35, 36)(36, 37)(37, 38)(38, 39)(39, 40)(40, 41)(41, 42)(42, 43)
    (43, 44)(64, 45)(65, 46)(66, 47)(67, 48)(68, 49)(69, 50)(70, 51)(71, 52)
    (72, 53)(73, 54)(74, 55)(75, 56)(76, 57)(77, 58)(78, 59)(79, 60)(80, 61)
    (81, 62)(82, 63)(83, 64)(84, 65)(85, 66)(86, 67)(87, 68)(88, 69)(89, 70)
    (90, 71)(91, 72)(92, 73)(93, 74)(94, 75)(95, 76)(96, 77)(97, 78)(98, 79)
    (99, 80)(100, 81)(101, 82)(102, 83)(103, 84)(104, 85)(105, 86)(106, 87)
    (107, 88)(128, 89)(129, 90)(130, 91)(131, 92)(132, 93)(133, 94)(134, 95)
    (135, 96)(136, 97)(137, 98)(138, 99)(139, 100)(140, 101)(141, 102)
    (142, 103)(143, 104)(144, 105)(145, 106)(146, 107)(147, 108)(148, 109)
    (149, 110)(150, 111)(151, 112)(152, 113)(153, 114)(154, 115)(155, 116)
    (156, 117)(157, 118)(158, 119)(159, 120)(160, 121)(161, 122)(162, 123)
    (163, 124)(164, 125)(165, 126)(166, 127)(167, 128)(168, 129)(169, 130)
    (170, 131)(171, 132)(172, 133)(173, 134)(174, 135)(175, 136)(176, 137)
    (177, 138)(192, 139)(193, 140)(194, 141)(195, 142)(196, 143)(197, 144)
    (198, 145)(199, 146)(200, 147)(201, 148)(202, 149)(203, 150)(204, 151)
    (205, 152)(206, 153)(207, 154)(208, 155)(209, 156)(210, 157)(211, 158)
    (212, 159)(213, 160)(214, 161)(215, 162)(216, 163)(217, 164)(218, 165)
    (219, 166)(220, 167)(221, 168)(222, 169)(223, 170)(224, 171)(225, 172)
    (226, 173)(227, 174)(228, 175)(229, 176)(230, 177)(231, 178)(232, 179)
    (233, 180)(234, 181)(235, 182)(236, 183)(237, 184)(238, 185)(239, 186)
    (240, 187)(241, 188);
  }
#endif
  return s_map;
}

const STBoardMapping::Map& STBoardMapping::UTNumberToSourceIDMap() {
#if defined(__GXX_EXPERIMENTAL_CXX0X__) || __cplusplus >= 201103L
  static Map s_map =
   {{1, 0}, {2, 1}, {3, 2}, {4, 3}, {5, 4}, {6, 5}, {7, 6},
    {8, 7}, {9, 8}, {10, 9}, {11, 10}, {12, 11}, {13, 12}, {14, 13}, {15, 14}, {16, 15},
    {17, 16}, {18, 17}, {19, 18}, {20, 19}, {21, 20}, {22, 21}, {23, 22}, {24, 23}, {25, 24},
    {26, 25}, {27, 26}, {28, 27}, {29, 28}, {30, 29}, {31, 30}, {32, 31}, {33, 32}, {34, 33},
    {35, 34}, {36, 35}, {37, 36}, {38, 37}, {39, 38}, {40, 39}, {41, 40}, {42, 41}, {43, 42},
    {44, 43}, {45, 64}, {46, 65}, {47, 66}, {48, 67}, {49, 68}, {50, 69}, {51, 70}, {52, 71},
    {53, 72}, {54, 73}, {55, 74}, {56, 75}, {57, 76}, {58, 77}, {59, 78}, {60, 79}, {61, 80},
    {62, 81}, {63, 82}, {64, 83}, {65, 84}, {66, 85}, {67, 86}, {68, 87}, {69, 88}, {70, 89},
    {71, 90}, {72, 91}, {73, 92}, {74, 93}, {75, 94}, {76, 95}, {77, 96}, {78, 97}, {79, 98},
    {80, 99}, {81, 100}, {82, 101}, {83, 102}, {84, 103}, {85, 104}, {86, 105}, {87, 106},
    {88, 107}, {89, 128}, {90, 129}, {91, 130}, {92, 131}, {93, 132}, {94, 133}, {95, 134},
    {96, 135}, {97, 136}, {98, 137}, {99, 138}, {100, 139}, {101, 140}, {102, 141},
    {103, 142}, {104, 143}, {105, 144}, {106, 145}, {107, 146}, {108, 147}, {109, 148},
    {110, 149}, {111, 150}, {112, 151}, {113, 152}, {114, 153}, {115, 154}, {116, 155},
    {117, 156}, {118, 157}, {119, 158}, {120, 159}, {121, 160}, {122, 161}, {123, 162},
    {124, 163}, {125, 164}, {126, 165}, {127, 166}, {128, 167}, {129, 168}, {130, 169},
    {131, 170}, {132, 171}, {133, 172}, {134, 173}, {135, 174}, {136, 175}, {137, 176},
    {138, 177}, {139, 192}, {140, 193}, {141, 194}, {142, 195}, {143, 196}, {144, 197},
    {145, 198}, {146, 199}, {147, 200}, {148, 201}, {149, 202}, {150, 203}, {151, 204},
    {152, 205}, {153, 206}, {154, 207}, {155, 208}, {156, 209}, {157, 210}, {158, 211},
    {159, 212}, {160, 213}, {161, 214}, {162, 215}, {163, 216}, {164, 217}, {165, 218},
    {166, 219}, {167, 220}, {168, 221}, {169, 222}, {170, 223}, {171, 224}, {172, 225},
    {173, 226}, {174, 227}, {175, 228}, {176, 229}, {177, 230}, {178, 231}, {179, 232},
    {180, 233}, {181, 234}, {182, 235}, {183, 236}, {184, 237}, {185, 238}, {186, 239},
    {187, 240}, {188, 241}};
#else
  static Map s_map;
  if (s_map.empty()) {
    s_map
    = boost::assign::map_list_of(1, 0)(2, 1)(3, 2)(4, 3)(5, 4)(6, 5)(7, 6)
    (8, 7)(9, 8)(10, 9)(11, 10)(12, 11)(13, 12)(14, 13)(15, 14)(16, 15)
    (17, 16)(18, 17)(19, 18)(20, 19)(21, 20)(22, 21)(23, 22)(24, 23)(25, 24)
    (26, 25)(27, 26)(28, 27)(29, 28)(30, 29)(31, 30)(32, 31)(33, 32)(34, 33)
    (35, 34)(36, 35)(37, 36)(38, 37)(39, 38)(40, 39)(41, 40)(42, 41)(43, 42)
    (44, 43)(45, 64)(46, 65)(47, 66)(48, 67)(49, 68)(50, 69)(51, 70)(52, 71)
    (53, 72)(54, 73)(55, 74)(56, 75)(57, 76)(58, 77)(59, 78)(60, 79)(61, 80)
    (62, 81)(63, 82)(64, 83)(65, 84)(66, 85)(67, 86)(68, 87)(69, 88)(70, 89)
    (71, 90)(72, 91)(73, 92)(74, 93)(75, 94)(76, 95)(77, 96)(78, 97)(79, 98)
    (80, 99)(81, 100)(82, 101)(83, 102)(84, 103)(85, 104)(86, 105)(87, 106)
    (88, 107)(89, 128)(90, 129)(91, 130)(92, 131)(93, 132)(94, 133)(95, 134)
    (96, 135)(97, 136)(98, 137)(99, 138)(100, 139)(101, 140)(102, 141)
    (103, 142)(104, 143)(105, 144)(106, 145)(107, 146)(108, 147)(109, 148)
    (110, 149)(111, 150)(112, 151)(113, 152)(114, 153)(115, 154)(116, 155)
    (117, 156)(118, 157)(119, 158)(120, 159)(121, 160)(122, 161)(123, 162)
    (124, 163)(125, 164)(126, 165)(127, 166)(128, 167)(129, 168)(130, 169)
    (131, 170)(132, 171)(133, 172)(134, 173)(135, 174)(136, 175)(137, 176)
    (138, 177)(139, 192)(140, 193)(141, 194)(142, 195)(143, 196)(144, 197)
    (145, 198)(146, 199)(147, 200)(148, 201)(149, 202)(150, 203)(151, 204)
    (152, 205)(153, 206)(154, 207)(155, 208)(156, 209)(157, 210)(158, 211)
    (159, 212)(160, 213)(161, 214)(162, 215)(163, 216)(164, 217)(165, 218)
    (166, 219)(167, 220)(168, 221)(169, 222)(170, 223)(171, 224)(172, 225)
    (173, 226)(174, 227)(175, 228)(176, 229)(177, 230)(178, 231)(179, 232)
    (180, 233)(181, 234)(182, 235)(183, 236)(184, 237)(185, 238)(186, 239)
    (187, 240)(188, 241);
  }
#endif

  return s_map;
}

#include <boost/foreach.hpp>


std::string STBoardMapping::printTTMap(){

  std::ostringstream o;
  o << " *** TT board to sourceID Map ***" << std::endl;
  const Map& theMap = TTSourceIDToNumberMap();
  BOOST_FOREACH(Map::value_type board , theMap) {
    o << "SourceID: " << board.first << " Flat number: " << board.second << std::endl;
  } // for each
  o << "**************" << std::endl;
  return o.str();
}

std::string STBoardMapping::printITMap() {

  std::ostringstream o;
  o << " *** IT board to sourceID Map ***" << std::endl;
  const Map& theMap = TTSourceIDToNumberMap();
  BOOST_FOREACH(Map::value_type board , theMap) {
    o << "SourceID: " << board.first << " Flat number: " << board.second << std::endl;
  } // for each
  o << "**************" << std::endl;
  return o.str();
}

std::string STBoardMapping::printUTMap(){

  std::ostringstream o;
  o << " *** UT board to sourceID Map ***" << std::endl;
  const Map& theMap = UTSourceIDToNumberMap();
  BOOST_FOREACH(Map::value_type board , theMap) {
    o << "SourceID: " << board.first << " Flat number: " << board.second << std::endl;
  } // for each
  o << "**************" << std::endl;
  return o.str();
}
