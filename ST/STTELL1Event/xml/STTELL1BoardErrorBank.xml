<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'>

<gdd>
  <package name='STTELL1Event'>
  <!-- location = address in TES -->
  <!-- classId = identifier -->
   
    <class name='STTELL1BoardErrorBank'
	   id='9013' 
	   author='Mathias Knecht' 
	   desc='Error Bank from a Tell1 board'
           serializers = 'FALSE'>
      <base name='KeyedObject&lt; int &gt; '/>  
      <location name="TTErrors"   place="Raw/TT/Errors"   />
      <location name="ITErrors"   place="Raw/IT/Errors"   />
      
      &KeyedContainer;
      
      <import name='Event/STTELL1Error' />
     
      
      <typedef desc = "Vector of STTELL1Error typedef"
       type =  "std::vector&lt;LHCb::STTELL1Error*&gt;"
       def = "ErrorVector"
       access = "PUBLIC " />
        
       
 <!--  
      <constructor
        desc = 'constructor with arguments'
        argList = 'Data data'
        initList = 'm_data(data)'>
      </constructor> -->

  
      <destructor desc = 'destructor' virtual = 'TRUE'>
       <code>
 LHCb::STTELL1BoardErrorBank::ErrorVector::iterator iter = m_errorInfo.begin();
 for (; iter != m_errorInfo.end() ; ++iter ){
   if (*iter != 0) delete *iter;
 } // iter
 m_errorInfo.clear();
       </code>
      </destructor>
       
       <attribute 
       name="errorInfo" 
       type="std::vector &lt;  LHCb::STTELL1Error* &gt;"
       desc= "Vector of 4 Error Info (1 per PP)"
       setMeth = "FALSE"
       transient = "TRUE"
       nonconstaccessor = "TRUE"
       />
   

      <method type = "void"
              name = "addToErrorInfo"
              desc = "add to error vector"
              argList = "STTELL1Error* value"
      >
      <code>
      m_errorInfo.push_back(value);
      </code>
      </method>
     
      <method type = 'unsigned int'
      	      name = 'Tell1ID'
	      desc = 'Returns the Tell1D id'
	      const = 'TRUE'> 
      <code>  return key();
      </code>
      </method>
      
      <method 
       name = "ppErrorInfo"
       desc = "get the error info for a given pp"
       argList = "const unsigned int&amp; pp"
       type = "LHCb::STTELL1Error*"
       const = "TRUE">
          <code>
            return (pp &lt; m_errorInfo.size() ?  m_errorInfo[pp]: 0 );
	  </code>
      </method>

    <method 
        name    = "fillStream" 
        desc    = "Print out of error information"
        type    = "std::ostream&amp;" 
        virtual = "FALSE" 
        const   = "TRUE">
        <arg 
         type = "std::ostream" 
         name = "s" />
     </method>

    </class>   
 
  </package>
</gdd>
