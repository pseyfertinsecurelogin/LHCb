<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM 'gdd.dtd'>

<gdd>
  <package name='STTELL1Event'>
  <!-- location = address in TES -->
  <!-- classId = identifier -->
    <class name='STTELL1Error'
	   id='9012' 
	   author='Mathias Knecht' 
	   desc='Error info from one PP-FPGA for a TELL1 board'
           virtual = 'FALSE'>
   <base name='KeyedObject&lt; int &gt; '/>
   <location name="TTError"   place="Raw/TT/Error"   />
   <location name="UTError"   place="Raw/UT/Error"   />
   <location name="ITError"   place="Raw/IT/Error"   />

   <constructor argList = 'const unsigned int word0, const unsigned int word1, 
                           const unsigned int word2, const unsigned int word3, 
                           const unsigned int word4' 
                   desc='constructor fixed part of bank [5 words]'
                   initList = 'm_word0(word0), m_word1(word1), m_word2(word2),
                              m_word3(word3) , m_word4(word4), m_word5(0),
                              m_word6(0), m_word7(0), m_word8(0), m_word9(0),
                              m_word10(0), m_word11(0), m_word12(0), m_word13(0), m_badLinks()'>
   </constructor>


  <enum access = 'PUBLIC'
    name = 'FailureMode' 
    desc = 'enumerate failure modes' 
    value = 'kNone = 0,  kCorruptedBank = 1, kOptLinkDisabled = 2 , kTlkLinkLoss = 3,  
             kOptLinkNoClock  = 4, kSyncRAMFull = 5, kSyncEvtSize = 6, 
             kOptLinkNoEvent  = 7, kPseudoHeader = 8, kWrongPCN = 9'
    unknownValue = 'kNone'
    strTypConv = 'TRUE'>
  </enum>


   <enum access = 'PRIVATE'
     name = 'Tell1Const'
     desc = 'few useful constants'
     value = 'nPort = 4, nBeetle = 6, totalNumberOfPorts = nPort*nBeetle,  nMagic = 0x8E'
    >
     </enum>

  <typedef
     type   = "GaudiUtils::VectorMap&lt;unsigned int, LHCb::STTELL1Error::FailureMode &gt;"
     def    = "FailureInfo"
     desc   = "Vector of arx [ each 32 channels] with failure "
     access = "PRIVATE" 
  />

  <method
     name    = "addLinkInfo"
     desc    = "Add information on a link"
     argList = "const unsigned int key, const LHCb::STTELL1Error::FailureMode&amp; mode "
      type    = "bool"
   />

   <method
     name    = "linkInfo"
     desc    = "Extract the information associated with the specified key"
        argList = "const unsigned int beetle, 
                   const unsigned int port, 
                   const unsigned int pcn"
        const   = "TRUE"
        type    = "LHCb::STTELL1Error::FailureMode"
    />

 
  <method
     name    = "badLink"
     desc    = "link is bad for some reason"
        argList = "const unsigned int beetle, 
                   const unsigned int port, 
                   const unsigned int pcn"
        const   = "TRUE"
        type    = "bool"
    />

   <method
     name    = "linkID"
     desc    = "link identifier 0 - 23 "
        argList = "const unsigned int beetle, 
                   const unsigned int port "
        const   = "TRUE"
        type    = "unsigned int"
        access = "PRIVATE"
    >
    <code> return (4 * beetle + port);  </code>
   </method>


  <method
    name = "flagBadLinks"
    desc = "flag bad links"
    argList = "const unsigned int link, const LHCb::STTELL1Error::FailureMode&amp;  mode"
    access = "PRIVATE"
  >
  <code> 
 const unsigned int start = linkID(link,0u);
 for (unsigned int i  = start; i &lt; start + 4; ++i) {
   addLinkInfo(i, mode);
 }
    </code >
  </method>
 
  <method
     name    = "findPCN"
     desc    = "find pcn for value for this beetle"
        argList = "const unsigned int beetle" 
        const   = "TRUE"
        type    = "unsigned int"
    />


    <method
       name = "fillErrorInfo"
       desc = 'fill error information map'
       type = "void"
       access = "PRIVATE"
    />

      <method
	name   = "correctPatterns"
	desc   = "checks the magic patterns in error bank"
	type   = "bool"
	const  = "TRUE"
	access = "PRIVATE"
	/>


      <attribute
       type    = 'bitfield'
       name    = 'word0'
       desc    = 'Word 0 of Error block'
       init    = '0'
       setMeth = 'FALSE'
       access  = 'PUBLIC' >
       <bitfield
         type      = 'unsigned int'
         name      = 'BCnt'
         length    = '12'
         desc      = 'Bunch counter'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
          <bitfield
         type      = 'unsigned int'
         name      = 'DetectorID'
         length    = '4'
         desc      = 'ID of the sub-detector'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
         <bitfield
         type      = 'unsigned int'
         name      = 'BankList'
         length    = '8'
         desc      = 'List of the Banks sent by the TELL1 (Internal use)'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
         <bitfield
         type      = 'unsigned int'
         name      = 'EventInformation'
         length    = '8'
         desc      = 'For internal use'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
       	</attribute>
 	   
      <attribute
       type    = 'bitfield'
       name    = 'word1'
       desc    = 'Word 1 of Error block'
       init    = '0'
       access  = 'PUBLIC'
       setMeth   = 'FALSE'>
       <bitfield
         type      = 'int'
         name      = 'L0EvtID'
         length    = '32'
         desc      = 'L0 Event ID'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
         </attribute>
      <attribute
       type    = 'bitfield'
       name    = 'word2'
       desc    = 'Word 2 of Error block'
       init    = '0'
       access  = 'PUBLIC'
       setMeth = 'FALSE'>
       <bitfield
         type      = 'unsigned int'
         name      = 'ADC1'
         length    = '16'
         desc      = 'ADC data section length'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'Clust1'
         length    = '16'
         desc      = 'Cluster data section length'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        
        </attribute>
     <attribute
       type    = 'bitfield'
       name    = 'word3'
       desc    = 'Word 3 of Error block'
       init    = '0'
       access  = 'PUBLIC'
       setMeth = 'FALSE'>
       <bitfield
         type      = 'unsigned int'
         name      = 'NumClusters'
         length    = '16'
         desc      = 'Number of clusters'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'PCN'
         length    = '8'
         desc      = 'PCN from Beetle 0'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'ProcessInfo'
         length    = '8'
         desc      = 'Indicates what processing has been applied'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
    
	</attribute>
     <attribute
       type    = 'bitfield'
       name    = 'word4'
       desc    = 'Word 4 of Error block'
       access  = 'PUBLIC'
       setMeth = 'FALSE'>
         <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal0'
         length    = '8'
         desc      = 'Empty value, should be 0x00'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal1'
         length    = '8'
         desc      = 'Empty value, should be 0x8E'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
      <bitfield
         type      = 'unsigned int'
         name      = 'ErrorBankLength'
         length    = '16'
         desc      = 'Indicates if an error occured. Without error, value is 0x0, with an error value is 0x14'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 

	</attribute>
     <attribute
       type    = 'bitfield'
       name    = 'word5'
       desc    = 'Word 5 of Error block=Word 3 of Event Info block if Error Bank length is 0x14'
       init    = '0'
       access  = 'PUBLIC'
       setMeth = 'FALSE'>
       <bitfield
         type      = 'unsigned int'
         name      = 'OptLnkNoEvt'
         length    = '6'
         desc      = 'Indicates that no data has been received, one bit per link'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'OptLnkDisable'
         length    = '6'
         desc      = 'Indicates if link is disabled by ECS, one bit per link'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'SyncEvtSizeError'
         length    = '6'
         desc      = 'Set if more or less than 35 words are sent paer event (one bit per link)'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
    
        <bitfield
         type      = 'unsigned int'
         name      = 'TLKLnkLoss'
         length    = '6'
         desc      = 'Error on reception, bit set if the link is not plugged (one bit per link)'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'SyncRAMFull'
         length    = '6'
         desc      = 'Overflow on input sync RAM (one bit per link)'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'ChipAddr'
         length    = '2'
         desc      = 'Address of the PP-FPGA (between 0 and 3)'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
	</attribute>

     <attribute
       type    = 'bitfield'
       name    = 'word6'
       desc    = 'Word 6 of Error block=Word 4 of Event Info block if Error Bank length is 0x14'
       init    = '0'
       access  = 'PUBLIC' setMeth = 'FALSE'>
       <bitfield
         type      = 'int'
         name      = 'HeaderPseudoError'
         length    = '24'
         desc      = 'Indicates if the ADC value is between low and high thresholds, one per Analog Link'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'OptLnkNoClock'
         length    = '6'
         desc      = 'Indicates if no clock is received, one bit per link'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'PCNError'
         length    = '1'
         desc      = 'Indocates if the PCN among the links are not equal'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
    
        <bitfield
         type      = 'unsigned int'
         name      = 'R2'
         length    = '1'
         desc      = 'Reserved bit for later use'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
	</attribute>
     <attribute
       type    = 'bitfield'
       name    = 'word7'
       desc    = 'Word 7 of Error block=Word 5 of Event Info block if Error Bank length is 0x14'
       init    = '0'
       access  = 'PUBLIC' setMeth = 'FALSE'>
       <bitfield
         type      = 'unsigned int'
         name      = 'PCNBeetle0'
         length    = '8'
         desc      = 'PCN of the Beetle 0'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'PCNBeetle1'
         length    = '8'
         desc      = 'PCN of the Beetle 1'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
	 <bitfield
         type      = 'unsigned int'
         name      = 'PCNBeetle2'
         length    = '8'
         desc      = 'PCN of the Beetle 2'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
	 <bitfield
         type      = 'unsigned int'
         name      = 'PCNBeetle3'
         length    = '8'
         desc      = 'PCN of the Beetle 3'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
	
	</attribute>






     <attribute
       type    = 'bitfield'
       name    = 'word8'
       desc    = 'Word 8 of Error block=Word 6 of Event Info block if Error Bank length is 0x14'
       init    = '0'
       access  = 'PUBLIC' setMeth = 'FALSE'>
       <bitfield
         type      = 'unsigned int'
         name      = 'PCNBeetle4'
         length    = '8'
         desc      = 'PCN of the Beetle 4'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'PCNBeetle5'
         length    = '8'
         desc      = 'PCN of the Beetle 5'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
	 <bitfield
         type      = 'unsigned int'
         name      = 'R3'
         length    = '16'
         desc      = 'Reserved bits for later use =0x8B8B'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
	 
	
	</attribute>
      <attribute
       type    = 'bitfield'
       name    = 'word9'
       desc    = 'Word 9 of Error block=Word 7 of Event Info block if Error Bank length is 0x14'
       init    = '0'
       access  = 'PUBLIC'>
       <bitfield
         type      = 'unsigned int'
         name      = 'IHeaderBeetle0'
         length    = '4'
         desc      = 'I Header of the Beetle 0'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'IHeaderBeetle1'
         length    = '4'
         desc      = 'I Header of the Beetle 1'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'IHeaderBeetle2'
         length    = '4'
         desc      = 'I Header of the Beetle 2'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'IHeaderBeetle3'
         length    = '4'
         desc      = 'I Header of the Beetle 3'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'IHeaderBeetle4'
         length    = '4'
         desc      = 'I Header of the Beetle 4'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'IHeaderBeetle5'
         length    = '4'
         desc      = 'I Header of the Beetle 5'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
       <bitfield
         type      = 'unsigned int'
         name      = 'R4'
         length    = '8'
         desc      = 'Reserved bits for later use'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
 
	
	</attribute>  
	    <attribute
       type    = 'bitfield'
       name    = 'word10'
       desc    = 'Word 10 of Error block'
       init    = '0'
       access  = 'PUBLIC' >
         <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal2'
         length    = '8'
         desc      = 'Empty value, should be 0x01'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal3'
         length    = '8'
         desc      = 'Empty value, should be 0x8E'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />

       <bitfield
         type      = 'unsigned int'
         name      = 'Clust2'
         length    = '16'
         desc      = 'Cluster data section length'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />

	</attribute>
	
	

	
	    <attribute
       type    = 'bitfield'
       name    = 'word11'
       desc    = 'Word 11 of Error block'
       init    = '0'
       access  = 'PUBLIC' >
         <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal4'
         length    = '8'
         desc      = 'Empty value, should be 0x02'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal5'
         length    = '8'
         desc      = 'Empty value, should be 0x8E'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />

  	      <bitfield
         type      = 'unsigned int'
         name      = 'ADC2'
         length    = '16'
         desc      = 'ADC data section length'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 
	
	</attribute>
	
	
	
	    <attribute
       type    = 'bitfield'
       name    = 'word12'
       desc    = 'Word 12 of Error block'
       init    = '0'
       access  = 'PUBLIC'>
         <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal6'
         length    = '8'
         desc      = 'Empty value, should be 0x03'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal7'
         length    = '8'
         desc      = 'Empty value, should be 0x8E'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />

  	      <bitfield
         type      = 'unsigned int'
         name      = 'NZSBankLength'
         length    = '16'
         desc      = 'NZS bank length'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 	
	
	</attribute>
	
	
	    <attribute
       type    = 'bitfield'
       name    = 'word13'
       desc    = 'Word 13 of Error block'
       init    = '0'
       access  = 'PUBLIC'>
         <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal8'
         length    = '8'
         desc      = 'Empty value, should be 0x04'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />
        <bitfield
         type      = 'unsigned int'
         name      = 'EmptyVal9'
         length    = '8'
         desc      = 'Empty value, should be 0x8E'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' />

  	      <bitfield
         type      = 'unsigned int'
         name      = 'PedBankLength'
         length    = '16'
         desc      = 'Pedestal bank length'
         setMeth   = 'FALSE'
         getMeth   = 'TRUE'
         checkMeth = 'FALSE' /> 	
	</attribute>

   <attribute
     name    = "badLinks"
     desc    = "list of links with failures"
     type    = "FailureInfo"
     getMeth = "FALSE"
     setMeth = "FALSE"
     access  = "PRIVATE" />

     <method 
     name = 'hasErrorInfo' 
     desc = 'bank has optional error words'
     type = 'bool'
     const = 'TRUE'>
     <code>
 return ErrorBankLength() == 0x14;
      </code>
      </method>

    <method 
     name = 'hasNZS' 
     desc = 'bank has optional NSZ bank word'
     type = 'bool'
     const = 'TRUE'>
     <code>
 return (BankList()  &amp; 0x8)!=0;
      </code>
     </method>

   <method 
     name = 'hasPed' 
     desc = 'bank has optional ped bank word'
     type = 'bool'
     const = 'TRUE'>
     <code>
 return (BankList() &amp; 0x10 )!=0;
      </code>
     </method>

   <method 
     name = 'nOptionalWords' 
     desc = '# words Tell1 ppx sent for this bank'
     type = 'unsigned int'
     const = 'TRUE'>
     <code>
 unsigned int wCount = 0; 
 if (hasErrorInfo() == true) wCount +=5;
 if (hasPed() == true) ++wCount;
 if (hasNZS() == true) ++wCount;
 return wCount;
      </code>
     </method>

   <method 
     name = 'sentWords' 
     desc = '# words Tell1 sent for this bank'
     type = 'unsigned int'
     const = 'TRUE'>
     <code>
 unsigned int wCount = 7 + nOptionalWords(); 
 return wCount;
      </code>
     </method>


    <method
      name = 'setOptionalErrorWords'
      desc = 'optional error words'
      type = 'void'
      argList = 'const unsigned int w1, const unsigned int w2, const unsigned int w3
                 , const unsigned int w4, const unsigned int w5' >
     <code>
 m_word5 = w1;
 m_word6 = w2;
 m_word7 = w3;
 m_word8 = w4;
 m_word9 = w5;
 fillErrorInfo(); // fill the map
       </code>
    </method>

    <method
     name = 'pcnVote'
     desc = 'majority vote on pcn'
     type = 'unsigned int'
     const = "TRUE">
    </method>

   <method
     name = "fractionOK"
     desc = "fraction of links that are OK"
     type = "double"
     const = "TRUE"
     argList = "const unsigned int pcn">
   </method>

 
     <method 
        name    = "fillStream" 
        desc    = "Print out of error information"
        type    = "std::ostream&amp;" 
        virtual = "FALSE" 
        const   = "TRUE">
        <arg 
         type = "std::ostream" 
         name = "s"/>
      </method>	


	 </class>
  </package>
</gdd>
