<?xml version="1.0" encoding="ISO-8859-1"?>
<!--- $Id: -->
<!--- Author  : Rob Lambert -->
<!--- Created : 2009-11-09 -->

<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
  <package name='LumiEvent'>


<!-- EventCountFSR Class -->

    <class
      name="EventCountFSR"
      author="Rob Lambert"
      desc="Accounting class for processed events in FSR"
      id="13503"
      >
      <base name='DataObject'/>

      <enum
        desc="FSR status, is the accounting OK"
        name="StatusFlag"
        strTypConv = 'TRUE'
        access="PUBLIC" >
        <enumval name="Unknown"    value = "-3"  desc="other enum possibilities"/>
        <enumval name="UNRELIABLE" value = "-2"  desc="The counting in this FSR is known to be suspect"/>
        <enumval name="UNCHECKED"  value = "-1"  desc="The counting needs to be checked"/>
        <enumval name="ERROR"      value = "0"   desc="The counting in all lower FSRs doesn't compute"/>
        <enumval name="VERIFIED"   value = "1"   desc="The counting in all lower FSRs has been verified OK"/>
      </enum>

      <location name="Default"   
		place="/FileRecords/EventCountFSR"/>
      
      <attribute
        desc="Number of events this output file should contain"
        name="output"
        type="longlong"
        init="0"
       />

      <attribute
        desc="Number of events read from all input files"
        name="input"
        type="longlong"
        init="0"
       />

      <attribute
        desc="Is the FSR reliable? This also allows FSR counting to be explicitly verified in production"
        name="statusFlag"
        type="LHCb::EventCountFSR::StatusFlag"
        init="LHCb::EventCountFSR::UNCHECKED"
       />


      <!-- readable printout -->
      <method
        name='fillStream'
        type='std::ostream&amp;'
        argList='std::ostream&amp; s'
        desc='readable printout'
        const='TRUE' >
        <code>

    std::ostream&amp; ss = const_cast&lt; std::ostream&amp; &gt;(s);
    ss &lt;&lt; "{ "
       &lt;&lt; " input : " &lt;&lt;  m_input  
       &lt;&lt; " output : " &lt;&lt;  m_output  
       &lt;&lt; " statusFlag : " &lt;&lt;  m_statusFlag  
       &lt;&lt; " }"; 

    return ss;
        </code>
      </method>

    </class>

  </package>


</gdd>
