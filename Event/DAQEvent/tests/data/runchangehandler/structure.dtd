<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Minimal version of structure.dtd for tests. -->
<!-- The complete version is available at conddb:/DTD/structure.dtd -->
<!-- Author: Marco Clemencic -->


<!--DDDB: XML root element, Gaudi transient store root as well-->
<!ELEMENT DDDB ( catalog| catalogref | condition )+>
<!ATTLIST DDDB version CDATA "3.3" >

<!--
param: this allows the user to add a parameter, giving its name, type and
       possibly a comment. This parameter will then be reachable through the
       getUserParam method of the resulting detector element. Note that the
       default type is "double" and the default comment is empty.
-->
<!ELEMENT param (#PCDATA)>
<!ATTLIST param xml:space (default|preserve) #FIXED "preserve"
  type CDATA "double"
  name CDATA #REQUIRED
  comment CDATA "">

<!-- 
paramVector: This is an equivalent of userParam but it defines a vector of
             values. Note that the vector has no given size. The parser will
             take every value it finds. These should be separated by spaces
             and/or cariage returns
-->
<!ELEMENT paramVector (#PCDATA)>
<!ATTLIST paramVector xml:space (default|preserve) #FIXED "preserve"
  type CDATA "double"
  name CDATA #REQUIRED
  comment CDATA "">

<!-- Element used to declare one item in a map -->
<!ELEMENT item EMPTY>
<!ATTLIST item
  key   CDATA #REQUIRED
  value CDATA #REQUIRED>

<!-- Element to define a map in a condition object -->
<!ELEMENT map (item*)>
<!ATTLIST map xml:space (default|preserve) #FIXED "preserve"
  keytype   CDATA "string"
  valuetype CDATA "double"
  name      CDATA #REQUIRED
  comment   CDATA "">

<!ELEMENT specific ANY>

<!--
condition: This defines a condition in a very generic way.
           It is actually a set of parameters and it may have optional
           user defined custom data, its specific information
-->
<!ELEMENT condition (( param | paramVector | map | specific )*)>

<!--condition: name and classID-->
<!ATTLIST condition
  name ID #REQUIRED 
  classID CDATA "5">

<!--
conditionref: reference to detector element data location.
              The form of URI is either to refer outside(1) or inside(2) a file
                 1) href="protocol://HOSTNAME/path/to/file.xml#catalogID"
                 2) href="#catalogID"   
-->
<!ELEMENT conditionref EMPTY>
<!ATTLIST conditionref
  href CDATA #REQUIRED
>

<!--
catalog: helps to define a partition of XML dB for domain specific part
         and flat store, e.g. a palette of detector elements
-->
<!ELEMENT catalog ( catalog     | catalogref     |
                    condition   | conditionref   )*>
<!--
catalog : name
-->
<!ATTLIST catalog
  name ID #REQUIRED>
<!--
catalogref: refer to the location where the actual catalog data reside
-->
<!ELEMENT catalogref EMPTY>
<!--
catalogref: name 
            href : the actual URI of the catalog location the form of URI is
                   either to refer outside(1) or inside(2) a file
                      1) href="protocol://HOSTNAME/path/to/file.xml#catalogID"
                      2) href="#catalogID"
-->
<!ATTLIST catalogref
  href CDATA #REQUIRED>
