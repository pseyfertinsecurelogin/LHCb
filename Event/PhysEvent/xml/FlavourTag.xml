<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd" >

<gdd>

  <package name="PhysEvent">

<!-- ****************************************************************
     * FlavourTag class definition                                  *
     ****************************************************************-->
      <class
       desc  = "The result of the tagging algorithm" 
       name  = "FlavourTag"
       author= "Marco Musy"
       id    = "805"
       stdVectorTypeDef = "TRUE"
      >

      &StlVector;

      <base name= "KeyedObject&lt;int&gt;"/>
      &KeyedObject;

      <import name= "Event/Particle"/>
      <import name= "Event/Tagger" />

      <location
        name ="Default"
        place="Phys/Tagging"
      />

      <enum
        desc  = "Possible result of the tagging algorithm"
        name  = "TagResult"
        value = "b = -1, bbar = 1, none = 0" 
        access= "PUBLIC"
      />

      <constructor
        desc = "Copy Constructor"
        argList  = "const FlavourTag&amp; c"
        initList = "KeyedObject&lt;int&gt;(), m_decision(c.decision()), m_category(c.category()), m_omega(c.omega()), m_taggers(c.taggers()), m_decisionOS(c.decisionOS()), m_categoryOS(c.categoryOS()), m_omegaOS(c.omegaOS()), m_taggedB(c.taggedB())">
        <code/>
      </constructor>

      <method
        name="operator="
        desc="Assignment operator"
        type="LHCb::FlavourTag&amp;"
        >
        <arg name="rhs" type="FlavourTag" const='TRUE'/>
        <code>
          if (this != &amp;rhs) {
             m_decision   = rhs.m_decision;
             m_omega      = rhs.m_omega;
             m_omegaOS    = rhs.m_omegaOS;
             m_taggers    = rhs.m_taggers;
             m_decisionOS = rhs.m_decisionOS;
             m_category   = rhs.m_category;
             m_categoryOS = rhs.m_categoryOS;
             m_taggedB    = rhs.m_taggedB;
          }
          return *this;
        </code>
      </method>

      <attribute
        desc = "The result of the tagging algorithm"
        name = "decision"
        type = "short int"
        init = "0"
      />

      <relation
        desc = "The B meson for which this tag has been made"
        name = "taggedB"
        type = "LHCb::Particle"
        multiplicity="1"
      />

      <attribute
        desc = "Category of tag"
        name = "category"
        type = "unsigned short int"
        init = "0"
      />

      <attribute
        desc = "Wrong tag fraction (predicted)"
        name = "omega"
        type = "float"
        init = "0.50"
      />

      <attribute 
	desc    = "Vector of Taggers" 
	name    = "taggers" 
	type    = "std::vector&lt;LHCb::Tagger&gt;"
      />

      <attribute 
	desc = "decision of opposite side taggers only"
	name = "decisionOS"
	type = "short int"
        init = "0"
      />

      <attribute
        desc = "Category of tag using opposite side only"
        name = "categoryOS"
        type = "unsigned short int"
        init = "0"
      />

      <attribute
        desc = "Wrong tag fraction (predicted) using opposite side only"
        name = "omegaOS"
        type = "float"
        init = "0.50"
      />

      <method
        name    = "addTagger"
        type    = "void"
	argList = "LHCb::Tagger HAS"
        desc    = "Add one Tagger">
        <code>  
          m_taggers.push_back(HAS); 
          return;
        </code>
      </method>

    </class>
  </package>

</gdd>
