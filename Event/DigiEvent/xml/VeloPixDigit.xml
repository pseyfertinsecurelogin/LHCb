<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
 <package name="DigiEvent">
  <class
   author="Marcin Kucharczyk"
   desc="This class represents digitized pixel hit in VeloPix"
   id="4503"
   name="VeloPixDigit">
   <location name="VeloPixDigitLocation"   place="Raw/VeloPix/Digits"   />
   <import name="Kernel/VeloPixChannelID"/>
   <template name="KeyedObjectDict" t1="LHCb::VeloPixChannelID"/>
   <base name="KeyedObject&lt;LHCb::VeloPixChannelID&gt;"/>
   &KeyedContainer;

   <constructor argList="int tot"
                initList="m_ToTValue(tot),m_timeStamp(0)"
                desc="constructor from ToT charge only">
   </constructor>

   <constructor argList="int tot, int time"
                initList="m_ToTValue(tot),m_timeStamp(time)"
                desc="constructor from ToT and time stamp">
   </constructor>

  <constructor desc = 'copy constructor'
      initList = "KeyedObject&lt;LHCb::VeloPixChannelID&gt;(),m_ToTValue(digit.m_ToTValue),m_timeStamp(digit.m_timeStamp)" >
      <arg const = 'TRUE' name = "digit" type = "LHCb::VeloPixDigit" />
  </constructor>

  <method desc= 'clone method'
   name = 'clone'
   const = 'TRUE'
   type = "LHCb::VeloPixDigit*"
   access = "PUBLIC">
   <code>
     return new LHCb::VeloPixDigit( *this );
   </code>
  </method>

  <attribute name="ToTValue" type="int" desc="total digitized charge in a pixel measured as Time-over-Threshold "/>
  <attribute name="timeStamp" type="int" desc="time stamp related to when the threshold was exceeded"/>
  <method type='LHCb::VeloPixChannelID' name='channelID' const='TRUE' desc='channel = key'>
   <code>return key();</code>
  </method>

  </class>
 </package>
</gdd>

