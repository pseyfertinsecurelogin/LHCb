<?xml version="1.0" encoding="ISO-8859-1"?>
<!--- $Id: -->
<!--- Author  : Tomasz Szumlak -->
<!--- Created : 2005-12-21 -->

<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
 <package name="DigiEvent">
  <class
   author="Tomasz Szumlak"
   desc="VeloDigit is a temporary object to store the ADC value obtained during
         one of the FPGA processing stages. The object is much more simple than
         VeloFullFPGADigit (has only one data member)"
   name="VeloDigit"
   location="Raw/Velo/Digits"
  >
   <import name="Kernel/VeloChannelID"/>
   <template name="KeyedObjectDict" t1="LHCb::VeloChannelID"/>
   <base name="KeyedObject&lt;LHCb::VeloChannelID&gt;"/>
   &KeyedContainer;

  <constructor
   desc="constructor with key"
   initList="KeyedObject&lt;LHCb::VeloChannelID&gt;(key),
   m_ADCValue(0)"
  >
  <arg type="LHCb::VeloChannelID" name="key" const="TRUE"/>
  </constructor>
 
  <constructor desc = 'copy constructor'
      initList = "KeyedObject&lt;LHCb::VeloChannelID&gt;(),m_ADCValue(digit.m_ADCValue)" > 
      <arg const = 'TRUE' name = "digit" type = "LHCb::VeloDigit" />
  </constructor>

  <method desc= 'clone method'
   name = 'clone' 
   const = 'TRUE'
   type = "LHCb::VeloDigit*"
   access = "PUBLIC">
   <code>
     return new LHCb::VeloDigit( *this );
   </code>
  </method>
 
  <method 
   name="channelID" 
   type="LHCb::VeloChannelID" 
   desc="combined sensor and strip number ID" 
   const="TRUE"
  >          
   <code>
    return key();
   </code>
  </method>

  <method 
   name="sensor" 
   type="long" 
   desc="Sensor Number" 
   const="TRUE"
  >
   <code>
    return key().sensor();
   </code>
  </method>
   
  <method
   name="strip"
   type="long"
   desc=" "
   const="TRUE"
  >
   <code>
    return key().strip();
   </code>
  </method>

  <attribute
   name="ADCValue"
   type="short int"
   desc=" "
   setMeth="TRUE"
   getMeth="TRUE"
  />

  </class>
 </package> 
</gdd>
