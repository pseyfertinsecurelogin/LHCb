<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">
<gdd>
<package name="MCEvent">

<!-- **************************************************************************
  * $Id: MCRichDigitHistoryCode.xml,v 1.14 2008-01-30 11:04:18 jonrob Exp $
  *****************************************************************************
  * XML-description of MCRichDigitHistoryCode class                           *
  * author: Chris Jones   Christopher.Rob.Jones@cern.ch                       *
  * date:   2004-06-23                                                        *
  ************************************************************************* -->

<class 
        name             = "MCRichDigitHistoryCode"
        author           = "Chris Jones   Christopher.Rob.Jones@cern.ch" 
        desc             = "Bit-packed history code object for RICH data objects" 
        virtual          = "FALSE" >
        
        <constructor 
                desc     = "Constructor from bit-packed integer" 
                explicit = "TRUE"
                initList = "m_historyCode(code)" >
                <arg const="TRUE"  inout="BYVALUE" name="code"   type="unsigned int" />
                <code/>
        </constructor>

        <method 
                name  = "setFlags"
                const = "FALSE" 
                desc  = "set the flags according the the given history code" 
                type  = "void" >
                <arg const="TRUE" inout="BYVALUE" name="history" type="LHCb::MCRichDigitHistoryCode"/>
                <code>
                   m_historyCode = ( m_historyCode | history.historyCode() ) ;
                </code>
        </method>

        <attribute 
                name = "historyCode"
                desc = "Bit-packed history information" 
                init = "0"
                type = "bitfield">

                <bitfield desc="Digit is associated to a signal event MCRichHit"    length="1"  name="signalEvent" />
                <bitfield desc="Digit is associated to a Prev event MCRichHit"      length="1"  name="prevEvent" />
                <bitfield desc="Digit is associated to a PrevPrev event MCRichHit"  length="1"  name="prevPrevEvent" />
                <bitfield desc="Digit is associated to a Next event MCRichHit"      length="1"  name="nextEvent" />
                <bitfield desc="Digit is associated to a NextNext event MCRichHit"  length="1"  name="nextNextEvent" />

                <bitfield desc="One of the contributing hits came from aerogel Cherenkov radiation" length="1"  name="aerogelHit" />
                <bitfield desc="One of the contributing hits came from C4F10 Cherenkov radiation"   length="1"  name="c4f10Hit" />
                <bitfield desc="One of the contributing hits came from CF4 Cherenkov radiation"     length="1"  name="cf4Hit" />

                <bitfield desc="One of the contributing hits underwent rayleigh scattering"                                                length="1" name="scatteredHit" />
                <bitfield desc="One of the contributing hits came from a charged track hitting the HPD window"                             length="1" name="chargedTrack" />
                <bitfield desc="One of the contributing hits came from CK radiation from charged tracks traversing the Gas quartz windows" length="1" name="gasQuartzCK"  />
                <bitfield desc="One of the contributing hits came from CK radiation from charged tracks traversing the HPD quartz windows" length="1" name="hpdQuartzCK"  />
                <bitfield desc="One of the contributing hits came from CK radiation from charged tracks traversing the nitrogen gas"       length="1" name="nitrogenCK"   />
                <bitfield desc="One of the contributing hits came from CK radiation from the aerogel filter"                               length="1" name="aeroFilterCK" />
                <bitfield desc="One of the contributing hits came from a dark hit (I.e. a red photon)"                                     length="1" name="darkHit"      />
                <bitfield desc="This digit was produced due to charge sharing in the HPD silicon pixel chip"                               length="1" name="chargeShareHit" />

                <bitfield desc="One of the contributing hits was pure Cherenkov (unscattered/reflected etc.) signal from one of the main RICH radiators" length="1"  name="hasSignal" />

                <bitfield desc="One of the contributing hits came from an electron backscattered at the HPD silicon chip"                       length="1"  name="hpdSiBackscatter"  />

                <bitfield desc="One of the contributing hits came from a photon reflected by the QW/PC interface in the HPD"                    length="1"  name="hpdReflQWPC"       />
                <bitfield desc="One of the contributing hits came from a photon reflected by the Chromium in the HPD"                           length="1"  name="hpdReflChr"        />
                <bitfield desc="One of the contributing hits came from a photon reflected by the Air/QW interface in the HPD"                   length="1"  name="hpdReflAirQW"      />
                <bitfield desc="One of the contributing hits came from a photon reflected by the Air/PC interface in the HPD"                   length="1"  name="hpdReflAirPC"      />
                <bitfield desc="One of the contributing hits came from a photon reflected by the silicon in the HPD"                            length="1"  name="hpdReflSi"         />
                <bitfield desc="One of the contributing hits came from a photon reflected by the kovar in the HPD"                              length="1"  name="hpdReflKovar"      />
                <bitfield desc="One of the contributing hits came from a photon reflected by the kapton in the HPD"                             length="1"  name="hpdReflKapton"     />
                <bitfield desc="One of the contributing hits came from a photon reflected by the PC/QW interface in the HPD"                    length="1"  name="hpdReflPCQW"       />

        </attribute>

        <method 
                name  = "isRICHRadiator"
                const = "TRUE" 
                desc  = "Returns true if one of the contributing hits is Cherenkov radiation from the main radiators" 
                type  = "bool" >
                <code>
                   return ( aerogelHit() ||
                            c4f10Hit()   || 
                            cf4Hit()     );  
                </code>
        </method>

        <method 
                name  = "hpdReflection"
                const = "TRUE" 
                desc  = "Returns true if one of the contributing hits is from an optical reflection within the HPD" 
                type  = "bool" >
                <code>
                  return ( hpdReflQWPC()   ||
                           hpdReflChr()    ||
                           hpdReflAirQW()  ||
                           hpdReflAirPC()  ||
                           hpdReflSi()     ||
                           hpdReflKovar()  ||
                           hpdReflKapton() ||
                           hpdReflPCQW()   );
                </code>
        </method>

        <method 
                name  = "hasBackground"
                const = "TRUE" 
                desc  = "Returns true if at least one of the hits contributing to this digit came from a background source" 
                type  = "bool" >
                <code>
                  return ( scatteredHit()     ||
                           hpdReflection()    || 
                           hpdSiBackscatter() ||
                           chargedTrack()     || 
                           gasQuartzCK()      ||
                           hpdQuartzCK()      || 
                           nitrogenCK()       || 
                           aeroFilterCK()     ||
                           chargeShareHit()   || 
                           darkHit()          );
                </code>
        </method>

       <method 
                name  = "isSignal"
                const = "TRUE" 
                desc  = "Returns true if this digit is purely due to Cherekov signal from one of the main RICH radiators. I.e. has NO background contribution." 
                type  = "bool" >
                <code>
                 return ( !hasBackground() );
                </code>
        </method>

        <method 
                name  = "isBackground"
                const = "TRUE" 
                desc  = "Returns true if this digit is only due to background. I.e. none of the contributing hits were signal hits" 
                type  = "bool" >
                <code>
                  return ( !hasSignal() );
                </code>
        </method>

        <method 
          name    = "fillStream" 
          desc    = "Print this MCRichDigitHistoryCode in a human readable way"
          type    = "std::ostream&amp;" 
          virtual = "FALSE" 
          const   = "TRUE">
          <arg 
            type = "std::ostream" 
            name = "s"/>
        </method>

</class>

</package>
</gdd>
