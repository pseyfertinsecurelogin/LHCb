<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    (c) Copyright 2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!--- $Id: -->
<!--- Author  : Violaine Bellee, Julian Wishahi -->
<!--- Created : 2016-10-24 -->

<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
  <package name="FTEvent">
    <class name   = "MCFTPhoton"
           id     = "14005"
           author = "Violaine Bellee, Julian Wishahi"
           desc   = "This class represents a photon in a fibre mat as a result of crossing MCHits."
           final = "TRUE"
           defaultdestructor = "FALSE"
           serializers="FALSE">
      <base     name="ContainedObject"/>
      &ContainedObject;
      <import   name = "Event/MCHit" />
      <location name = "Default"   place="MC/FT/Photons"   />

      <constructor desc = "Constructor"
                argList = "int sensDetID, double nPhotons, 
                           const LHCb::MCHit* mcHit, double time, 
                           double wavelength, double posX, double posZ, 
                           double dXdY, double dZdY, bool isReflected"
               initList = "m_sensDetID(sensDetID), m_nPhotons(nPhotons),
                           m_mcHit(mcHit), m_time(time),
                           m_wavelength(wavelength), m_posX(posX), m_posZ(posZ),
                           m_dXdY(dXdY), m_dZdY(dZdY), m_isReflected(isReflected)"  />                           
                           
      <method name = "lowerByMatID"
		      desc = "Comparison for sorting by matID and x-position"
		   argList = "MCFTPhoton* p1, MCFTPhoton* p2"
		      type = "bool"
		    static = "TRUE"
		    access = "PUBLIC">
	    <code> return ( p1-&gt;sensDetID() &lt; p2-&gt;sensDetID() ) ;</code>
      </method>
 
      <attribute  name   = "sensDetID"
                  desc   = "ID of the mat"
                  type   = "int"/>

      <attribute  name   = "nPhotons"
                  desc   = "Number of photons"
                  type   = "double"/>

      <attribute  name   = "mcHit"
                  desc   = "Pointer to orignal MCHit"
                  type   = "const LHCb::MCHit*"/>

      <attribute  name   = "time"
                  desc   = "Exit time of the photons at the fibre ends"
                  type   = "double"/>

      <attribute  name   = "wavelength"
                  desc   = "Wavelength of the photons at the fibre ends"
                  type   = "double"/>

      <attribute  name   = "posX"
                  desc   = "x coordinate (local) of the photons at the fibre ends"
                  type   = "double"/>

      <attribute  name   = "posZ"
                  desc   = "z coordinate (local) of the photons at the fibre ends"
                  type   = "double"/>

      <attribute  name   = "dXdY"
                  desc   = "dx/dy direction (local) of the photons at the fibre ends"
                  type   = "double" />
 
      <attribute  name   = "dZdY"
                  desc   = "dz/dy direction (local) of the photons at the fibre ends"
                  type   = "double" />
 
      <attribute  name   = "isReflected"
                  desc   = "isReflected flags"
                  type   = "bool"/>

    </class>
  </package>
</gdd>
