<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    (c) Copyright 2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!--- $Id: -->
<!--- Author  : Olivier Callot -->
<!--- Created : 2012-05-11 -->

<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
  <package name   = "FTEvent">

    <class name   = "FTCluster"
           id     = "14003"
           author = "Olivier Callot,Eric Cogneras"
           desc   = "This class represents the clusters made of consecutive FTChannels"
           final  = "TRUE"
           defaultdestructor = "FALSE"
           serializers="FALSE">
      <import   name = "Kernel/FTChannelID" />
      <location name = "Default"   place="Raw/FT/Clusters"   />

      <template name = "KeyedObjectDict" t1="LHCb::FTChannelID"/>
      <base     name = "KeyedObject&lt;LHCb::FTChannelID&gt;" />
      &KeyedObject;

      <constructor desc     = "Constructor"
                   argList  = "LHCb::FTChannelID&amp; id, float fraction, 
                               int fractionBit, std::vector&lt;LHCb::FTChannelID&gt; channelIDs, 
                               int isLarge, float charge" 
                   initList = "m_fraction(fraction), m_fractionBit(fractionBit), m_isLarge(isLarge),
                               m_charge(charge), m_channelIDs(channelIDs)">
        <code> this->setKey(id); </code>
      </constructor>

      <method    name   = "channelID"
                 desc   = "Retrieve the FTChannelID, key of the object"
                 type   = "const LHCb::FTChannelID&amp;"
                 access = "PUBLIC"
                 const  = "TRUE" >
        <code> return key(); </code>
      </method>

      <method    name   = "size"
                 desc   = "Number of cells in this cluster"
                 type   = "int"
                 access = "PUBLIC"
                 const  = "TRUE" >
        <code> return m_channelIDs.size(); </code>
      </method>

      <attribute name   = "fraction"
                 desc   = "Fractional part of the channel ID, when barycentre is computed. between -0.25 and 0.75"
                 type   = "float"
                 access = "PUBLIC"/>

      <attribute name   = "fractionBit"
                 desc   = "The fraction of channel as the integer value (0 or 1)"
                 type   = "int"
                 access = "PUBLIC"/>

      <attribute name   = "isLarge"
                 desc   = "size category of the cluster: 0 lt 4, 1 lt 8, 2 others  "
                 type   = "int"
                 access = "PUBLIC"/>

      <attribute name   = "charge"
                 desc   = "Total charge in ADC count"
                 type   = "float"
                 access = "PUBLIC"/>

      <attribute name   = "channelIDs"
                 desc   = "all FTChannelIDs corresponding to this cluster"
                 type   = "std::vector&lt;LHCb::FTChannelID&gt;"
                 setMeth= "FALSE"
                 access = "PUBLIC"/>



    </class>
  </package>
</gdd>
