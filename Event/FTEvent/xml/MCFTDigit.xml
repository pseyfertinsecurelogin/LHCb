<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    (c) Copyright 2000-2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!--- Author  : Eric Cogneras -->
<!--- Created : 2012-05-15 -->

<!DOCTYPE gdd SYSTEM "gdd.dtd" >
<gdd>
  <package name="FTEvent">
    <class name   = "MCFTDigit"
           id     = "14002"
           author = "Eric Cogneras"
           desc   = "This class represents the ADC charge collected per FTChannelID"
           final = "TRUE"
           defaultdestructor = "FALSE"
           serializers="FALSE">
      <import   name = "Kernel/FTChannelID" />
      <import   name = "Event/MCHit.h" />
      <import   name = "Event/MCFTDeposit.h" />
      <location name = "Default"   place="MC/FT/Digits"   />

      <template name = "KeyedObjectDict" t1="LHCb::FTChannelID"/>
      <base     name = "KeyedObject&lt;LHCb::FTChannelID&gt;" />
      &KeyedObject;

      <constructor desc     = "Constructor"
		   argList  = "LHCb::FTChannelID&amp; id, float PE, int adc, std::vector&lt; const LHCb::MCFTDeposit* &gt; deposits" 
                   initList = "m_photoElectrons(PE),m_adcCount(adc),m_deposits(deposits)">
        <code> this->setKey(id); </code>
      </constructor>

      <method    name   = "channelID"
                 desc   = "Retrieve the FTChannelID, key of the object"
                 type   = "const LHCb::FTChannelID&amp;"
                 access = "PUBLIC"
                 const  = "TRUE">
        <code> return key(); </code>
      </method>

      <method    name   = "lowerByChannelID"
		 desc   = "Comparison for sorting by channel ID"
		 argList = "MCFTDigit* d1, MCFTDigit* d2"
		 type    = "bool"
		 static  = "TRUE"
		 access  = "PUBLIC">
        <code> return d1-&gt;channelID() &lt; d2-&gt;channelID(); </code>
      </method>
      
      <attribute name   = "photoElectrons"
                 desc   = "photoElectrons for ChannelID"
                 type   = "float"
                 access = "PRIVATE"/>

      <attribute name   = "adcCount"
                 desc   = "ADC Counts (2bit ADC PE threshold check) for ChannelID"
                 type   = "int"
                 access = "PRIVATE"/>

      <attribute name   = "deposits"
                 desc   = "the MCFTDeposits corresponding to this digit"
                 type   = "std::vector&lt; const LHCb::MCFTDeposit* &gt;"
                 setMeth= "FALSE"
                 access = "PRIVATE"/>


    </class>
  </package>
</gdd>
