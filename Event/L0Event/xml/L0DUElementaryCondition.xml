<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd">
<gdd>
  <package name="L0Event">


    <class 
      author="Olivier Deschamps"
      desc="This class represents the L0DU Condition"
      name="L0DUElementaryCondition">

      <base name="ContainedObject"/>
       &ContainedObject;


      <location name = "Default"   place = "Trig/L0/L0DUConditions"  />
      <location name = "Emulated"  place = "Emu/L0/L0DUConditions"  />

      <import name="Event/L0DUElementaryData"/>
      <import name="map" std="TRUE"/>
      <import name="string" std="TRUE"/>

      <typedef def    = "Map" 
        desc   = "std::map Container "
        type   = "std::map&lt;std::string, LHCb::L0DUElementaryCondition* &gt;" 
        access = "PUBLIC"/>

      <copyconstructor/>
      <constructor
        desc = "non default constructor"
        argList   = "unsigned int id, const std::string name, LHCb::L0DUElementaryData* data ,const std::string comp, unsigned int threshold" 
        initList  = "m_id(id),m_name(name),m_data(data),m_comparator(comp),m_threshold(threshold),m_reported(true),m_reportBit(id),m_bx(0)">
      </constructor>

      <attribute name = "id" desc = " L0DU condition index "  type = "unsigned int" />
      <attribute name = "name" desc = " L0DU condition name "  type = "std::string"/>
      <attribute name = "data" desc = " L0DU Elementary data"  type = "LHCb::L0DUElementaryData*" />
      <attribute name = "comparator" desc = " comparator symbol"  type = "std::string" />
      <attribute name = "threshold"  desc = "threshold value (digit)" type = "unsigned int" />
      <attribute name = "reported"   desc = "true if the condition-bit is reported the summaryReport" type = "bool" init="true" />
      <attribute name = "reportBit"  desc = "bit position in the  summaryReport == id() if all conditions are to be reported" type = "int" />
      <attribute name = "bx"         desc = "BX to be considered for the data value (default 0 = current BX)" type = "int" init="0" getMeth="FALSE"/>


      <method name = "bx" 
              desc = "return bx to be considered"
              type = "int">
        <code> 
          return m_bx;
        </code>
      </method>

      <method name      = "emulatedValue" 
        desc = "Condition value = comparaison(data,comparator,threshold)" type  = "bool" >
        <code> return comparison( m_data->digit(m_bx)  ,m_comparator , m_threshold ); </code>
      </method>

      <method name  = "description" desc = "L0DUElementaryCondition short description" type  = "std::string" ></method>
      <method name  = "summary" desc = "L0DUElementaryCondition full summary after processing" type  = "std::string" ></method>
      <method name  = "comparison" desc = "Comparison method" type  = "bool" 
              argList  = "unsigned int a, const std::string comparator, unsigned int b">
      </method>


    </class>



  </package>
</gdd>



