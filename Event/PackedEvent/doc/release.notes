!-----------------------------------------------------------------------------
! Package     : Event/PackedEvent
! Responsible : Olivier Callot, Chris Jones
! Purpose     : Pack, Unpack and Compare containers for optimized persistency
!-----------------------------------------------------------------------------

!========================= PackedEvent v4r12 2012-09-28 =========================
! 2012-09-21 - Jianchun Wang
 - add UT hits & clusters

! 2012-08-28 - Paul Szczypka / Pawel Jalocha
 - change from VeloPix to VP in container names

!========================= PackedEvent v4r11 2012-06-25 =========================
! 2012-06-21 - Heinrich Schindler
 - Added MCVLHitPacker class 

!========================= PackedEvent v4r10 2012-04-28 =========================

! 2012-04-28 - Chris Jones
 - Some more tune tuning of the packing checks. 
 - Add the object key to and warnings that are issued.

! 2012-04-27 - Chris Jones
 - Some final fine tuning of the packing checks, to removal some residual
   warnings from LorentzVector energy checks.

! 2012-04-24 - Chris Jones
 - Improvements to the checks of Particle packing, to remove some false
   positives when comparing the momentum covariance matrix.
 - Change the 'mass' check for LorentzVectors to energy, to avoid machine 
   precision issues with comparsions of small differences of large numbers.

! 2012-04-23 - Chris Jones
 - New version of the Particle packing, to (try) and fix consistency problems.
 - Improve the CaloCluster checking to avoid some false positives.
 - Print the TES location of Particles and Vertices with packing problems.

! 2012-04-12 - Chris Jones
 - Various improvements to the packers, to improve the way the checks are 
   implemented. Allows the checking to be run directly by the packing algorithms.

! 2012-04-04 - Chris Jones
 - Fix gcc 4.6 warning in PackedCaloCluster

! 2012-04-01 - Chris Jones
 - Improve checks for PackedCaloCluster
 - Clean up PackedCaloHypo class

! 2012-03-30 - Chris Jones
 - Add a new PackedCaloCluster class

!========================= PackedEvent v4r9p1 2012-03-27 =========================

! 2012-03-27 - Chris Jones
 - Some small improvements to the PackedCluster class

!========================= PackedEvent v4r9 2012-03-26 =========================
! 2012-03-22 - Chris Jones
 - Fix the packing of RichPID and MuonPID objects, where the key was not 
   properly restored.

! 2012-03-16 - Olivier Callot
 - Fix the unpacking of Vertices: the reference is a long long,.

!========================= PackedEvent v4r8 2012-03-14 =========================
! 2012-03-14 - Olivier Callot
 - Fix the PackedVertex class: most of the information was not stored!
  https://savannah.cern.ch/bugs/?92524 

! 2012-03-06 - Olivier Callot
 - New class PackedCluster to store the Velo and ST clusters on track

!========================= PackedEvent v4r7 2012-02-28 =========================
! 2012-02-21 - Chris Jones
 - Update the way some references to Particles and Vertices are stored, to
   use 64 bit integers, to avoid packing problems.

! 2012-02-17 - Chris Jones
 - Update the RecVertex packed class to support the new RecVertex class 
   with track weights

! 2012-02-16 - Chris Jones
 - Reorganise things a bit w.r.t. the Particle and Vertex packing, to avoid
   some code duplication

!========================= PackedEvent v4r6 2012-01-31 =========================
! 2012-01-31 - Chris Jones
 - Update CLID for PackedParticle2Ints to 1591, to avoid a clash

! 2012-01-31 - Olivier Callot
 - Added class PackedParticle2Ints to pack the map between particle and LHCbIds
 - Added it to the dictionary
 - Added dedicated locations of stripping names
 - Fix teh classID of the packed relations

! 2012-01-26 - Chris Jones
 - Add missing entries in dict/PackedEventDict.h and dict/PackedEventDict.xml
   for the PackedDecReport and PackedRelation classes, needed for persistency

! 2012-01-25 - Olivier Callot
 - New class PackedRelation to store the Particle2Vertex relations.

! 2012-01-23 - Olivier Callot
 - New class PackedDecReport for packing the stripping report.
 - Modified PackedEventChecks.h to test the relative change for matrices.

!========================= PackedEvent v4r5 2011-02-22 =========================
! 2011-02-12 - Chris Jones
 - Initialise all data members of packed structs in default constructors. 
   Fixes various coverity defects.

!======================= PackedEvent v4r4 2011-01-31 =========================
! 2011-01-14 - Marco Cattaneo
 - Fix ICC warnings and remarks

!======================= PackedEvent v4r3 2010-09-27 =========================
! 2010-09-24 - Chris Jones
 - Fix compilation warning on windows, due to implicit double to float conversion

! 2010-09-23 - Chris Jones
 - Update LHCb::WeightsVector packing to store the packed weight as a short 
   int, exploiting the fact it will only ever be in the range 0 to 1

! 2010-09-22 - Chris Jones
 - Add packed data classes for LHCb::WeightsVector class.
 - Fix bugs in the PackedParticle and PackedVertex class, where some smartrefs 
   were stored in a way that would break things for WritePackedDst and 
   ReadPackedDst in Event/EventPacker
 - Add a few additional const statements here and there.

! 2010-09-18 - Chris Jones
 - Fix some compilation warnings from the Particle and Vertex packers on 
   gcc 3.4

! 2010-09-15 - Chris Jones
 - Add a first try at full implementations of the packers for Particles and
   Vertices, for use in the stripping. The packing is not 100% ideal yet, the
   MomCov matrix in the Particle class has room for improvement I think and 
   should be improved before this is put into production, but what is there 
   is OK and enough to start testing against.

!======================= PackedEvent v4r2 2010-07-19 =========================
! 2010-05-18 - Chris Jones
 - Add (empty) implementations of the Packers for Particles and Vertices.
   Details on how the packing is done to be implemented.

!======================= PackedEvent v4r1p1 2010-04-26 =======================
! 2010-04-11 - Chris Jones
 - Fix printout of packing version number in case of exception

!======================= PackedEvent v4r1 2010-03-17 =========================
! 2010-03-09 - Chris Jones
 - Update RichPID packing to support the Below Threshold DLLs

!======================= PackedEvent v4r0 2010-01-20 =========================
! 2009-12-12 - Chris Jones
 - Replace std::vector<int> with plain ints in PackedRichPID

!======================= PackedEvent v3r7 2009-11-13 =========================
! 2009-11-10 - Chris Jones
 - Update Muon and Rich PID packers to pack DLLs to integers

! 2009-11-04 - Christopher Rob Jones
 - Add packers for RichPIDs and MuonPIDs

! 2009-11-03 - Christopher Rob Jones
 - Update new packers to explicitly store the 'packing version' in the packed
   DataObject. Allows the 'version' of the data object to the be used to store
   any versioning needed in the original unpacked data.

! 2009-10-26 - Victor Coco
 - Add MCVeloPixHitPacker class in PackedMCHit file to allow packing of VeloPix
   informations.

! 2009-10-21 - Chris Jones
 - Add new packing classes for the packing of all MC information in Gauss
   and Boole.

!======================= PackedEvent v3r6 2009-09-03 =========================
! 2009-09-03 - Marco Cattaneo
 - In requirements, remove hack for Gaudi v21r1 to link dictionary on Windows 

! 2009-09-01 - Olivier Callot
 - Remove HitPattern from PackedTrack

! 2009-08-31 - Olivier Callot
 - Changes in PackedTrack due to changes in Track.

!======================= PackedEvent v3r5p1 2009-05-28 =======================
! 2009-05-28 - Marco Cattaneo
 - In requirements, add hack for Gaudi v21r1 to link dictionary on Windows 

!======================= PackedEvent v3r5 2009-02-18 =========================
! 2009-01-27 - Marco Cattaneo
 - Add missing dictionaries for new class

! 2009-01-26 - Olivier Callot
 - New class for PackedTwoProngVertex.
 - Remove version from Track, CaloHypo, Protoparticle and Vertex: 
   This exists in all DataObjects
 - Some new methods to access internal arrays.

!======================= PackedEvent v3r4 2008-11-17 =========================
! 2008-11-19 - Olivier Callot
 - Add a version field in the Packed events (Track, CaloHypo, ProtoParticle, RecVertex).

! 2008-11-17 - Olivier Callot
 - Add classes for PackedProtoParticle and PackedRecVertex

! 2008-11-12 - Olivier Callot
 - add classes for PackedTrack and PackedCaloHypo

!======================= PackedEvent v3r3 2008-03-03 =========================
! 2008-02-27 - Chris Jones
 - Add missing STL includes

!======================= PackedEvent v3r2 2007-06-05 =========================
! 2007-06-05 - Marco Cattaneo
 - Standardize location of dict generation files. Old ones broken in LCG_52a

!======================= PackedEvent v3r1 2007-03-01 =========================
! 2007-02-28 - Marco Clemencic
 - Replaced "static const CLID&" to "static const CLID"

!======================= PackedEvent v3r0 2007-01-30 =========================
! 2007-01-30 - Marco Cattaneo
 - Fix requirements for linking Reflex dict on Windows and retag
 
! 2006-12-07 - Florence RANJARD
 - remove build of library since it is done by reflex

! 2006-12-06 - Florence RANJARD
 - replace include_dirs with apply_pattern install_more_includes

!======================== PackedEvent v2r1 2006-06-28 ========================
! 2006-06-28 - Marco Cattaneo
 - Add default and copy constructor to PackedMCVertex struct

!======================== PackedEvent v2r0 2006-02-16 ========================
! 2006-02-16 - Marco Cattaneo
 - Major spring cleaning for use with LHCb v20r0:
   . Remove PackedCollision - not worthwhile to pack
   . Remove PackedTrStateP, PackedTrStateL - to be migrated to new State
   . Remove PackedTrack - to be reimplemented for new Track
   . Put remaining classes in LHCb:: namespace, generate reflex dictionary
   . Remove all code/decode/compare algorithms (to be moved to SimComponents 
     for MCParticle/MCVertex and a REC package for Track/State)
   . Remove DataOnDemand options

!======================== PackedEvent v1r2 2005-10-11 ========================
! 2005-10-11 - Marco Cattaneo
 - Update requirements to build reflex dictionaries

!======================== PackedEvent v1r1 2005-07-07 ========================
! 2005-07-06 - Olivier Callot
 - Decode the TrStoredMeasurements references in UnpackTrStoredTrack.cpp

!======================== PackedEvent v1r0 2005-06-02 ========================
! 2005-06-02 - Marco Cattaneo
 - Package renamed PackedEvent
 - StandardPacker.h moved to LHCbKernel
 - Changed default locations of packed containers to Event/pSim, Event/pDst

!=========================== Rdst v1r1 2005-05-23 ==========================
! 2005-05-23 - Marco Cattaneo
 - Replace Rdst.opts with UnpackDigi.opts and UnpackDst.opts. Use these options
   to unpack containers packed by Boole and Brunel via DataOnDemandSvc
 - Clear the registry address of containers that have been packed. Ensures that
   programs reading a packed file do not try to load the unpacked containers if
   they exist on an ancestor file.

! 2005-05-20 - Olivier Callot
 - Replace the (*it).linkID() by (*it)->key() when storing references, to 
   avoid problems when the SmartRef is created in the job, i.e. linkID() is 
   not yet defined.

!=========================== Rdst v1r0 2005-05-10 ==========================
! 2005-05-10 - Marco Cattaneo
 - Add default TES locations for Rdst classes
 - Add options/Rdst.opts for Rdst encoding and decoding via DataOnDemandSvc 

! 2005-03-18 - Olivier Callot
 - First attempt. The package has a class ( in Event ) for each container
   one want to compress, a struc describing the data and a DataObject which
   contains a vector of these struct.
  
   The xml directory contains the lcg_dict generation

   The Rdst directory contains a small tool to pack various double to int and
   the reverse, and also to pack-unpack references. This part could probably
   be improved

   The src directory has 3 algorithms per class, to Pack, Unpack and Compare
   each of the containers. The default for unpacking is in a different container
   to allow comparison. That should not be the final version !

   Re-grouping the 3 track classes, and the 3 MC information classes in a single
   algorithm would make less (automatically generated) lines of code.
