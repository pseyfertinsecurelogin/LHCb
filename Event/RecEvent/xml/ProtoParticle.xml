<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE gdd SYSTEM "gdd.dtd" >

<gdd>

  <package name="RecEvent">
<!-- ****************************************************************
     * ProtoParticle                                                *
     ****************************************************************-->

     <class
      author = "Patrick Koppenburg, Chris Jones"
      desc   = "ProtoParticle, precursor of Particles. It holds information relative to final/global reconstruction, mostly pointers to all elements used to make it"
      name   = "ProtoParticle"
      id     = "803"
      stdVectorTypeDef="TRUE"
     >

       <base name="KeyedObject&lt;int&gt;"/>
       &KeyedObject;

       <import name="Kernel/ParticleID" soft="TRUE"/>
       <import name="Event/CaloHypo"/>
       <import name="GaudiKernel/VectorMap"/>
       <import name="Event/Track"/>
       <import name="Event/RichPID" soft="TRUE"/>
       <import name="Event/MuonPID" soft="TRUE"/>

       <typedef
        type   = "GaudiUtils::VectorMap&lt;int,double&gt;"
        def    = "ExtraInfo"
        desc   = "Vector of additional information"
        access = "PUBLIC"
       />

       <enum
        desc="Additional information assigned to this ProtoParticle. A combination of the PID information from the RICH, CALO, MUON and VELO systems together with any additional user information"
        name="additionalInfo"
        access="PUBLIC" >

        <enumval name="NoPID"          value="0"    desc="Undefined PID Variable"/>

        <enumval name="RichDLLe"       value="100"  desc="The RICH delta log likelihood value for the electron hypothesis"/>
        <enumval name="RichDLLmu"      value="101"  desc="The RICH delta log likelihood value for the muon hypothesis"/>
        <enumval name="RichDLLpi"      value="102"  desc="The RICH delta log likelihood value for the pion hypothesis"/>
        <enumval name="RichDLLk"       value="103"  desc="The RICH delta log likelihood value for the kaon hypothesis"/>
        <enumval name="RichDLLp"       value="104"  desc="The RICH delta log likelihood value for the proton hypothesis"/>
        <enumval name="RichPIDStatus"  value="105"  desc="The RichPID bit packed PID status word"/>
        <enumval name="RichDLLbt"      value="106"  desc="The RICH delta log likelihood value for the 'Below Threshold' hypothesis"/>
        <enumval name="RichDLLd"       value="107"  desc="The RICH delta log likelihood value for the deuteron hypothesis"/>

        <enumval name="MuonMuLL"       value="200"  desc="The log likelihood from the MUON system for the ProtoParticle to be a muon"/>
        <enumval name="MuonBkgLL"      value="201"  desc="The log likelihood from the MUON system for the ProtoParticle to be background"/>
        <enumval name="MuonNShared"    value="202"  desc="The number of MUON hits that are shared with other ProtoParticles"/>
        <enumval name="MuonPIDStatus"  value="203"  desc="The MuonPID bit packed PID status word"/>
        <enumval name="InAccMuon"      value="204"  desc="Acceptance flag for MUON system"/>

        <enumval name="InAccSpd"           value="300"  desc="Acceptance flag for Spd-based  CaloID (charged)"/>
        <enumval name="InAccPrs"           value="301"  desc="Acceptance flag for Prs-based  CaloID (charged)"/>
        <enumval name="InAccEcal"          value="302"  desc="Acceptance flag for Ecal-based CaloID (charged)"/>
        <enumval name="InAccHcal"          value="303"  desc="Acceptance flag for Hcal-based CaloID (charged)"/>
        <enumval name="InAccBrem"          value="304"  desc="Acceptance flag for Brem-based CaloID (charged)"/>
        <enumval name="CaloTrMatch"        value="310"  desc="CaloID estimator : 2D chi2 for Track/CaloCluster matching (neutral + charged)"/>
        <enumval name="CaloElectronMatch"  value="311"  desc="CaloID estimator : 3D chi2 for Track/CaloHypo(e) matching (charged)"/>
        <enumval name="CaloBremMatch"      value="312"  desc="CaloID estimator : 3D chi2 for Track/CaloHypo(Brem) (charged)"/>
        <enumval name="CaloChargedSpd"     value="313"  desc="Spd Digits (0,1) associated to CaloHypo (charged)"/>
        <enumval name="CaloChargedPrs"     value="314"  desc="Prs Digits (0,sum) associated to CaloHypo (charged)"/>        
        <enumval name="CaloChargedEcal"    value="315"  desc="Cluster  energy associated to CaloHypo (charged)"/>        
        <enumval name="CaloChargedID"      value="316"  desc="CellID.all() associated to CaloHypo seed (neutral)"/>        
        <enumval name="CaloDepositID"      value="320"  desc="CaloID estimator : Spd/Prs deposit (neutral)"/>
        <enumval name="ShowerShape"        value="321"  desc="CaloID estimator : 2nd order moment of the cluster (neutral) "/>
        <enumval name="ClusterMass"        value="322"  desc="CaloID estimator : MergedPi0Alg cluster Mass (neutral)"/>
        <enumval name="CaloNeutralSpd"     value="323"  desc="Spd Digits (0,N) associated to CaloHypo (neutral)"/>
        <enumval name="CaloNeutralPrs"     value="324"  desc="Prs Digits (0,sum) associated to CaloHypo (neutral)"/>        
        <enumval name="CaloNeutralEcal"    value="325"  desc="Cluster energy associated to CaloHypo (neutral)"/>        
        <enumval name="CaloNeutralHcal2Ecal"    value="326"  desc="Hcal/Ecal energy ratio associated to CaloHypo (neutral)"/>        
        <enumval name="CaloNeutralE49"     value="327"  desc="2x2/3x3 energy ratio associated to CaloHypo (neutral)"/>        
        <enumval name="CaloNeutralID"      value="328"  desc="CellID.all() associated to CaloHypo seed (neutral)"/>        
        <enumval name="CaloSpdE"           value="330"  desc="CaloID estimator : Spd  hit (charged)"/>
        <enumval name="CaloPrsE"           value="331"  desc="CaloID estimator : Prs  energy deposit (charged)"/>
        <enumval name="CaloEcalE"          value="332"  desc="CaloID estimator : Ecal energy deposit (charged)"/>
        <enumval name="CaloHcalE"          value="333"  desc="CaloID estimator : Hcal energy deposit (charged)"/>
        <enumval name="CaloEcalChi2"       value="334"  desc="CaloID estimator : currently equivalent to CaloElectronMatch"/>
        <enumval name="CaloBremChi2"       value="335"  desc="CaloID estimator : currently equivalent to CaloBremMatch"/>
        <enumval name="CaloClusChi2"       value="336"  desc="CaloID estimator : currently equivalent to CaloTrMatch"/>
        <enumval name="CaloTrajectoryL"    value="337"  desc="CaloID estimator : Longitudinal parameter of Ecal Shower"/>
        <enumval name="CaloEoverP"         value="338"  desc="Electron e/p"/>
        <enumval name="CaloNeutralE19"        value="339"  desc="seed/3x3 ecal energy ratio associated to CaloHypo - input to neutralID (neutral)"/>        
        <enumval name="CaloPrsNeutralE19"     value="340"  desc="Seed/3x3 prs energy ratio associated to CaloHypo - input to neutralID (neutral)"/>        
        <enumval name="CaloPrsNeutralE49"     value="341"  desc="2x2/3x3 prs energy ratio associated to CaloHypo - input to neutralID  (neutral)"/>        
        <enumval name="CaloPrsNeutralE4max"   value="342"  desc="Max 2x2 prs energy  associated to CaloHypo - input to neutralID (neutral)"/>        
        <enumval name="CaloNeutralPrsM"       value="343"  desc="Prs multiplicity (0,N) associated to CaloHypo - input to neutralID (neutral)"/>        
        <enumval name="CaloShapeFr2r4"        value="344"  desc="Cluster Fr2r4 shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloShapeKappa"       value="345"  desc="Cluster Fkappa shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloShapeAsym"        value="346"  desc="Cluster Fasym shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloShapeE1"           value="347"  desc="Cluster E1/Ecl variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloShapeE2"           value="348"  desc="Cluster E2/Ecl variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsShapeE2"        value="349"  desc="Cluster EPrs2/E variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsShapeEmax"      value="350"  desc="Cluster max(EPrs)/E variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsShapeFr2"       value="351"  desc="Cluster Fr2 shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsShapeAsym"     value="352"  desc="Cluster Fasym shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsM"              value="353"  desc="Prs mult (>0) shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsM15"            value="354"  desc="Prs mult (>15) shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsM30"            value="355"  desc="Prs mult (>30) shape variable - input to gamma/pi0 separation (neutral)"/>        
        <enumval name="CaloPrsM45"            value="356"  desc="Prs mult (>45) shape variable - input to gamma/pi0 separation (neutral)"/>         
        <enumval name="CaloClusterCode"       value="357"  desc="Cluster configuration code"/>
        <enumval name="CaloClusterFrac"       value="358"  desc="Cluster energy fraction"/>        
        <enumval name="EcalPIDe"        value="360"  desc="Ecal-based DLL for electron-ID (charged)"/>
        <enumval name="PrsPIDe"         value="361"  desc="Prs-based  DLL for electron-ID (charged)"/>
        <enumval name="BremPIDe"        value="362"  desc="Brem-based DLL for electron-ID (charged)"/>
        <enumval name="HcalPIDe"        value="363"  desc="Hcal-based DLL for electron-ID (charged)"/>
        <enumval name="HcalPIDmu"       value="364"  desc="Hcal-based DLL for muon-ID DLL (charged)"/>
        <enumval name="EcalPIDmu"       value="365"  desc="Ecal-based DLL for muon-ID DLL (charged)"/>
        <enumval name="PhotonID"        value="380"  desc="Combined PDF for photonID - OBSOLETE DLL-based neutralID (neutral)"/>
        <enumval name="IsPhoton"        value="381"  desc="Gamma/Pi0 separation variable (neutral)"/>
        <enumval name="IsNotE"          value="382"  desc="MLP-based neutralID - anti-electron ID (neutral)"/>
        <enumval name="IsNotH"          value="383"  desc="MLP-based neutralID - anti-hadron ID   (neutral)"/>

        <enumval name="VeloCharge"      value="400"  desc="The dE/dx charge from the VELO system"/>

        <enumval name="TrackChi2PerDof" value="500"  desc="The track fit Chi^2 per degree of freedom"/>
        <enumval name="TrackNumDof"     value="501"  desc="Number of degrees of freedom in the track fit"/>
        <enumval name="TrackType"       value="502"  desc="The track type flag"/>
        <enumval name="TrackHistory"    value="503"  desc="The track history code"/>
        <enumval name="TrackP"          value="504"  desc="The track momentum"/>
        <enumval name="TrackPt"         value="505"  desc="The track transverse momentum"/>

        <enumval name="CombDLLe"        value="600"  desc="The combined delta log likelihood value for the electron hypothesis"/>
        <enumval name="CombDLLmu"       value="601"  desc="The combined delta log likelihood value for the muon hypothesis"/>
        <enumval name="CombDLLpi"       value="602"  desc="The combined delta log likelihood value for the pion hypothesis"/>
        <enumval name="CombDLLk"        value="603"  desc="The combined delta log likelihood value for the kaon hypothesis"/>
        <enumval name="CombDLLp"        value="604"  desc="The combined delta log likelihood value for the proton hypothesis"/>
        <enumval name="CombDLLd"        value="605"  desc="The combined delta log likelihood value for the deuteron hypothesis"/>

        <enumval name="ProbNNe"         value="700"  desc="The ANN probability for the electron hypothesis"/>
        <enumval name="ProbNNmu"        value="701"  desc="The ANN probability for the muon hypothesis"/>
        <enumval name="ProbNNpi"        value="702"  desc="The ANN probability for the pion hypothesis"/>
        <enumval name="ProbNNk"         value="703"  desc="The ANN probability for the kaon hypothesis"/>
        <enumval name="ProbNNp"         value="704"  desc="The ANN probability for the proton hypothesis"/>
        <enumval name="ProbNNghost"     value="705"  desc="The ANN probability for the ghost hypothesis"/>

        <enumval name="LastGlobal"      value="10000"  desc="The last official flag value. Private user variables should use flags greater than this value"/>

       </enum>

       <location
        name="Charged"
        place="Rec/ProtoP/Charged"
       />
       <location
        name="Upstream"
        place="Rec/ProtoP/Upstream"
       />
       <location
        name="Neutrals"
        place="Rec/ProtoP/Neutrals"
       />
       <location
        name="HltCharged"
        place="Hlt/ProtoP/Charged"
       />

       <location
        name="HltNeutrals"
        place="Hlt/ProtoP/Neutrals"
       />

       <relation
        name="calo"
        desc="References to possible calorimeter results"
        multiplicity="N"
        type="LHCb::CaloHypo"       
       />

       <relation
        name="track"
        desc="Reference to possible track used"
        type="LHCb::Track"
       />

       <relation
        name="richPID"
        desc="Reference to possible RichPID result"
        type="LHCb::RichPID"
       />

       <relation
        name="muonPID"
        desc="Reference to possible MuonPID result"
        type="LHCb::MuonPID"
       />

       <attribute
        name="extraInfo"
        desc="Additional particle ID and user information. Do not access directly, use *Info() methods instead."
        type="ExtraInfo"
        setMeth="FALSE"
        getMeth="TRUE"
       />

	<constructor 
		desc     = "Copy constructor. Creates a new ProtoParticle with the same physics information" 
		initList = "KeyedObject&lt;int&gt;(), m_extraInfo(proto.extraInfo()), m_calo(proto.calo()), m_track(proto.track()), m_richPID(proto.richPID()), m_muonPID(proto.muonPID())">
                <arg const="TRUE" name="proto" type="LHCb::ProtoParticle"/>
                <code/>
      	</constructor>

      <method
        name="clone"
        desc="Clone this ProtoParticle. Returns a pointer to a new ProtoParticle (user must take ownership)"
        type="LHCb::ProtoParticle*"
        const="TRUE"
        >
        <code>
          return new LHCb::ProtoParticle(*this);
        </code>
      </method>

       <method
        name    = "hasInfo"
        const   = "TRUE"
        desc    = "Does this protoparticle have information for the specified key"
        argList = "const int key"
        type    = "bool" >
        <code>
          return m_extraInfo.end() != m_extraInfo.find( key ) ;
        </code>
       </method>

       <method
        name    = "addInfo"
        desc    = "Add or replace new information, associated with the specified key"
        argList = "const int key, const double info"
        type    = "bool" >
        <code>
          return m_extraInfo.insert( key , info ).second ;
        </code>
       </method>

       <method
        name    = "info"
        desc    = "Extract the information associated with the specified key. If there is no such information the default value will be returned."
        argList = "const int key, const double def"
        type    = "double"
        const   = "TRUE" >
        <code>
           ExtraInfo::const_iterator i = m_extraInfo.find( key ) ;
           return m_extraInfo.end() == i ? def : i->second ;
        </code>
       </method>

       <method
        name    = "eraseInfo"
        desc    = "Erase the information associated with the specified key"
        argList = "const int key"
        type    = "LHCb::ProtoParticle::ExtraInfo::size_type" >
        <code>
          return m_extraInfo.erase( key ) ; 
        </code>
       </method>

       <method
        name    = "charge"
        desc    = "Returns the measured particle charge"
        type    = "int"
        const   = "TRUE" >
        <code>
         return ( track() != NULL ? track()->charge() : 0 );
        </code>
       </method>

       <method 
         name    = "fillStream" 
         desc    = "Print this ProtoParticle in a human readable way"
         type    = "std::ostream&amp;" 
         virtual = "FALSE" 
         const   = "TRUE">
         <arg 
           type = "std::ostream" 
           name = "s"/>
       </method>

       <method 
         name    = "clearCalo" 
         desc    = "Remove all Calo Hypo information of the given type"
         argList = "const LHCb::CaloHypo::Hypothesis hypo"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeCombinedInfo" 
         desc    = "Remove all Combined DLL PID information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeRichInfo" 
         desc    = "Remove all RICH information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeMuonInfo" 
         desc    = "Remove all MUON information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeCaloEcalInfo" 
         desc    = "Remove all CALO-ECAL information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeCaloBremInfo" 
         desc    = "Remove all CALO-BREM information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeCaloSpdInfo" 
         desc    = "Remove all CALO-SPD information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeCaloPrsInfo" 
         desc    = "Remove all CALO-PRS information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeCaloHcalInfo" 
         desc    = "Remove all CALO-HCAL information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "removeVeloInfo" 
         desc    = "Remove all VELO (dE/dx) information stored in this ProtoParticle"
         type    = "LHCb::ProtoParticle::ExtraInfo::size_type" 
         virtual = "FALSE" 
         const   = "FALSE">
       </method>

       <method 
         name    = "convertExtraInfo" 
         desc    = "Convert a string to an extra info enum"
         type    = "ProtoParticle::additionalInfo" 
         virtual = "FALSE" 
         static  = "TRUE"
         argList = "const std::string&amp; name"
         const   = "FALSE">
       </method>

    </class>
  </package>
</gdd>
