!--------------------------------------------------------------------------
! Package     : VeloDAQ
! Responsible : David Hutchcroft, Kurt Rinnert
!--------------------------------------------------------------------------

!========================= VeloDAQ v6r12 2014-07-29 =========================

! 2014-02-18 - David Hutchcroft
 - Added LHCb::RawEventLocation::Velo to the default location list for Stripping 21

!========================= VeloDAQ v6r11 2014-02-18 =========================
! 2014-02-17 - David Hutchcroft
 - DefaultVeloRawBufferDecoders.py to use RawEventLocations (used by VETRA nightlies)

! 2014-02-14 - Rob Lambert
 - Suppress velo decoder printout for nominal options (DAQ/RawEvent Other/RawEvent)

! 2014-02-12 - Rob Lambert
 - Adapt velo decoder tools to Decoder base classes, task #49078

!========================= VeloDAQ v6r10 2013-06-03 =========================
! 2013-05-27 - Marco Cattaneo
 - Fix clang32 warnings and UNINIT_CTOR defects

!========================= VeloDAQ v6r9p1 2013-04-22 =========================
! 2013-04-08 - Marco Cattaneo
 - Add __init.py__ to please CMake

!========================= VeloDAQ v6r9 2013-02-14 =========================
! 2013-01-25 - David Hutchcroft
 - Fixed Coverity warning about memory leak if lite to full cluster conversion failed.
 - Made a bad bank length set a non-abort ProcStatus.

! 2013-01-17 - David Hutchcroft
 - Replaced check on full bank length from decoding lite clusters (crashed BigEvents)

! 2013-01-16 - David Hutchcroft
 - Remove check on full bank length from decoding lite clusters by default
   Should make trigger slightly faster (some TELL1 failure modes could cause problems)

! 2012-12-20 - Marco Cattaneo
 - Fix Coverity defects
 - Use getIfExists
 - Remove unnecessary finalize() methods

!========================= VeloDAQ v6r8 2012-11-28 =========================
! 2012-11-21 - Marco Clemencic
 - Added CMake configuration file.

!========================= VeloDAQ v6r7 2012-06-25 =========================
! 2012-06-08 - Marco Cattaneo
 - Add RawEventLocations property to decoders, to allow to specify a 
   search list of locations. Default is to look for RawEventLocation::Other
   followed by RawEventLocation::Default.
 - RawEventLocation property is declared obsolete. If set, it is prepended
   to RawEventLocations and a warning is printed.

!========================= VeloDAQ v6r6 2011-12-14 =========================
! 2011-11-29 - David Hutchcroft
 - Hide warning by default due to problems with TELL1 cluster maker
   putting the same strip into two clusters (to be re-enabled for data/mc 
   after the TELL1 bug is resolved).

! 2011-11-28 - Marco Cattaneo
 - Fix coverity defect 28294: UNINIT_CTOR in VeloClustersToRaw
 - Add some missing calls to GaudiAlgorithm::finalize
 - Replace obsolete DeclareFactoryEntries includes
 - Fix trivial icc remarks

!========================= VeloDAQ v6r5 2011-11-08 =========================
! 2011-10-05 - Kurt Rinnert
 - Changed ZS decoder so it maintains event specific information in
   DeVeloSensor::Tell1EventInfo (requested by HLT). No change in behaviour as
   no client code for the new feature exists yet.

! 2011-09-29 - Kurt Rinnert
 - merged source coode for less-than predicate of internal and standard VELO
   cluster pointers.
 - added new algorithm to encode raw banks from VELO clusters

!========================= VeloDAQ v6r4 2011-07-27 =========================
! 2011-07-19 - Kurt Rinnert
 - added swtich to ZS decoder to allow decoding of clusters in the presence of
   errors for expert debugging.

! 2011-06-24 - Eduardo Rodrigues
 - Protected unprotected debug messages

!========================= VeloDAQ v6r3 2011-06-15 =========================
! 2011-04-27 - Tomasz Szumlak
 - fix of the problems reported by the coverity tool
 
!========================= VeloDAQ v6r2 2011-02-25 =========================
! 2011-02-17 - Tomasz Szumlak
 - a minor modification of the decoder code - add option IgnoreErrorBanks
   that makes using the TAE scan in VETRA more convinient

! 2011-02-14 - Tomasz Szumlak
 - considerably large changes in the VeloFull decoding software to cope
   with the nzs data that are sent together with the VeloError banks.
   PrepareVeloFullRawBuffer has been redesigned and rewritten. At the 
   moment, if an ErrorBank is detected it will automatically divide the
   nzs data stream. The normal data will be prepared, decoded and put at
   the default location whilst the data associated with an error bank will
   end up in the container that will be stored at 'Raw/Velo/DecodedPartialADCs'
   'Partial' here means that the nzs bank that was sent together with an
   error bank may not be complete.    

!========================= VeloDAQ v6r1 2011-02-01 =========================
! 2011-01-31 - Eduardo Rodrigues
 - PrepareVeloRawBuffer: default bank version set to v3

!========================= VeloDAQ v6r0p1 2010-10-25 =========================
! 2010-10-18 - David Hutchcroft
 - Default is now now ERROR from the decoding (can override in options)
 - Fix for online trigger farm flooding with header bit errors 
 - Does not solve the underlaying hardware issue

!=========================  VeloDAQ v6r0 2010-08-25 =======================
! 2010-08-03 - David Hutchcroft
 - Added a ProcStatus when the bank has a header bit error and is not 
   decoded

! 2010-07-28 - Tomasz Szumlak
 - nzs data stream decoder code changed to cope with corrupted banks
   PrepareVeloFullRawBuffer can now discard banks that contains data
   for which error was triggered. The corrupted data can be analysed
   in a separate job with flag:

   DecodeErrorStream = True 

!=========================  VeloDAQ v5r3 2010-07-20 =======================
! 2010-07-05 - David Hutchcroft
 - Adapted ProcStatus setting to changes in the interface and official 
   use policy

! 2010-06-30 - Chris Jones
 - Add a missing use statement for Event/RecEvent in cmt/requirements

! 2010-06-24 - David Hutchcroft
 - Changed how ProcStatus is used as per Savannah task #16278
   Now still set ProcStatus for any problem, but also set 
   ProcStatus->setAborted(true)
   when all clusters are removed due to high multiplicity
   Removed setFilterPass options as it was unused.

!=========================  VeloDAQ v5r2 2010-05-15 =======================
! 2010-05-13 - David Hutchcroft
 - Make lite decoding check full bank length, remove lite and full clusters 
   from the conatiners for corrupted TELL1 banks then continue normally

! 2010-05-13 - Rob Lambert
 - Review warnings/errors

!=========================  VeloDAQ v5r1 2010-04-26 =======================
! 2010-04-21 - David Hutchcroft
 - Added the ProcStatus object if the VELO decoding fails for any reason
   Added an option to setFilterPass(fail) (default to off) for HLT

!=========================  VeloDAQ v4r14 2010-04-18 =======================
! 2010-04-18 - Gerhard Raven
 - retag v5r0 as v4r14 so it can be used in Moore v8r10. cmt does not accept
   it when an application project has a package with a different major number
   from the underlying project

!=========================  VeloDAQ v5r0 2010-04-13 =======================
! 2010-04-13 - David Hutchcroft
 - On advice from Gerhard about the trigger changed the behviour when too
   many VELO clusters to printing an error and erasing all of the clusters 
   (both lite and full)

! 2010-04-13 - David Hutchcroft
 - Made decoding more that 10k Velo clusters an AbortEvent incident to cap 
   the tracking reconstruction time 

! 2010-04-06 - David Hutchcroft
 - Made a corrupted bank length in the full cluster decoding an Abort event
   incident and caused the algorthm processing of that event to cease.

! 2010-03-19 - Serena Oggero
 - DecodePileUpData : changed info() messages to Info() for non existing PU
   banks

!=========================  VeloDAQ v4r13 2010-03-18 ======================
! 2010-03-17 - Kurt Rinnert
 - ZS banks are no longer decoded when the TELL1 has set the error flag

! 2010-03-03 - Tomasz Szumlak
 - add protection against corrupted banks in Velo decoders

!=========================  VeloDAQ v4r12 2009-11-27 ======================
! 2009-11-25 - Kurt Rinnert
 - fixed memory leak in SmartVeloErrorDecoder
 - lowered message severity in PU decoding

!=========================  VeloDAQ v4r11 2009-11-18 ======================
! 2009-11-17 - Tomasz Szumlak
 - modify PrepareVeloFullRawBuffer algorithm to handle round-robin data
 - add protection in SmartVeloErrorDecoder against corrupted data, this
   problem needs to be better understood though 

!=========================  VeloDAQ v4r10 2009-11-16 ======================
! 2009-11-16 - Marco Cattaneo
 - In DecodeVeloRawBuffer.cpp:
   . Redo previous fix to stop printing any warnings by default. If DEBUG, ten
     warnings are printed
   . Protect a debug in the event loop with test on MsgLevel(MSG::DEBUG)
 - Replace endreq by endmsg

! 2009-11-12 - Tomasz Szumlak
 - change the type of message that is issued after duplicate cluster has
   been found - this is a know problem with Velo Tell1 firmware, from now
   on when this kind of situation is encountered a Warning message will
   be printed out  

! 2009-11-02 - Serena Oggero
 - bug fix in DecodePileUpData (switched to unsigned int)

! 2009-10-30 - Serena Oggero
 - bug fix in DecodePileUpData: there were some StatusCode FAILURE resulting
   in a crash when the Event was not retreived from the right location
 - added a property to disable the NZS banks decoding

!=========================  VeloDAQ v4r9 2009-10-20 =======================
! 2009-09-25 - Kurt Rinnert
 - bug fix in error bank decoder: there were no (empty) event infos inserted
   for PPFPGAs w/o errors resulting in a creash when trying to access an info 
   for a PPFPGA > number of PPFGA w/ errors. Of course the positions were also
   wrong. The only cases handled correctly before the fix were: 
   1. only errors in PPFPGA 0
   2. errors in all PPFPGAs   

!=========================  VeloDAQ v4r8 2009-09-09 =======================
! 2009-09-09 - Kurt Rinnert
 - work around for missing C99 standard header on Windows(TM)
 - removed unnecessary and potentially confusing 'using' directives for
   namespace LHCb

! 2009-09-03 - Marco Cattaneo
 - Remove obsolete file src/VeloDAQ_dll.cpp

! 2009-08-31 - Kurt Rinnert
 - fixed compiler warnings in DecodePileUpData

! 2009-08-04 - Serena Oggero
 - added DecodePileUpData, to decode PileUp banks (binary), both NZS and ZS.
   The output is put in the TES using the VeloCluster container with an 
   arbitrary value of 1 ADC per hit.

!=========================  VeloDAQ v4r7 2009-06-17 =======================
! 2009-06-06 - Kurt Rinnert
 - more robustness in full cluster decoding. Duplicate channel IDs now only
   causes a cluster to be dropped, not the entire bank for a source ID.

! 2009-06-05 - Kurt Rinnert
 - made PrepareVeloFullRawBuffer handle missing input container gracefully

!=========================  VeloDAQ v4r6 2009-05-08 =======================
! 2009-03-12 - Tomasz Szumlak
 - Change the default values for SectorCorrection and CableOrder variables
   no need to put additional lines into options file
 - Add flexibility to the SmartDecoder algorithm it no longer assumes
   anything about expected number of slots in error bank

!=========================  VeloDAQ v4r5 2009-02-20 =======================
! 2009-01-19 - David Hutchcroft
 - Added a sort to the decoding of the VELO lite clusters for the track fit

!=========================  VeloDAQ v4r4p1 2009-01-12 =====================
! 2008-12-09 - Marco Cattaneo
 - Fix gcc 4.3 compilation warnings

!=========================  VeloDAQ v4r4 2008-11-21 =======================
! 2008-10-28 - Tomasz Szumlak
 - Degrading some message level from info() to debug() - related with
   new data that can contain errors only for one ppfpga processor
 - Add property for PrepareVeloFullRawBuffer - used when consecutive
   events are analysed  

! 2008-10-16 - Tomasz Szumlak
 - Modified SmartErrorBankDecoder - if there is no error banks
   detected it continue processing and skips to the next event
   (some minor improvement that makes the code compatible with
    new RawEvent object and allows at the same time to process
    the older files)

! 2008-10-16 - Kurt Rinnert
 - The decoding of full VELO clusters for bank version 3 now checks whether a
   key already exists in the container before insertion.  This is a change in
   policy, not a bug fix.  We will no longer crash in the case of duplicate
   keys.  Instead an error message containing the problematic source ID is 
   issued and all clusters from this source are removed.  

! 2008-10-08 - Eduardo Rodrigues
 - added DefaultVeloRawBufferDecoders.py, a new Python helper module
   containing default configurations of the DecodeVeloRawBuffer algorithm
   for decoding into VeloLiteClusters or VeloClusters.
 - requirements file changed to produce configurable

!=========================  VeloDAQ v4r3 2008-09-04 =======================
! 2008-08-31 - Kurt Rinnert
 - missing input containers are no longer an error condition in NZS decoder
 - if input is missing, the cluster decoder now only creates empty containers 
   for the requested cluster type. 

! 2008-08-26 Tomasz Szumlak
 - add a new algoritm to deal with complicated error bank 
   SmartVeloErrorBankDecoder, this piece of code is able
   to check which fpga processors sent errors and deal with
   different size of the bank that depends on a raw file content
 - update PrepareVeloFullRawBuffer - error decoding is now decoupled
   from NZS data

! 2008-08-25 Malcolm John
 - add a cluster filter algorithm that filters the [lite]clusters into 
   new TES locations according to a few pre-defined criteria like 
   "is R", is phi", etc. Also maximum and and minimum limits can be required

!=========================  VeloDAQ v4r2 2008-05-26 =======================
! 2008-05-26 T Szumlak
 - adapt VeloFull decoding to run without ODIN bank; this behaviour
   is contorlable via options file 

!=========================  VeloDAQ v4r1 2008-04-17 =======================
! 2008-03-18 - Kurt Rinnert
 - minor bug fix introduced in latest update of VeloFullDecoder: a size check
   in the decoding method assumed ADC encoding.  This was removed, there was
   no check before anyway.  Need to decide whether we want a smart check or 
   rather issue an error message.

! 2008-03-13 - Kurt Rinnert
 - changes in DecodeVeloFullRawBuffer and VeloFullDecoder:
 - avoid unnecessary copies of large vectors 
 - protect frequent streams to debug() with a flag 
 - instatiate the various VeloFullDecoders only once, so their internal
   containers live for the whole job
 - made local ADC/Header/Ped buffers member variables, so their memory is
   only allocated once per job 
 - the target cable order is now configurable
 - the cable order correction is now off by default  
 - all TES input and output locations are now configurable

!=========================  VeloDAQ v4r0 2007-09-19 =======================
! 2007-09-19 - Kurt Rinnert
 - changed the encoder default back to bank version 2.  We have to sort out in
   more detail how the TELL1 creates the bank before we change the default.
   This will only be relevant for the next major MC production, so for now we
   live with the old version.

! 2007-09-19 - Tomasz Szumlak
 - Modified name of the NZS decoder 

! 2007-09-19 - Marco Cattaneo
 - Adapt to new location of Tell1Kernel includes

! 2007-09-17 - Tomasz Szumlak
 - decoding of the non-zero suppressed (NZS) banks added, new code can cope
   with decoding of the VeloFull data bank, PedestalBank and VeloErrorBank.
   Also EvtInfo object, that includes a number of informations critical from 
   point of view of the emulation, can be created. Beetle headers do not
   make a separate data stream but are part of the NZS header bank. The headers
   are also decoded and stored. All decoding routines follow closely appropriate
   EDMS notes describing TELL1 data formats.

! 2007-09-17 - Kurt Rinnert
 - make the decoder fail more graciously in case a source ID can not matched
   to a sensor number.  This should never happen and indicates an inconsistent
   conditions data base.  However, crashing seemed a bit harsh.  Now an error
   message is issued and the source ID is simply skipped.

! 2007-09-16 - Kurt Rinnert
 - introduced new version 3 of VELO raw buffer.  The only difference to
   version 2 is the treatment of interstrip positions.  These are now computed
   and rounded exactly like on the TELL1 board.  The default for
   PrepareVeloRawBuffer (i.e. Boole) is now the new, correct version.  The
   old behaviour can be obtained via the BankVersion property.
 - added proper bank version management to decoder.  The correct decoding is
   determined from the raw bank's version.  The version can also be enforced
   via the ForceBankVersion property (useful for testbeam data).  In all cases
   the code is protected against unsupported bank versions.  There is one
   dangerous scenario, however:  if a user decides to use a new version of
   Boole and reconstructs the events with and old version Brunel, there will
   be trouble if the bank version is not configured properly in either the
   encoder or the decoder.  Not a likely scenario, I hope.
   Otherwise this change is completely transparent.  Old data will be
   processed just like before.
 - made sure the decoder creates empty cluster and lite cluster containers on
   the TES even if the raw event is missing or it encounters an unsupported
   bank version.  If a byte count mismatch (corrupted raw bank) is discovered
   during the cluster decoding the clusters from this source ID are removed from
   the container.  Clusters from other source IDs will be still available in
   this case. 
     
!=========================  VeloDAQ v3r5 2006-08-30 =======================
! 2006-08-21 - Kurt Rinnert
 - It really makes no sense to create banks for sensors that can not me mapped
   to a Tell1 Id.  So the code now protects against this (following Eugenia's
   proposal more closely).  This check should not be necessary if the geometry
   XML and the CondDB sensor/Tell1 mapping are consistent.  But it's not
   expensive so better play it safe.

! 2006-08-21 - Kurt Rinnert
 - The source ID of the banks created by PrepareVeloRawBuffer are no longer
   fixed to the sensor number.  If the CondDB provides a sensor/Tell1 mapping,
   the Tell1 ID is used as a source ID for the bank.  This is mostly useful
   for simulation of test beam setups.  Note that the mapping technically also
   happens int the default setup.  In this case, however, the Tell1 Id maps
   trivially onto the sensor number itself, i.e. default behaviour is not
   affected by this feature.  The implementation closely follows a proposal
   by Eugenia Maria Puccio. 

! 2006-08-16 - Kurt Rinnert
 - added option to DecodeVeloRawBuffer that allows to properly decode
 clusters when the TELL1 encodes chip channels instead of software strip
 numbers.  No changes in default behaviour.

!=========================  VeloDAQ v3r4 2006-07-25 =======================
! 2006-07-24 - David Hutchcroft
 - Bug fix to previous update: was accidentally padding out clusters with
   zero strips

! 2006-07-19 - David Hutchcroft
 - Removed sorting from decoding to full clusters, speed up decoding to 
   lite clusters slightly as well.

! 2006-07-17 - Marco Hutchcroft
 - Fix some windows compilation warnings
 
! 2006-07-14 - David Hutchcroft
 - Changed to official message service access, initialised fastcontainer to 
   full size at in lite cluster decoding.

!=========================  VeloDAQ v3r3 2006-06-30 =======================
! 2006-04-21 - Kurt Rinnert
 - added TELL1 source ID to sensor number mapping in decoding

!=========================  VeloDAQ v3r2 2006-04-18 =======================
! 2006-04-18 - David Hutchcroft
 - Fixed code to cope with a single cluster in a sensor in strip zero 
   without crashing

! 2006-04-14 - David Hutchcroft
 - Fixed code to always write a bank for every sensor, even the empty sensors

! 2006-03-14 - Kurt Rinnert
 - fixed bug in test code, does not affect standard operations

!=========================  VeloDAQ v3r1 2006-03-14 =======================
! 2006-03-13 - Kurt Rinnert
 - moved less-than operator for InternalVeloClusters outside of encoding
  algorithm
 - changed definition of less-than for VeloClusters to match the definition
  for InternalVeloClusters
 - added testing code
 - fixed bugs revealed by testing with Boole v11r0:
  1.  In the decoding to full VeloClusters the interstrip position bits
  were not passed properly to the VeloLiteCluster. Independent of that the 
  VeloLiteCluster (or rather the SiCluster.ent) has a bug in the handling of
  the interstrip position bits which will reported to Chris and Matt.
  2.  In the decoding the treshold bit was only handled for one strip clusters
 - updated some documentation
 - some cosmetics

! 2006-03-10 - Kurt Rinnert
 - DecodeVeloRawBuffer now checks for the correct byte count when
  decoding to full VeloClusters
 - adapted to LHCb coding conventions

! 2006-03-09 - Kurt Rinnert
 - improved naming of cluster comparison functor
 - added optional dumping of input clusters in PrepareVeloRawBuffer

!=========================  VeloDAQ v3r0 2006-03-13 =======================
! 2006-03-09 - David Hutchcroft
 - Added retrieval of threshold from VeloLiteCluster to set bit

! 2006-03-07 - Kurt Rinnert
 - in the encoding, the high threshold bit is explicitely *not* handled
  anymore. This reflects the fact that this inforamtion can currently not
  be retrieved from the VeloLiteCluster.   As soon as VeloLiteCluster
  provides it, the encoding will handle it properly.
 - introduced enumeration type for bank version, similar to the ST
  implementation
 - introduced some constants with meaningful names for raw word sizes etc. 
  to avoid hardcoding this several times in the preparation of the raw buffer
 - the raw buffer is now added to the raw event using RawEvent::createBank() and
  RawEvent::adoptBank().  This allows to set the correct bank size in bytes. 
  The number of bytes in the bank is counted including the four header bytes but
  without the padding bytes at the end of the bank.

! 2006-03-02 - David Hutchcroft
 - fixed a bug in DecodeVeloRawBuffer where containers were generated and 
   placed many times
 - Fixed a bug in creation of VeloLiteClusters to set fracStripBits

! 2006-02-23 - Kurt Rinnert
 - finished implementation of decoding algorithm. The algorithm DecodeVeloRawBuffer
   can decode the raw buffer into VeloLiteClusters or VeloClusters (or both).
   The locations of the containers in the TES are fully configurable.
   The default is to decode into VeloLiteCluster, all locations their respective defaults.
 - fixed requirements file according to removed include directory

! 2006-02-23 - Kurt Rinnert
 - reorganised package, no headers exported anymore
 - made changes necessary to take advantage of the generic decoder in SiDAQ.
   This also fixes a problem on windows reported by Marco.

! 2006-02-23 - M Needham
 - Add missing velo policy trait

! 2006-02-21 - Marco Cattaneo
 - Cleaned up requirements
 - Adapt to new location of InternalVeloCluster

! 2006-02-17 - Kurt Rinnert
 - removed obsolete algorithm declaration

! 2006-02-17 - Kurt Rinnert
 - fixed crash in PrepareVeloRawBuffer related to incorrect
   resizing of the vector holding the sorted clusters

! 2006-02-16 - Kurt Rinnert
 - bug fix: sizeBits in VeloBitsPolicy was wrong after silly editing mistake
   during cosmetic reformatting

! 2006-02-16 - Kurt Rinnert
 - bug fix: adc value for one strip clusters was not limited to 127
 - overflow bit in cluster word is now set correctly when an adc overflow
   is detected

! 2006-02-15 - Kurt Rinnert
 - changed type of buffer_word into u_int32_t
 - protected reading of InternalVeloClusters from missing bank
 - added raw event writing

! 2006-02-15 - Kurt Rinnert, David Jones
 - introduced typedef for buffer_word, ensuring it is a 32 bit integer
 - implemented raw buffer encoding from InternalVeloClusters according to EDMS 637676. 
   Since there currently is no RawBuffer object definition available, the encoded 
   clusters are not yet put into the TES. Will be fixed soon hopefully.

! 2006-02-15 - Kurt Rinnert
 - removed more obsolete dependencies

! 2006-02-14 - Kurt Rinnert
 - updated requirements file: removed depency on no longer existing Kernel
   package, made new public include directory visible
 - added new public include directory for low level encoding/decoding classes
 - added new low level encoding/decoding classes

! 2006-02-14 - Kurt Rinnert
 - removed obsolete classes
 - reduced PrepareVeloRawBuffer and DecodeVeloRawBuffer to skeletons,
   meaningful new implementation coming up soon

!=========================  VeloDAQ v2r3p2 2005-07-08 =====================
! 2005-07-08 - Tomasz Szumlak
 - Fix problem of missing last Velo Phi bank in L1Buffer, in cases when this
   bank would be empty

!=========================  VeloDAQ v2r3p1 2005-03-07 =====================
! 2005-03-07 - Marco Cattaneo
 - Fix requirements to use DAQEvent v*

!==========================  VeloDAQ v2r3 2005-02-10 ======================
! 2005-02-10 - David Hutchcroft
 - Modified the code to produce banks for all of the sensors.

!==========================  VeloDAQ v2r2 2004-12-06 ======================
! 2004-12-03 - David Hutchcroft
 - Modified PrepareVeloRawBufferFPGA to use new Velo Detector element inteface

!==========================  VeloDAQ v2r1 2004-11-29 ======================
! 2004-10-26 - David Hutchcroft
 - Changed to sort by VeloChannelID not position (CP's modification)

!==========================  VeloDAQ v1r0 2004-03-15 ======================
! 2004-03-19 - Chris Parkes
 - added a high threshold bit for Olivier

! 2004-03-06 - Chris Parkes
 - Initial release.
   L1 and HLT Buffers for Velo.
   L1 code (Niels Tuning) previously in Trg area

 
