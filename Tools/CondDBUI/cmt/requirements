# $Id: requirements,v 1.47 2009-08-07 17:23:55 ishapova Exp $
package CondDBUI

version v2r22

branches cmt doc python scripts qt_resources
#ignore_pattern package_stamps

# ============== Dependencies ========================================
use GaudiPolicy v*

use Python  v* LCG_Interfaces -no_auto_imports
use COOL    v* LCG_Interfaces -no_auto_imports
apply_tag    NEEDS_PYCOOL
use ROOT    v* LCG_Interfaces -no_auto_imports

use DDDB       v*    Det -no_auto_imports

# library path needed for mysql backend
# use mysql         v*    LCG_Interfaces -no_auto_imports

# library path needed for sqlite backend
# use sqlite        v*    LCG_Interfaces -no_auto_imports

# library path needed for oracle backend
# use oracle        v*    LCG_Interfaces -no_auto_imports

# Needed for whatever reason...
use CORAL v* LCG_Interfaces -no_auto_imports

apply_tag    NEEDS_COOL_FACTORY

# This one is needed by CORAL
use XercesC v* LCG_Interfaces -no_auto_imports

use pyqt v* LCG_Interfaces -no_auto_imports
use pyqt_compat v* LCG_Interfaces -no_auto_imports
# Work-around for a couple of problems in pyqt_compat
macro pyqt_compat_native_version "$(pyqt_compat_config_version)_python$(Python_config_version_twodigit)"
path_prepend PYTHONPATH   "$(pyqt_compat_home)/lib/python$(Python_version)/site-packages/PyQt4"

# ====================================================================
# Install scripts and modules
# ====================================================================

apply_pattern install_python_modules
apply_pattern install_scripts

# ====================================================================
private
# ============== Environment =========================================

# CORAL path
#set  CORAL_AUTH_PATH       ${HOME}/private
#set  CORAL_DBLOOKUP_PATH   ${CONDDBUIROOT}/cmt

# FIXME: Temporary work-around until we get the fragments in PyQt LCG_Interfaces 
macro pyqt_resource_command "pyrcc4"
make_fragment pyqt_resource_header
make_fragment pyqt_resource_trailer
make_fragment pyqt_resource -header=pyqt_resource_header -trailer=pyqt_resource_trailer
pattern PyQtResource \
   private ; \
     macro PyQtResource<name><group>_output "<outputdir>/" ; \
   end_private ; \
   document pyqt_resource PyQtResource<name><group> <qrc_files> -group=<group>

macro pyqt_uic_command "python -m PyQt4.uic.pyuic"
make_fragment pyqt_uic_header
make_fragment pyqt_uic_trailer
make_fragment pyqt_uic -header=pyqt_uic_header -trailer=pyqt_uic_trailer
pattern PyQtUIC  \
   private ; \
     macro PyQtUIC<name><group>_output "<outputdir>/" ; \
   end_private ; \
   document pyqt_uic PyQtUIC<name><group> <ui_files> -group=<group>

# Generate the resource file for the browser
apply_pattern PyQtResource qrc_files=../qt_resources/*.qrc outputdir=../python/CondDBUI/Browser
apply_pattern PyQtUIC ui_files=../qt_resources/*.ui outputdir=../python/CondDBUI/Browser
macro_append CondDBUI_python_dependencies " PyQtResource PyQtUIC "
