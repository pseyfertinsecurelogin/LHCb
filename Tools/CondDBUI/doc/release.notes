! =============================================================================
! $Id: release.notes,v 1.94 2008-09-30 11:57:17 cattanem Exp $
! =============================================================================
! package Tools/CondDBUI
! package manager : Marco Clemencic
! =============================================================================

!===================== Tools/CondDBUI v2r13 2008-09-30 ========================
! 2008-09-26 - Marco Clemencic
 - Modified PyCoolDiff to truncate the IOVs to the selection range when writing
   to the output database.
 - Moved time related functions from MakeSnapshot to _internals.
 - Extended CondDBAdmin_Commit to accept an IOV for the conditions to insert. 

!===================== Tools/CondDBUI v2r12 2008-07-30 ========================
! 2008-07-30 - Marco Clemencic
 - Changed the name of the configurables for online partition from ONLINE-YYYYMM
   to ONLINE_YYYYMM.

! 2008-07-28 - Marco Clemencic
 - Work around for a problem with the LCG interface package for sip (affecting
   the distributed version of LCG 55a).
 - Minor fixes in CondDBUI.Management (CondDBAdmin_Commit.py). 

! 2008-07-23 - Marco Clemencic
 - Added the connection string to the opened database in the status bar of
   CondDBBrowser.py.
 - Bug-fixes in CondDBAdmin_Commit.py and PyCoolDiff to support local tags. 

! 2008-07-22 - Marco Clemencic
 - Modified CondDBAdmin_MakeSnapshot.py to accept interval of validity as UTC.
 - Allow ONLINE-YYYYMM as partition alias in CondDBBrowser.py and
   CondDBAdmin_MakeSnapshot.py.

!===================== Tools/CondDBUI v2r11 2008-07-16 ========================
! 2008-07-16 - Marco Clemencic
 - Minor esthetic improvements.
 - Added method CondDB.isMultiVersionFolder.

! 2008-07-14 - Marco Clemencic
 - Minor improvements (documentation) to CondDBAdmin_Commit.py and
   CondDBAdmin_MakeSnapshot.py.

! 2008-07-10 - Marco Clemencic
 - Removed some obsolete files:
   - cmt/dblookup.xml
   - scripts/create_SQLDDDB.py
 - Converted the python module CondDBUI.Admin to a module with sub-modules
 - Added the scripts
   - CondDBAdmin_Commit.py: takes user-provided patches and apply them to
       official database.
   - CondDBAdmin_MakeSnapshot.py: simple script to make CondDB snapshots.
 - Added the script CondDBAdmin_Commit.py, which takes user-provided patches
   and apply them to official database.
 - Modify CondDBBrowser.py to accept on the command line the name of a CondDB
   partition and open the corresponding database (guessed from SQLDDDB options)
 - Minor improvements in other scripts

!===================== Tools/CondDBUI v2r10 2008-06-30 ========================
! 2008-06-26 - Marco Clemencic
 - Adapted to work with the new SEAL-less COOL and CORAL too.
   (Only for the LFCReplicaService)

!===================== Tools/CondDBUI v2r9 2008-04-18 =========================
! 2008-04-17 - Marco Clemencic
 - Preliminary support for dump of the DB image to files based option files.
 - Fix for usage of channel IDs (to/from DB).

!===================== Tools/CondDBUI v2r8 2008-02-22 =========================
! 2008-02-21 - Marco Clemencic
 - Added few member functions to CondDB:
   + moveTagOnLocalTag
     Move a tag to encompass the changes identified by another tag
   + resolveTag
     Return the local tag for a parent tag, or None if there is not relation
   + findNodesWithTag
     Return the list of folders (or foldersets) in which the local tag is
     defined.

!===================== Tools/CondDBUI v2r7 2008-01-28 =========================
! 2008-01-23 - Marco Clemencic
 - Added a the sub-module CondDBUI.Admin for functions needed for administrative
   tasks. Currently it contains:
    - check_addition_db_content:
      checks if the database we are going to merge into another one contains
      only files which are not yet there
    - merge_and_tag:
      insert the content of a database into another one (after calling
      'check_addition_db_content') and apply a tag to the new files (move it if
      it already exists)

! 2008-01-08 - Marco Clemencic
 - Fixed a problem with local tags in dump_db_to_files.py.

! 2008-01-07 - Marco Clemencic
 - Fixed a bug preventing to open a database.

! 2007-12-20 - Marco Clemencic
 - Added the possibility to specify a connection string on the command line of
   CondDBBrowser.py to open a database.
 
! 2007-12-14 - Marco Clemencic
 - Fixed a bug (introduced with the latest changes) that prevents the addition
   of new conditions.

!===================== Tools/CondDBUI v2r6 2007-12-07 =========================
                            NEEDS LCGCMT >= 53f (Gaudi v19r6)
! 2007-12-07 - Marco Clemencic
 - Use pyqt from LCG_Interfaces without hacks.
 - Restructured the package to use the installation of python modules and
   scripts as in Gaudi
   - the main module is now CondDBUI
   - the browser is now CondDBBrowser.py
 - Changes in CondDBUI:
   - Added the methods cloneTag and moveTagOnNodes to CondDBUI.CondDB.
   - CondDB connection string can now contain environment variables.
 - Changes in the browser
   - Modified the way configuration and settings are stored.
   - Added default entries for the official databases.
 - Added 2 small scripts that wrap the merge and diff functions in CondDBUI
   (merge_db.py and diff_db.py).  

! 2007-12-07 - Kurt Rinnert
 - Fixed a problem with ValidityKeyWrapper.__eq__

                            NEEDS LCGCMT >= 53c (Gaudi v19r5)
! 2007-10-03 - Marco Clemencic
 - Use pyqt from LCG_Interfaces. It still needs a small hack because of a
   problem with PyQt v3 installation.

!===================== Tools/CondDBUI v2r5 2007-09-04 =========================
! 2007-08-21 - Marco Clemencic
 - Fixed 2 bugs in the browser
   - Check if the environment variable CORAL_DBLOOKUP_PATH exists before using
     it.
   - Work around for a problem with the character encoding. Qt uses UTF, while
     we have to use ISO-8859-1 in the database. 

!===================== Tools/CondDBUI v2r4 2007-07-05 =========================
! 2007-07-05 - Marco Clemencic
 - Added a script to dump a database snapshot to XML files:
     dump_db_to_files.py.
   The user can/should provide a tag and the "event time" (as nanoseconds).

! 2007-06-28 - Marco Clemencic
 - Fixed the local copy of PyCoolDiff
 - Added a wrapper for PyCoolCopy.copy to support LFCReplicaSvc
 - Added the function conddbui.merge to copy the content of a database
   into another (where folders already exist). It is needed to merge the
   database obtained with PyCoolDiff.diff into the master database.
 - Made PyCoolDiff working also when the provided tag is not valid for all the
   folders
 - Added the utility function CondDB.getCOOLNode to retrieve a IFolder or
   IFolderSet object from the database without having to check the type of the
   requested node.

!===================== Tools/CondDBUI v2r3 2007-06-15 =========================
                            NEEDS LCGCMT >= 52
! 2007-06-06 - Marco Clemencic
 - Fixed a problem in copy_files_to_db.py: the destination path was not taken
   into account when correcting the relative paths to included files (SYSTEM
   tag)

! 2007-06-04 - Marco Clemencic
 - Allow transparent usage of CORAL LFCReplicaService (enabled if the
   environment variable CORAL_LFC_BASEDIR is set).
 - Use Qt from LCG_Interfaces

!===================== Tools/CondDBUI v2r2 2007-04-23 =========================
! 2007-03-30 - Marco Clemencic
 - Fixed a bug in the requirements: it was still depending on SQLDDDB v*.
   (now it should be DDDB)
 - Made it possible to pass to copy_files_to_db.py files with system ids
   starting with "conddb:" without breaking them.

!===================== Tools/CondDBUI v2r1 2007-03-20 =========================
! 2007-03-12 - Marco Clemencic
 - Fixed a small bug when trying to find the tags of a folder.
   If one of the tags in and ancestor folderset does not have a correspondent
   in the folder, COOL throws na exception that was not properly handled.

!===================== Tools/CondDBUI v2r0 2007-03-07 =========================
                            NEEDS LCGCMT >= 50

! 2007-03-06 - Marco Clemencic
 - Changed the path to the sessions database to
   "$HOME/.conddb_browser_sessions.dbm"
 - Use ISO date-time format (yyyy-mm-dd HH:MM:SS.S) for the validity key.

! 2007-02-28 - Marco Clemencic
 - Clean up in requirements (depend on Det/SQLDDDB)
 - Improved the scripts to create the SQLite (SQLDDDB) database from CVS

! 2007-02-20 - Marco Clemencic
 - bug-fix in create_SQLDDDB.py
 - added the script to check if a tag is available (checktag.py)

! 2007-02-19 - Marco Clemencic
 - Moved the script to generate SQLDDDB from Det/SQLDDDB to CondDBUI:
      python/create_SQLDDDB.py
   (Det/SQLDDDB does not depend anymore on CondDBUI)

! 2007-02-18 - Marco Clemencic
 - Few updates by Anatoly

! 2007-02-17 - Marco Clemencic
 - Moved all the dependencies (8and environment variables) needed by the
   browser to the private section to avoid unwanted dependencies.
   The dependencies to import the module conddbui are in the public with
   -no_auto_imports
 - Commented out Oracle and MySQL dependencies
 - Typo fixed in conddbui.py
 - Added copy_files_to_db_wiht_time.py:
   version of copy_files_to_db that inserts randomly generated IOVs
   (contribution by Anatoly Solomin)

! 2007-02-16 - Marco Clemencic
 - Some clean up in the requirements
 - Some more comments in copy_files_to_db.py

! 2007-02-15 - Marco Clemencic
 - Few bug-fixes in tag-handling.

! 2007-02-14 - Marco Clemencic
 - Updated to COOL_2_0_0.
 - Small changes in the GUI
 - Added the possibility to open emacs to edit the condition
 - Improvements to copy_files_to_db (core moved to conddbui)
 - Moved conddbui tests to a different python script
 - Some clean up in the documentation
 - Added a python function to compute differences between two DBs
   (this is temporary because it will appear in COOL)

!=========== Tools/CondDBUI v1r1 2007-02-01 ===================================
! 2007-02-01 - Marco Clemencic
 - Added use of CLHEP because of a bug in PyCintex.

! 2007-01-30 - Marco Clemencic
 - SQLite connection string changed back to the old one because the new one is
   supported only by COOL 2.x

! 2007-01-24 - Marco Clemencic
 - Changed the SQLite connection string.

! 2006-12-21 - Marco Clemencic
 - Added a function to change the encoding of XML files to ISO-8895-1 before
   storing them (it is the default encoding on Oracle at CERN).
 - Added alias CondDBBrowser

! 2006-11-06 - Marco Clemencic
 - Minor cosmetic changes
 - Add the function CondDB.isTagReady to check the availability of a tag for a
   given node (folder or folder-set).

!=========== Tools/CondDBUI v1r0 2006-09-29 ===================================
! 2006-09-29 - Nicolas Gilardi
 - Changed the browser's "Super User" menu into an "Advanced" menu with
   "New Node", "Delete Node" and "Delete Tag" actions. This menu is always
   available for databases opened in Read/Write mode. The "Delete Database"
   action has been commented out for now.
 - Cleaned up the requirement file.

! 2006-09-28 - Nicolas Gilardi
 - fixed a bug in guidialog.addConditionDialog which was preventing to reload
   correctly the payload of the selected object in the stack.
 - fixed a small bug in guidialog.addConditionDialog, which was displaying an
   error when trying to reload objects from an empty list.
 - modified the default selection behaviour of the addConditionDialog stack.
   Now default selection is on the last element of the stack, not the first
   one.
 - tried to fix the issue of default payload key selection in
   addConditionDialog but did not succeed so far.
 - tried to fix the "modal" behaviour of guidialog.conditionEditorDialog when
   opened from addConditionDialog, but did not succeed.

! 2006-09-27 - Nicolas Gilardi
 - fixed a small bug in guiwin.createDBSlice related to the changes in
   PyCoolCopy module new import "strategy".

! 2006-09-25 - Nicolas Gilardi - Marco Clemencic
 - Modified CondDB.payloadToMD5 to be compatible with multiple payload keys.
 - Fixed a bug in CondDB.payloadToMD5 which was preventing to retrieve data for
   non HEAD tags.
 - Fixed a compatibility problem with the PyCoolCopy version provided with
   COOL 1.3.2 version, which does not have the "append" function. The conddbui
   package now imports the full PyCoolCopy package. The "Append" button in the
   browser's slicing dialog is disabled if no append function is available.

! 2006-09-22 - Nicolas Gilardi
 - Due to a misunderstanding of how payload storage worked, a major change in
   the behavior of conddbui.storeXMLString was necessary. the "data" parameter
   is now supposed to be a dictionary structured like the attribute list that
   will be stored in the folder, i.e. with the same list of keys.
 - The list of tags in the browser's data display is now correctly refreshed
   when selecting a channel.
 - The list of folders of the slicing dialog is properly cleaned when exiting
   the dialog.
 - copy_files_to_db.py can now handle multiple payload keys. They are extracted
   from XML filenames of the form keyname@foldername.xml.

! 2006-09-19 - Nicolas Gilardi
 - modified the interface to database slicing in the browser. It is now
   possible to select more than one tag at a time for a given selection object.

! 2006-09-13 - Nicolas Gilardi
 - Created two new functions for conddbui.Tag objects: Tag.getAncestorTagsDict
   and Tag.getAncestorTags. They work pretty much the same as
   Tag.getAncestorsBranches and Tag.getAncestors, except that they return tag
   objects instead of strings.
 - Modified the display of tag names in the tag selection list of the browser.
   The name of the node where the tag is defined is also given between brackets.
 - Added a check box which filters out the _auto_ tags.

! 2006-09-12 - Nicolas Gilardi
 - Created a new dialog class guidialogs.slicingDialog. It is called by the
   browser via the menu Database/Slice. It allows to copy data from the active
   database to a target database (SQLite) which may exist or not. This is a
   limited version of the PyCoolCopy.append function. It works, but need more
   tests.
   WARNING: as the PyCoolCopy.append function isn't available in COOL_1_3_2, a
   copy of the latest version is provided in CondDBUI/v0r4/src.
 - added the importation of append from PyCoolCopy in conddbui.py.
 - cleaned up guidialogs.py from obsolete dialogs.

! 2006-09-08 - Nicolas Gilardi
 - Fixed a bug in guiextras.myDBTable
 - removed obsolete guibridge.py and recursive_tag.py files from cvs
 
! 2006-09-04 - Nicolas Gilardi
 - Fixed a bug preventing to display single version conditions in the browser

! 2006-08-31 - Marco Clemencic
 - Fixed a bug in the copy_files_to_db.py script that was preventing to add
   data to an existing database.

! 2006-08-22 - Marco Clemencic
 - Added the script to create a DB from files

! 2006-08-16 - Nicolas Gilardi
 - Completely changed the Add Condition dialog to take into account multiple
   storage keys. Now, you have to set the object information (IoV, channelID),
   and select the payload to edit in the list of keys, on the right. Pressing
   the "Edit" button will open an internal editor with one tab per selected
   key. You can edit the text from there (xml header is provided by default,
   but not verified). It is possible to load text from file, or to export the
   current text to a file. 3 buttons are also provided to help writing the main
   tags used in the xml data.
   When payload edition is done, user can "add" the condition object to the
   stack, at the bottom of the Add Condition dialog.
 - Modified the Create Node dialog in the browser. User have to provide some
   storage keys for the attribute list specification. Default is simply 'data'.
 - Modified conddbui.CondDB.createNode(). When creating a folder, a list of
   storage keys must be provided. Its default value is ['data'].
 - Created conddbui.CondDB.getFolderStorageKeys(). It returns the list of keys
   used by the Coral Attribute List to store the payload in the given folder.
 - Modified conddbui.CondDB.storeXMLStringList. The XMLList parameter is now a
   list of dictionaries, with keys 'path' (folder path), 'channel' (channel ID),
   'payload' (a dictionary similar to the attribute list which will be stored
   in the database), 'since' and 'until' (the bounds of the IoV).
 - Modified conddbui.CondDB.storeXMLString. It is now possible to give a
   Coral Attribute List key (which is "data" by default).

! 2006-08-04 - Nicolas Gilardi
 - Created the guiextras.CondDBTree class which includes the database tree and
   the location bar of the browser.
 - Moved guiwin.myWindow.createLeaves and guiwin.myWindow.resolvePath to
   guiextras.CondDBTree.
 - Put back the possibility to open an SQLite database not defined in the
   dblookup.xml file:
   * go to menu DataBase/Open
   * in the DBLookUp Alias combo box, chose "SQLite file" (last entry)
   * this opens a file selection dialog. Chose the sqlite file you want
   * back to the open database dialog, give the Database Name
   * press Open DB when done.

! 2006-08-03 - Nicolas Gilardi
 - Created CondDB.getAttributeList and CondDB.getAttributeListList (ok, not a
   nice name, but it is the best I have so far). They behave like
   CondDB.getXMLString and CondDB.getXMLStringList, but get the full contents
   of the Coral Attribute List in a dictionary instead of a single XML string.
 - Simplified CondDB.getXMLString and CondDB.getXMLStringList to reduce code
   duplication with the above new functions.
 - Updated guitree.guiChannel.setCondDBCache to store dictionaries of XML data
   instead of a single XML string.
 - Updated guiextras.MyDBTable._fillTable and guiextras.MyDBTable.showData to
   fit with the new behaviour of the guiChannel's CondDBCache.

! 2006-08-03 - Nicolas Gilardi
 - Major modifications of the guiextras.myDBTable class:
    * It is now a horizontal QSplitter.
    * The text viewer is always visible on the left.
    * The panel on the right contains: the IOV/Tag filter, the IOV table and
      the payload selector.
    * Payload selector is a new element which will contain the keys of the
      Coral Attribute List stored in the database. For the moment, it contains
      only one entry named "data", but in the future, it may contain many
      different elements.
    * The text displayed depend on both the active line of the IOV table and
      the selected element of the payload selector.
    * It is possible to save the content of the text viewer to a file by
      pressing the button "Export to File".
 - Backward compatible modifications of CondDBUI.getXmlString and
   CondDBUI.getXmlStringList to which it is now possible to give a Coral
   Attribute List key (which is "data" by default).

! 2006-07-28 - Nicolas Gilardi
 - Created a special environment variable $CONDDBUI_SESSIONS_PATH where the
   sessions.dbm file is expected to be.
 - Added support for "read only" and "read/write" access to COOL databases. Two
   functions modified: conddbui.CondDB.__init__ and conddbui.CondDB.openDatabase.
   Both now take an optional argument "readOnly" with default value to "True".
 - Major changes in the open database behavior of the Browser:
    * Existing databases _must_ be defined in $CORAL_DBLOOKUP_PATH/dblookup.xml.
      The browser provides a list of database aliases taken from this file.
    * Sessions are no longer user defined: the last 5 sessions are stored in
      sessions.dbm and accessible via the menu DataBase/Recent.
 - Modified the browser's exception catcher to display which function catched
   the exception.
 - Updated CondDBUI module documentation

! 2006-07-19 - Nicolas Gilardi
 - Fixed a bug in the browser which prevented to display the payload if an
   ancestor tag was selected.
   
!=========== Tools/CondDBUI v0r4 2006-09-29 ===================================
! 2006-06-20 - Nicolas Gilardi
 - Added attribute "connectionString" to the CondDB class
 - Fixed the compatibility issue of CondDBUI with Windows path
 - Modified the browser to include tagging and database creation and dropping
 - Fixed some bugs in the browser when adding conditions
 - Updated Browser's documentation
 - Created epydoc documentation for CondDBUI
 - Cleaned the doc directory

! 2006-06-16 - Marco Clemencic
 - made CondDB.dropDatabase a class function
 - modified the test function to use a temporary file for the SQLite db
 - fixed few comments
 - added a work-around for the problem of PyCool intercepting the command line
   argments

! 2006-06-09 - Nicolas Gilardi
 **** requires LCGCMT 43b  ****
 - renamed python/conddbui.py to python/browser.py
 - added src/conddbui.py: user API to LHCb COOL
 - documentation isn't up to date


