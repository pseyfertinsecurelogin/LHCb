<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<extension class="GaudiTest.GaudiExeTest" kind="test">
<argument name="program"><text>gaudirun.py</text></argument>
<argument name="args"><set>
  <text>-v</text>
</set></argument>
<argument name="options"><text>
# Options of the test job
from Gaudi.Configuration import *

from Configurables import EventIndexer, EventIndexerTest__FakeIndexerData as FakeIndexerData

ei = EventIndexer()
#ei.OutputLevel = DEBUG

fid = FakeIndexerData("FakeIndexerData")
fid.FakeInputFiles = ["first_file.dst", "second_file.dst"]


EventDataSvc(ForceLeaves=True)

app = ApplicationMgr()
app.EvtSel = "NONE"
app.EvtMax = 20
app.TopAlg = [FakeIndexerData("FakeIndexerData"), ei]

</text></argument>
<argument name="reference"><text>refs/no_stream.ref</text></argument>
<argument name="use_temp_dir"><enumeral>true</enumeral></argument>
<argument name="validator"><text>
validateWithReference()
# countErrorLines()

from subprocess import Popen, PIPE
root = Popen(['root', '-b', '-n', 'indexer_data.root'],
             stdin=PIPE, stdout=PIPE, stderr=PIPE)
out, err = root.communicate('index->Scan()\n')

result['index_dump'] = result.Quote(out)

findReferenceBlock("""
************************************************************************************
*    Row   * data.stri * data.stre *  data.lfn * data.posi * data.even * data.runN *
************************************************************************************
*        0 *           *           * first_fil *         1 *         1 *    123456 *
*        1 *           *           * first_fil *         2 *         2 *    123456 *
*        2 *           *           * first_fil *         3 *         3 *    123456 *
*        3 *           *           * first_fil *         4 *         4 *    123456 *
*        4 *           *           * first_fil *         5 *         5 *    123456 *
*        5 *           *           * first_fil *         6 *         6 *    123456 *
*        6 *           *           * first_fil *         7 *         7 *    123456 *
*        7 *           *           * first_fil *         8 *         8 *    123456 *
*        8 *           *           * first_fil *         9 *         9 *    123456 *
*        9 *           *           * first_fil *        10 *        10 *    123456 *
*       10 *           *           * second_fi *         1 *        11 *    123456 *
*       11 *           *           * second_fi *         2 *        12 *    123456 *
*       12 *           *           * second_fi *         3 *        13 *    123456 *
*       13 *           *           * second_fi *         4 *        14 *    123456 *
*       14 *           *           * second_fi *         5 *        15 *    123456 *
*       15 *           *           * second_fi *         6 *        16 *    123456 *
*       16 *           *           * second_fi *         7 *        17 *    123456 *
*       17 *           *           * second_fi *         8 *        18 *    123456 *
*       18 *           *           * second_fi *         9 *        19 *    123456 *
*       19 *           *           * second_fi *        10 *        20 *    123456 *
************************************************************************************
""", out, signature_offset=1)

</text></argument>
</extension>
